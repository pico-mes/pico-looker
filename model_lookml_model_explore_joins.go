/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// LookmlModelExploreJoins struct for LookmlModelExploreJoins
type LookmlModelExploreJoins struct {
	// Name of this join (and name of the view to join)
	Name string `json:"name,omitempty"`
	// Fields referenced by the join
	DependentFields []string `json:"dependent_fields,omitempty"`
	// Fields of the joined view to pull into this explore
	Fields []string `json:"fields,omitempty"`
	// Name of the dimension in this explore whose value is in the primary key of the joined view
	ForeignKey string `json:"foreign_key,omitempty"`
	// Name of view to join
	From string `json:"from,omitempty"`
	// Specifies whether all queries must use an outer join
	OuterOnly bool `json:"outer_only,omitempty"`
	// many_to_one, one_to_one, one_to_many, many_to_many
	Relationship string `json:"relationship,omitempty"`
	// Names of joins that must always be included in SQL queries
	RequiredJoins []string `json:"required_joins,omitempty"`
	// SQL expression that produces a foreign key
	SqlForeignKey string `json:"sql_foreign_key,omitempty"`
	// SQL ON expression describing the join condition
	SqlOn string `json:"sql_on,omitempty"`
	// SQL table name to join
	SqlTableName string `json:"sql_table_name,omitempty"`
	// The join type: left_outer, full_outer, inner, or cross
	Type string `json:"type,omitempty"`
	// Label to display in UI selectors
	ViewLabel string `json:"view_label,omitempty"`
}
