/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// User struct for User
type User struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// URL for the avatar image (may be generic)
	AvatarUrl string `json:"avatar_url,omitempty"`
	// URL for the avatar image (may be generic), does not specify size
	AvatarUrlWithoutSizing string `json:"avatar_url_without_sizing,omitempty"`
	// API 3 credentials
	CredentialsApi3 []CredentialsApi3 `json:"credentials_api3,omitempty"`
	CredentialsEmail CredentialsEmail `json:"credentials_email,omitempty"`
	// Embed credentials
	CredentialsEmbed []CredentialsEmbed `json:"credentials_embed,omitempty"`
	CredentialsGoogle CredentialsGoogle `json:"credentials_google,omitempty"`
	CredentialsLdap CredentialsLdap `json:"credentials_ldap,omitempty"`
	CredentialsLookerOpenid CredentialsLookerOpenid `json:"credentials_looker_openid,omitempty"`
	CredentialsOidc CredentialsOidc `json:"credentials_oidc,omitempty"`
	CredentialsSaml CredentialsSaml `json:"credentials_saml,omitempty"`
	CredentialsTotp CredentialsTotp `json:"credentials_totp,omitempty"`
	// Full name for display (available only if both first_name and last_name are set)
	DisplayName string `json:"display_name,omitempty"`
	// EMail address
	Email string `json:"email,omitempty"`
	// (Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login
	EmbedGroupSpaceId int64 `json:"embed_group_space_id,omitempty"`
	// First name
	FirstName string `json:"first_name,omitempty"`
	// Array of ids of the groups for this user
	GroupIds []int64 `json:"group_ids,omitempty"`
	// ID string for user's home folder
	HomeFolderId string `json:"home_folder_id,omitempty"`
	// Unique Id
	Id int64 `json:"id,omitempty"`
	// Account has been disabled
	IsDisabled bool `json:"is_disabled,omitempty"`
	// Last name
	LastName string `json:"last_name,omitempty"`
	// User's preferred locale. User locale takes precedence over Looker's system-wide default locale. Locale determines language of display strings and date and numeric formatting in API responses. Locale string must be a 2 letter language code or a combination of language code and region code: 'en' or 'en-US', for example.
	Locale string `json:"locale,omitempty"`
	// Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')
	LookerVersions []string `json:"looker_versions,omitempty"`
	// User's dev workspace has been checked for presence of applicable production projects
	ModelsDirValidated bool `json:"models_dir_validated,omitempty"`
	// ID of user's personal folder
	PersonalFolderId int64 `json:"personal_folder_id,omitempty"`
	// User is identified as an employee of Looker
	PresumedLookerEmployee bool `json:"presumed_looker_employee,omitempty"`
	// Array of ids of the roles for this user
	RoleIds []int64 `json:"role_ids,omitempty"`
	// Active sessions
	Sessions []Session `json:"sessions,omitempty"`
	// Per user dictionary of undocumented state information owned by the Looker UI.
	UiState map[string]string `json:"ui_state,omitempty"`
	// User is identified as an employee of Looker who has been verified via Looker corporate authentication
	VerifiedLookerEmployee bool `json:"verified_looker_employee,omitempty"`
	// User's roles are managed by an external directory like SAML or LDAP and can not be changed directly.
	RolesExternallyManaged bool `json:"roles_externally_managed,omitempty"`
	// User can be directly assigned a role.
	AllowDirectRoles bool `json:"allow_direct_roles,omitempty"`
	// User can be a direct member of a normal Looker group.
	AllowNormalGroupMembership bool `json:"allow_normal_group_membership,omitempty"`
	// User can inherit roles from a normal Looker group.
	AllowRolesFromNormalGroups bool `json:"allow_roles_from_normal_groups,omitempty"`
	// Link to get this item
	Url string `json:"url,omitempty"`
}
