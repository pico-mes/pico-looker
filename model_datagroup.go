/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// Datagroup struct for Datagroup
type Datagroup struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// UNIX timestamp at which this entry was created.
	CreatedAt int64 `json:"created_at,omitempty"`
	// Unique ID of the datagroup
	Id int64 `json:"id,omitempty"`
	// Name of the model containing the datagroup. Unique when combined with name.
	ModelName string `json:"model_name,omitempty"`
	// Name of the datagroup. Unique when combined with model_name.
	Name string `json:"name,omitempty"`
	// UNIX timestamp before which cache entries are considered stale. Cannot be in the future.
	StaleBefore int64 `json:"stale_before,omitempty"`
	// UNIX timestamp at which this entry trigger was last checked.
	TriggerCheckAt int64 `json:"trigger_check_at,omitempty"`
	// The message returned with the error of the last trigger check.
	TriggerError string `json:"trigger_error,omitempty"`
	// The value of the trigger when last checked.
	TriggerValue string `json:"trigger_value,omitempty"`
	// UNIX timestamp at which this entry became triggered. Cannot be in the future.
	TriggeredAt int64 `json:"triggered_at,omitempty"`
}
