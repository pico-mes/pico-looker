/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// LookmlModelExploreFieldMapLayer struct for LookmlModelExploreFieldMapLayer
type LookmlModelExploreFieldMapLayer struct {
	// URL to the map layer resource.
	Url string `json:"url,omitempty"`
	// Name of the map layer, as defined in LookML.
	Name string `json:"name,omitempty"`
	// Specifies the name of the TopoJSON object that the map layer references. If not specified, use the first object..
	FeatureKey string `json:"feature_key,omitempty"`
	// Selects which property from the TopoJSON data to plot against. TopoJSON supports arbitrary metadata for each region. When null, the first matching property should be used.
	PropertyKey string `json:"property_key,omitempty"`
	// Which property from the TopoJSON data to use to label the region. When null, property_key should be used.
	PropertyLabelKey string `json:"property_label_key,omitempty"`
	// The preferred geographic projection of the map layer when displayed in a visualization that supports multiple geographic projections.
	Projection string `json:"projection,omitempty"`
	// Specifies the data format of the region information. Valid values are: \"topojson\", \"vector_tile_region\".
	Format string `json:"format,omitempty"`
	// Specifies the URL to a JSON file that defines the geographic extents of each region available in the map layer. This data is used to automatically center the map on the available data for visualization purposes. The JSON file must be a JSON object where the keys are the mapping value of the feature (as specified by property_key) and the values are arrays of four numbers representing the west longitude, south latitude, east longitude, and north latitude extents of the region. The object must include a key for every possible value of property_key.
	ExtentsJsonUrl string `json:"extents_json_url,omitempty"`
	// The minimum zoom level that the map layer may be displayed at, for visualizations that support zooming.
	MaxZoomLevel int64 `json:"max_zoom_level,omitempty"`
	// The maximum zoom level that the map layer may be displayed at, for visualizations that support zooming.
	MinZoomLevel int64 `json:"min_zoom_level,omitempty"`
}
