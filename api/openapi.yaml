openapi: 3.0.1
info:
  contact:
    name: Looker Team
    url: https://help.looker.com
  description: |+
    ### Authorization

    The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can
    create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **/login** endpoint to
    obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests.
    For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)

    ### Client SDKs

    The Looker API is a RESTful system that should be usable by any programming language capable of making
    HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger
    JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available
    as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)

    ### Try It Out!

    The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging
    in with API3 credentials, you can use the "Try It Out!" buttons to call the API directly from the documentation
    page to interactively explore API features and responses.

    Note! With great power comes great responsibility: The "Try It Out!" button makes API calls to your live Looker
    instance. Be especially careful with destructive API operations such as `delete_user` or similar.
    There is no "undo" for API operations.

    ### Versioning

    Future releases of Looker will expand this API release-by-release to securely expose more and more of the core
    power of Looker to API client applications. API endpoints marked as "beta" may receive breaking changes without
    warning (but we will try to avoid doing that). Stable (non-beta) API endpoints should not receive breaking
    changes in future releases.
    For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning)

    ### In This Release

    The following are a few examples of noteworthy items that have changed between API 3.0 and API 3.1.
    For more comprehensive coverage of API changes, please see the release notes for your Looker release.

    ### Examples of new things added in API 3.1 (compared to API 3.0):

    * [Dashboard construction](#!/3.1/Dashboard/) APIs
    * [Themes](#!/3.1/Theme/) and [custom color collections](#!/3.1/ColorCollection) APIs
    * Create and run [SQL Runner](#!/3.1/Query/run_sql_query) queries
    * Create and run [merged results](#!/3.1/Query/create_merge_query) queries
    * Create and modify [dashboard filters](#!/3.1/Dashboard/create_dashboard_filter)
    * Create and modify [password requirements](#!/3.1/Auth/password_config)

    ### Deprecated in API 3.0

    The following functions and properties have been deprecated in API 3.0.  They continue to exist and work in API 3.0
    for the next several Looker releases but they have not been carried forward to API 3.1:

    * Dashboard Prefetch functions
    * User access_filter functions
    * User API 1.0 credentials functions
    * Space.is_root and Space.is_user_root properties. Use Space.is_shared_root and Space.is_users_root instead.

    ### Semantic changes in API 3.1:

    * [all_looks()](#!/3.1/Look/all_looks) no longer includes soft-deleted looks, matching [all_dashboards()](#!/3.1/Dashboard/all_dashboards) behavior.
    You can find soft-deleted looks using [search_looks()](#!/3.1/Look/search_looks) with the `deleted` param set to True.
    * [all_spaces()](#!/3.1/Space/all_spaces) no longer includes duplicate items
    * [search_users()](#!/3.1/User/search_users) no longer accepts Y,y,1,0,N,n for Boolean params, only "true" and "false".
    * For greater client and network compatibility, [render_task_results](#!/3.1/RenderTask/render_task_results) now returns
    HTTP status **202 Accepted** instead of HTTP status **102 Processing**
    * [all_running_queries()](#!/3.1/Query/all_running_queries) and [kill_query](#!/3.1/Query/kill_query) functions have moved into the [Query](#!/3.1/Query/) function group.


    If you have application code which relies on the old behavior of the APIs above, you may
    continue using the API 3.0 functions in this Looker release. We strongly suggest you
    update your code to use API 3.1 analogs as soon as possible.

  license:
    name: EULA
    url: https://picomes.cloud.looker.com/eula
  title: Looker API 3.1 Reference
  version: 3.1.0
  x-looker-release-version: 7.18.30
servers:
- url: https://picomes.cloud.looker.com:443/api/3.1
tags:
- description: API Authentication
  name: ApiAuth
- description: Manage User Authentication Configuration
  name: Auth
- description: Manage Color Collections
  name: ColorCollection
- description: Manage General Configuration
  name: Config
- description: Manage Database Connections
  name: Connection
- description: Manage Content
  name: Content
- description: Manage Dashboards
  name: Dashboard
- description: Run Data Actions
  name: DataAction
- description: Manage Datagroups
  name: Datagroup
- description: Manage Folders
  name: Folder
- description: Manage Groups
  name: Group
- description: Manage Homepage
  name: Homepage
- description: Manage Integrations
  name: Integration
- description: Run and Manage Looks
  name: Look
- description: Manage LookML Models
  name: LookmlModel
- description: Manage Projects
  name: Project
- description: Run and Manage Queries
  name: Query
- description: Manage Render Tasks
  name: RenderTask
- description: Manage Roles
  name: Role
- description: Manage Scheduled Plans
  name: ScheduledPlan
- description: Session Information
  name: Session
- description: Manage Spaces
  name: Space
- description: Manage Themes
  name: Theme
- description: Manage Users
  name: User
- description: Manage User Attributes
  name: UserAttribute
- description: Manage Workspaces
  name: Workspace
paths:
  /query_tasks:
    post:
      description: |
        ### Create an async query task

        Creates a query task (job) to run a previously created query asynchronously. Returns a Query Task ID.

        Use [query_task(query_task_id)](#!/Query/query_task) to check the execution status of the query task.
        After the query task status reaches "Complete", use [query_task_results(query_task_id)](#!/Query/query_task_results) to fetch the results of the query.
      operationId: create_query_task
      parameters:
      - description: Row limit (may override the limit in the saved query).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Apply model-specified formatting to each result.
        in: query
        name: apply_formatting
        schema:
          type: boolean
      - description: Apply visualization options to results.
        in: query
        name: apply_vis
        schema:
          type: boolean
      - description: Get results from cache if available.
        in: query
        name: cache
        schema:
          type: boolean
      - description: Render width for image formats.
        in: query
        name: image_width
        schema:
          format: int64
          type: integer
      - description: Render height for image formats.
        in: query
        name: image_height
        schema:
          format: int64
          type: integer
      - description: Generate drill links (only applicable to 'json_detail' format.
        in: query
        name: generate_drill_links
        schema:
          type: boolean
      - description: Force use of production models even if the user is in development
          mode.
        in: query
        name: force_production
        schema:
          type: boolean
      - description: Retrieve any results from cache even if the results have expired.
        in: query
        name: cache_only
        schema:
          type: boolean
      - description: Prefix to use for drill links (url encoded).
        in: query
        name: path_prefix
        schema:
          type: string
      - description: Rebuild PDTS used in query.
        in: query
        name: rebuild_pdts
        schema:
          type: boolean
      - description: Perform table calculations on query results
        in: query
        name: server_table_calcs
        schema:
          type: boolean
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQueryTask'
        description: Query parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTask'
          description: query_task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Query Async
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /query_tasks/multi_results:
    get:
      description: |
        ### Fetch results of multiple async queries

        Returns the results of multiple async queries in one request.

        For Query Tasks that are not completed, the response will include the execution status of the Query Task but will not include query results.
        Query Tasks whose results have expired will have a status of 'expired'.
        If the user making the API request does not have sufficient privileges to view a Query Task result, the result will have a status of 'missing'
      operationId: query_task_multi_results
      parameters:
      - description: List of Query Task IDs
        explode: false
        in: query
        name: query_task_ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Multiple query results
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Multiple Async Query Results
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
  /query_tasks/{query_task_id}:
    get:
      description: |
        ### Get Query Task details

        Use this function to check the status of an async query task. After the status
        reaches "Complete", you can call [query_task_results(query_task_id)](#!/Query/query_task_results) to
        retrieve the results of the query.

        Use [create_query_task()](#!/Query/create_query_task) to create an async query task.
      operationId: query_task
      parameters:
      - description: ID of the Query Task
        in: path
        name: query_task_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTask'
          description: query_task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Async Query Info
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
  /query_tasks/{query_task_id}/results:
    get:
      description: |
        ### Get Async Query Results

        Returns the results of an async query task if the query has completed.

        If the query task is still running or waiting to run, this function returns 204 No Content.

        If the query task ID is invalid or the cached results of the query task have expired, this function returns 404 Not Found.

        Use [query_task(query_task_id)](#!/Query/query_task) to check the execution status of the query task
        Call query_task_results only after the query task status reaches "Complete".

        You can also use [query_task_multi_results()](#!/Query/query_task_multi_results) retrieve the
        results of multiple async query tasks at the same time.

        #### SQL Error Handling:
        If the query fails due to a SQL db error, how this is communicated depends on the result_format you requested in `create_query_task()`.

        For `json_detail` result_format: `query_task_results()` will respond with HTTP status '200 OK' and db SQL error info
        will be in the `errors` property of the response object. The 'data' property will be empty.

        For all other result formats: `query_task_results()` will respond with HTTP status `400 Bad Request` and some db SQL error info
        will be in the message of the 400 error response, but not as detailed as expressed in `json_detail.errors`.
        These data formats can only carry row data, and error info is not row data.
      operationId: query_task_results
      parameters:
      - description: ID of the Query Task
        in: path
        name: query_task_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: The query results.
        204:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: The query is not finished
        400:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The Query Task Id was not found or the results have expired.
      summary: Get Async Query Results
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
  /queries/{query_id}:
    get:
      description: |+
        ### Get a previously created query by id.

        A Looker query object includes the various parameters that define a database query that has been run or
        could be run in the future. These parameters include: model, view, fields, filters, pivots, etc.
        Query *results* are not part of the query object.

        Query objects are unique and immutable. Query objects are created automatically in Looker as users explore data.
        Looker does not delete them; they become part of the query history. When asked to create a query for
        any given set of parameters, Looker will first try to find an existing query object with matching
        parameters and will only create a new object when an appropriate object can not be found.

        This 'get' method is used to get the details about a query for a given id. See the other methods here
        to 'create' and 'run' queries.

        Note that some fields like 'filter_config' and 'vis_config' etc are specific to how the Looker UI
        builds queries and visualizations and are not generally useful for API use. They are not required when
        creating new queries and can usually just be ignored.

      operationId: query
      parameters:
      - description: Id of query
        in: path
        name: query_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Query
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
  /queries/slug/{slug}:
    get:
      description: |
        ### Get the query for a given query slug.

        This returns the query for the 'slug' in a query share URL.

        The 'slug' is a randomly chosen short string that is used as an alternative to the query's id value
        for use in URLs etc. This method exists as a convenience to help you use the API to 'find' queries that
        have been created using the Looker UI.

        You can use the Looker explore page to build a query and then choose the 'Share' option to
        show the share url for the query. Share urls generally look something like 'https://looker.yourcompany/x/vwGSbfc'.
        The trailing 'vwGSbfc' is the share slug. You can pass that string to this api method to get details about the query.
        Those details include the 'id' that you can use to run the query. Or, you can copy the query body
        (perhaps with your own modification) and use that as the basis to make/run new queries.

        This will also work with slugs from Looker explore urls like
        'https://looker.yourcompany/explore/ecommerce/orders?qid=aogBgL6o3cKK1jN3RoZl5s'. In this case
        'aogBgL6o3cKK1jN3RoZl5s' is the slug.
      operationId: query_for_slug
      parameters:
      - description: Slug of query
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Query for Slug
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
  /queries:
    post:
      description: |+
        ### Create a query.

        This allows you to create a new query that you can later run. Looker queries are immutable once created
        and are not deleted. If you create a query that is exactly like an existing query then the existing query
        will be returned and no new query will be created. Whether a new query is created or not, you can use
        the 'id' in the returned query with the 'run' method.

        The query parameters are passed as json in the body of the request.

      operationId: create_query
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        description: Query
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Query
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /queries/{query_id}/run/{result_format}:
    get:
      description: |+
        ### Run a saved query.

        This runs a previously saved query. You can use this on a query that was generated in the Looker UI
        or one that you have explicitly created using the API. You can also use a query 'id' from a saved 'Look'.

        The 'result_format' parameter specifies the desired structure and format of the response.

        Supported formats:

        | result_format | Description
        | :-----------: | :--- |
        | json | Plain json
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | md | Simple markdown
        | xlsx | MS Excel spreadsheet
        | sql | Returns the generated SQL rather than running the query
        | png | A PNG image of the visualization of the query
        | jpg | A JPG image of the visualization of the query


      operationId: run_query
      parameters:
      - description: Id of query
        in: path
        name: query_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Format of result
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Row limit (may override the limit in the saved query).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Apply model-specified formatting to each result.
        in: query
        name: apply_formatting
        schema:
          type: boolean
      - description: Apply visualization options to results.
        in: query
        name: apply_vis
        schema:
          type: boolean
      - description: Get results from cache if available.
        in: query
        name: cache
        schema:
          type: boolean
      - description: Render width for image formats.
        in: query
        name: image_width
        schema:
          format: int64
          type: integer
      - description: Render height for image formats.
        in: query
        name: image_height
        schema:
          format: int64
          type: integer
      - description: Generate drill links (only applicable to 'json_detail' format.
        in: query
        name: generate_drill_links
        schema:
          type: boolean
      - description: Force use of production models even if the user is in development
          mode.
        in: query
        name: force_production
        schema:
          type: boolean
      - description: Retrieve any results from cache even if the results have expired.
        in: query
        name: cache_only
        schema:
          type: boolean
      - description: Prefix to use for drill links (url encoded).
        in: query
        name: path_prefix
        schema:
          type: string
      - description: Rebuild PDTS used in query.
        in: query
        name: rebuild_pdts
        schema:
          type: boolean
      - description: Perform table calculations on query results
        in: query
        name: server_table_calcs
        schema:
          type: boolean
      responses:
        200:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
            image/png:
              schema:
                type: string
            image/jpeg:
              schema:
                type: string
          description: Query
        400:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            text:
              schema:
                $ref: '#/components/schemas/ValidationError'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/png:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Query
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
  /queries/run/{result_format}:
    post:
      description: |+
        ### Run the query that is specified inline in the posted body.

        This allows running a query as defined in json in the posted body. This combines
        the two actions of posting & running a query into one step.

        Here is an example body in json:
        ```
        {
          "model":"thelook",
          "view":"inventory_items",
          "fields":["category.name","inventory_items.days_in_inventory_tier","products.count"],
          "filters":{"category.name":"socks"},
          "sorts":["products.count desc 0"],
          "limit":"500",
          "query_timezone":"America/Los_Angeles"
        }
        ```

        When using the Ruby SDK this would be passed as a Ruby hash like:
        ```
        {
         :model=>"thelook",
         :view=>"inventory_items",
         :fields=>
          ["category.name",
           "inventory_items.days_in_inventory_tier",
           "products.count"],
         :filters=>{:"category.name"=>"socks"},
         :sorts=>["products.count desc 0"],
         :limit=>"500",
         :query_timezone=>"America/Los_Angeles",
        }
        ```

        This will return the result of running the query in the format specified by the 'result_format' parameter.

        Supported formats:

        | result_format | Description
        | :-----------: | :--- |
        | json | Plain json
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | md | Simple markdown
        | xlsx | MS Excel spreadsheet
        | sql | Returns the generated SQL rather than running the query
        | png | A PNG image of the visualization of the query
        | jpg | A JPG image of the visualization of the query


      operationId: run_inline_query
      parameters:
      - description: Format of result
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Row limit (may override the limit in the saved query).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Apply model-specified formatting to each result.
        in: query
        name: apply_formatting
        schema:
          type: boolean
      - description: Apply visualization options to results.
        in: query
        name: apply_vis
        schema:
          type: boolean
      - description: Get results from cache if available.
        in: query
        name: cache
        schema:
          type: boolean
      - description: Render width for image formats.
        in: query
        name: image_width
        schema:
          format: int64
          type: integer
      - description: Render height for image formats.
        in: query
        name: image_height
        schema:
          format: int64
          type: integer
      - description: Generate drill links (only applicable to 'json_detail' format.
        in: query
        name: generate_drill_links
        schema:
          type: boolean
      - description: Force use of production models even if the user is in development
          mode.
        in: query
        name: force_production
        schema:
          type: boolean
      - description: Retrieve any results from cache even if the results have expired.
        in: query
        name: cache_only
        schema:
          type: boolean
      - description: Prefix to use for drill links (url encoded).
        in: query
        name: path_prefix
        schema:
          type: string
      - description: Rebuild PDTS used in query.
        in: query
        name: rebuild_pdts
        schema:
          type: boolean
      - description: Perform table calculations on query results
        in: query
        name: server_table_calcs
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        description: inline query
        required: true
      responses:
        200:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
            image/png:
              schema:
                type: string
            image/jpeg:
              schema:
                type: string
          description: Query Result
        400:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            text:
              schema:
                $ref: '#/components/schemas/ValidationError'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/png:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Inline Query
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /queries/models/{model_name}/views/{view_name}/run/{result_format}:
    get:
      description: |+
        ### Run an URL encoded query.

        This requires the caller to encode the specifiers for the query into the URL query part using
        Looker-specific syntax as explained below.

        Generally, you would want to use one of the methods that takes the parameters as json in the POST body
        for creating and/or running queries. This method exists for cases where one really needs to encode the
        parameters into the URL of a single 'GET' request. This matches the way that the Looker UI formats
        'explore' URLs etc.

        The parameters here are very similar to the json body formatting except that the filter syntax is
        tricky. Unfortunately, this format makes this method not currently callable via the 'Try it out!' button
        in this documentation page. But, this is callable when creating URLs manually or when using the Looker SDK.

        Here is an example inline query URL:

        ```
        https://looker.mycompany.com:19999/api/3.0/queries/models/thelook/views/inventory_items/run/json?fields=category.name,inventory_items.days_in_inventory_tier,products.count&f[category.name]=socks&sorts=products.count+desc+0&limit=500&query_timezone=America/Los_Angeles
        ```

        When invoking this endpoint with the Ruby SDK, pass the query parameter parts as a hash. The hash to match the above would look like:

        ```ruby
        query_params =
        {
          :fields => "category.name,inventory_items.days_in_inventory_tier,products.count",
          :"f[category.name]" => "socks",
          :sorts => "products.count desc 0",
          :limit => "500",
          :query_timezone => "America/Los_Angeles"
        }
        response = ruby_sdk.run_url_encoded_query('thelook','inventory_items','json', query_params)

        ```

        Again, it is generally easier to use the variant of this method that passes the full query in the POST body.
        This method is available for cases where other alternatives won't fit the need.

        Supported formats:

        | result_format | Description
        | :-----------: | :--- |
        | json | Plain json
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | md | Simple markdown
        | xlsx | MS Excel spreadsheet
        | sql | Returns the generated SQL rather than running the query
        | png | A PNG image of the visualization of the query
        | jpg | A JPG image of the visualization of the query


      operationId: run_url_encoded_query
      parameters:
      - description: Model name
        in: path
        name: model_name
        required: true
        schema:
          type: string
      - description: View name
        in: path
        name: view_name
        required: true
        schema:
          type: string
      - description: Format of result
        in: path
        name: result_format
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
            image/png:
              schema:
                type: string
            image/jpeg:
              schema:
                type: string
          description: Query
        400:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            text:
              schema:
                $ref: '#/components/schemas/ValidationError'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/png:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Url Encoded Query
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
  /login:
    post:
      description: |
        ### Present client credentials to obtain an authorization token

        Looker API implements the OAuth2 [Resource Owner Password Credentials Grant](https://looker.com/docs/r/api/outh2_resource_owner_pc) pattern.
        The client credentials required for this login must be obtained by creating an API3 key on a user account
        in the Looker Admin console. The API3 key consists of a public `client_id` and a private `client_secret`.

        The access token returned by `login` must be used in the HTTP Authorization header of subsequent
        API requests, like this:
        ```
        Authorization: token 4QDkCyCtZzYgj4C2p2cj3csJH7zqS5RzKs2kTnG4
        ```
        Replace "4QDkCy..." with the `access_token` value returned by `login`.
        The word `token` is a string literal and must be included exactly as shown.

        This function can accept `client_id` and `client_secret` parameters as URL query params or as www-form-urlencoded params in the body of the HTTP request. Since there is a small risk that URL parameters may be visible to intermediate nodes on the network route (proxies, routers, etc), passing credentials in the body of the request is considered more secure than URL params.

        Example of passing credentials in the HTTP request body:
        ````
        POST HTTP /login
        Content-Type: application/x-www-form-urlencoded

        client_id=CGc9B7v7J48dQSJvxxx&client_secret=nNVS9cSS3xNpSC9JdsBvvvvv
        ````

        ### Best Practice:
        Always pass credentials in body params. Pass credentials in URL query params **only** when you cannot pass body params due to application, tool, or other limitations.

        For more information and detailed examples of Looker API authorization, see [How to Authenticate to Looker API3](https://github.com/looker/looker-sdk-ruby/blob/master/authentication.md).
      operationId: login
      parameters:
      - description: client_id part of API3 Key.
        in: query
        name: client_id
        schema:
          type: string
      - description: client_secret part of API3 Key.
        in: query
        name: client_secret
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Access token with metadata.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Login
      tags:
      - ApiAuth
      x-looker-status: stable
      x-looker-activity-type: none
  /login/{user_id}:
    post:
      description: |
        ### Create an access token that runs as a given user.

        This can only be called by an authenticated admin user. It allows that admin to generate a new
        authentication token for the user with the given user id. That token can then be used for subsequent
        API calls - which are then performed *as* that target user.

        The target user does *not* need to have a pre-existing API client_id/client_secret pair. And, no such
        credentials are created by this call.

        This allows for building systems where api user authentication for an arbitrary number of users is done
        outside of Looker and funneled through a single 'service account' with admin permissions. Note that a
        new access token is generated on each call. If target users are going to be making numerous API
        calls in a short period then it is wise to cache this authentication token rather than call this before
        each of those API calls.

        See 'login' for more detail on the access token and how to use it.
      operationId: login_user
      parameters:
      - description: Id of user.
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: When true (default), API calls using the returned access_token
          are attributed to the admin user who created the access_token. When false,
          API activity is attributed to the user the access_token runs as. False requires
          a looker license.
        in: query
        name: associative
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Access token with metadata.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Login user
      tags:
      - ApiAuth
      x-looker-status: stable
      x-looker-activity-type: none
  /logout:
    delete:
      description: |
        ### Logout of the API and invalidate the current access token.
      operationId: logout
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Logged out successfully.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Logout
      tags:
      - ApiAuth
      x-looker-status: stable
      x-looker-activity-type: none
  /backup_configuration:
    get:
      deprecated: true
      description: |
        ### WARNING: The Looker internal database backup function has been deprecated.
      operationId: backup_configuration
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfiguration'
          description: Current Backup Configuration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Backup Configuration
      tags:
      - Config
      x-looker-status: deprecated
      x-looker-activity-type: non_query
    patch:
      deprecated: true
      description: |
        ### WARNING: The Looker internal database backup function has been deprecated.
      operationId: update_backup_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupConfiguration'
        description: Options for Backup Configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfiguration'
          description: New state for specified model set.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update Backup Configuration
      tags:
      - Config
      x-looker-status: deprecated
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /cloud_storage:
    get:
      description: |
        Get the current Cloud Storage Configuration.
      operationId: cloud_storage_configuration
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfiguration'
          description: Current Cloud Storage Configuration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Cloud Storage
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        Update the current Cloud Storage Configuration.
      operationId: update_cloud_storage_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupConfiguration'
        description: Options for Cloud Storage Configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupConfiguration'
          description: New state for specified model set.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update Cloud Storage
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /color_collections:
    get:
      description: |+
        ### Get an array of all existing Color Collections
        Get a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)

        Get all **standard** color collections with [ColorCollection](#!/ColorCollection/color_collections_standard)

        Get all **custom** color collections with [ColorCollection](#!/ColorCollection/color_collections_custom)

        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: all_color_collections
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ColorCollection'
                type: array
          description: ColorCollections
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get all Color Collections
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |+
        ### Create a custom color collection with the specified information

        Creates a new custom color collection object, returning the details, including the created id.

        **Update** an existing color collection with [Update Color Collection](#!/ColorCollection/update_color_collection)

        **Permanently delete** an existing custom color collection with [Delete Color Collection](#!/ColorCollection/delete_color_collection)

        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: create_color_collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColorCollection'
        description: ColorCollection
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorCollection'
          description: ColorCollection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create ColorCollection
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /color_collections/custom:
    get:
      description: |+
        ### Get an array of all existing **Custom** Color Collections
        Get a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)

        Get all **standard** color collections with [ColorCollection](#!/ColorCollection/color_collections_standard)

        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: color_collections_custom
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ColorCollection'
                type: array
          description: ColorCollections
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get all Custom Color Collections
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
  /color_collections/standard:
    get:
      description: |+
        ### Get an array of all existing **Standard** Color Collections
        Get a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)

        Get all **custom** color collections with [ColorCollection](#!/ColorCollection/color_collections_custom)

        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: color_collections_standard
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ColorCollection'
                type: array
          description: ColorCollections
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get all Standard Color Collections
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
  /color_collections/default:
    get:
      description: |
        ### Get the default color collection

        Use this to retrieve the default Color Collection.

        Set the default color collection with [ColorCollection](#!/ColorCollection/set_default_color_collection)
      operationId: default_color_collection
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorCollection'
          description: ColorCollection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Default Color Collection
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
    put:
      description: |+
        ### Set the global default Color Collection by ID

        Returns the new specified default Color Collection object.
        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: set_default_color_collection
      parameters:
      - description: ID of color collection to set as default
        in: query
        name: collection_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorCollection'
          description: ColorCollection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Set Default Color Collection
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
  /color_collections/{collection_id}:
    delete:
      description: |+
        ### Delete a custom color collection by id

        This operation permanently deletes the identified **Custom** color collection.

        **Standard** color collections cannot be deleted

        Because multiple color collections can have the same label, they must be deleted by ID, not name.
        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: delete_color_collection
      parameters:
      - description: Id of Color Collection
        in: path
        name: collection_id
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete ColorCollection
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |+
        ### Get a Color Collection by ID

        Use this to retrieve a specific Color Collection.
        Get a **single** color collection by id with [ColorCollection](#!/ColorCollection/color_collection)

        Get all **standard** color collections with [ColorCollection](#!/ColorCollection/color_collections_standard)

        Get all **custom** color collections with [ColorCollection](#!/ColorCollection/color_collections_custom)

        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: color_collection
      parameters:
      - description: Id of Color Collection
        in: path
        name: collection_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorCollection'
          description: ColorCollection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Color Collection by ID
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |+
        ### Update a custom color collection by id.
        **Note**: Only an API user with the Admin role can call this endpoint. Unauthorized requests will return `Not Found` (404) errors.

      operationId: update_color_collection
      parameters:
      - description: Id of Custom Color Collection
        in: path
        name: collection_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColorCollection'
        description: ColorCollection
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorCollection'
          description: ColorCollection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Custom Color collection
      tags:
      - ColorCollection
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /content_favorite/search:
    get:
      description: |+
        ### Search Favorite Content

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_content_favorites
      parameters:
      - description: Match content favorite id(s)
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match user id(s)
        in: query
        name: user_id
        schema:
          format: int64
          type: integer
      - description: Match content metadata id(s)
        in: query
        name: content_metadata_id
        schema:
          format: int64
          type: integer
      - description: Match dashboard id(s)
        in: query
        name: dashboard_id
        schema:
          format: int64
          type: integer
      - description: Match look id(s)
        in: query
        name: look_id
        schema:
          format: int64
          type: integer
      - description: Number of results to return. (used with offset)
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any. (used with limit)
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentFavorite'
                type: array
          description: Favorite Content
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Favorite Contents
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
  /content_favorite/{content_favorite_id}:
    delete:
      description: '### Delete favorite content'
      operationId: delete_content_favorite
      parameters:
      - description: Id of favorite content
        in: path
        name: content_favorite_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Favorite Content
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: '### Get favorite content by its id'
      operationId: content_favorite
      parameters:
      - description: Id of favorite content
        in: path
        name: content_favorite_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentFavorite'
          description: Favorite Content
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Favorite Content
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
  /content_favorite:
    post:
      description: '### Create favorite content'
      operationId: create_content_favorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentFavorite'
        description: Favorite Content
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentFavorite'
          description: Favorite Content
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Favorite Content
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /content_metadata:
    get:
      description: |
        ### Get information about all content metadata in a space.
      operationId: all_content_metadatas
      parameters:
      - description: Parent space of content.
        in: query
        name: parent_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentMeta'
                type: array
          description: Content Metadata
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Content Metadatas
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
  /content_metadata/{content_metadata_id}:
    get:
      description: |
        ### Get information about an individual content metadata record.
      operationId: content_metadata
      parameters:
      - description: Id of content metadata
        in: path
        name: content_metadata_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMeta'
          description: Content Metadata
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Content Metadata
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Move a piece of content.
      operationId: update_content_metadata
      parameters:
      - description: Id of content metadata
        in: path
        name: content_metadata_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentMeta'
        description: Content Metadata
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMeta'
          description: Content Metadata
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Content Metadata
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /content_metadata_access:
    get:
      description: |
        ### All content metadata access records for a content metadata item.
      operationId: all_content_metadata_accesses
      parameters:
      - description: Id of content metadata
        in: query
        name: content_metadata_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentMetaGroupUser'
                type: array
          description: Content Metadata Access
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Content Metadata Accesses
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create content metadata access.
      operationId: create_content_metadata_access
      parameters:
      - description: Optionally sends notification email when granting access to a
          board.
        in: query
        name: send_boards_notification_email
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentMetaGroupUser'
        description: Content Metadata Access
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMetaGroupUser'
          description: Content Metadata Access
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Content Metadata Access
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-looker-rate-limited: true
      x-codegen-request-body-name: body
  /content_metadata_access/{content_metadata_access_id}:
    delete:
      description: |
        ### Remove content metadata access.
      operationId: delete_content_metadata_access
      parameters:
      - description: Id of content metadata access
        in: path
        name: content_metadata_access_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Content Metadata Access
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
    put:
      description: |
        ### Update type of access for content metadata.
      operationId: update_content_metadata_access
      parameters:
      - description: Id of content metadata access
        in: path
        name: content_metadata_access_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentMetaGroupUser'
        description: Content Metadata Access
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentMetaGroupUser'
          description: Content Metadata Access
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Content Metadata Access
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /content_thumbnail/{type}/{resource_id}:
    get:
      description: |
        ### Get an image representing the contents of a dashboard or look.

        The returned thumbnail is an abstract representation of the contents of a dashbord or look and does not
        reflect the actual data displayed in the respective visualizations.
      operationId: content_thumbnail
      parameters:
      - description: Either dashboard or look
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: ID of the dashboard or look to render
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: Whether or not to refresh the rendered image with the latest
          content
        in: query
        name: reload
        schema:
          type: string
      - description: A value of png produces a thumbnail in PNG format instead of
          SVG (default)
        in: query
        name: format
        schema:
          type: string
      - description: The width of the image if format is supplied
        in: query
        name: width
        schema:
          format: int64
          type: integer
      - description: The height of the image if format is supplied
        in: query
        name: height
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            image/svg+xml:
              schema:
                type: string
            image/png:
              schema:
                type: string
          description: Content thumbnail
        400:
          content:
            image/svg+xml:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            image/svg+xml:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Content Thumbnail
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: db_query
  /content_validation:
    get:
      description: |
        ### Validate All Content

        Performs validation of all looks and dashboards
        Returns a list of errors found as well as metadata about the content validation run.
      operationId: content_validation
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentValidation'
          description: Content validation results
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Validate Content
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
  /content_view/search:
    get:
      description: |+
        ### Search Content Views

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_content_views
      parameters:
      - description: Match view count
        in: query
        name: view_count
        schema:
          format: int64
          type: integer
      - description: Match Group Id
        in: query
        name: group_id
        schema:
          format: int64
          type: integer
      - description: Match look_id
        in: query
        name: look_id
        schema:
          type: string
      - description: Match dashboard_id
        in: query
        name: dashboard_id
        schema:
          type: string
      - description: Match content metadata id
        in: query
        name: content_metadata_id
        schema:
          format: int64
          type: integer
      - description: Match start of week date (format is "YYYY-MM-DD")
        in: query
        name: start_of_week_date
        schema:
          type: string
      - description: True if only all time view records should be returned
        in: query
        name: all_time
        schema:
          type: boolean
      - description: Match user id
        in: query
        name: user_id
        schema:
          format: int64
          type: integer
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      - description: Number of results to return. Use with `offset` to manage pagination
          of results
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning data
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by
        in: query
        name: sorts
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentView'
                type: array
          description: Content View
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Content Views
      tags:
      - Content
      x-looker-status: beta
      x-looker-activity-type: non_query
  /custom_welcome_email:
    get:
      description: |
        ### Get the current status and content of custom welcome emails
      operationId: custom_welcome_email
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWelcomeEmail'
          description: Custom Welcome Email
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Custom Welcome Email
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        Update custom welcome email setting and values. Optionally send a test email with the new content to the currently logged in user.
      operationId: update_custom_welcome_email
      parameters:
      - description: If true a test email with the content from the request will be
          sent to the current user after saving
        in: query
        name: send_test_welcome_email
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomWelcomeEmail'
        description: Custom Welcome Email setting and value to save
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWelcomeEmail'
          description: Custom Welcome Email
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Custom Welcome Email Content
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /custom_welcome_email_test:
    put:
      description: |
        Requests to this endpoint will send a welcome email with the custom content provided in the body to the currently logged in user.
      operationId: update_custom_welcome_email_test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WelcomeEmailTest'
        description: Subject, header, and Body of the email to be sent.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeEmailTest'
          description: Send Test Welcome Email
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: 'Send a test welcome email to the currently logged in user with the
        supplied content '
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards:
    get:
      description: |
        ### Get information about all active dashboards.

        Returns an array of **abbreviated dashboard objects**. Dashboards marked as deleted are excluded from this list.

        Get the **full details** of a specific dashboard by id with [dashboard()](#!/Dashboard/dashboard)

        Find **deleted dashboards** with [search_dashboards()](#!/Dashboard/search_dashboards)
      operationId: all_dashboards
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashboardBase'
                type: array
          description: dashboards
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Dashboards
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a new dashboard

        Creates a new dashboard object and returns the details of the newly created dashboard.

        `Title`, `user_id`, and `space_id` are all required fields.
        `Space_id` and `user_id` must contain the id of an existing space or user, respectively.
        A dashboard's `title` must be unique within the space in which it resides.

        If you receive a 422 error response when creating a dashboard, be sure to look at the
        response body for information about exactly which fields are missing or contain invalid data.

        You can **update** an existing dashboard with [update_dashboard()](#!/Dashboard/update_dashboard)

        You can **permanently delete** an existing dashboard with [delete_dashboard()](#!/Dashboard/delete_dashboard)
      operationId: create_dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Dashboard
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/search:
    get:
      description: |
        ### Search Dashboards

        Returns an **array of dashboard objects** that match the specified search criteria.

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.


        The parameters `limit`, and `offset` are recommended for fetching results in page-size chunks.

        Get a **single dashboard** by id with [dashboard()](#!/Dashboard/dashboard)
      operationId: search_dashboards
      parameters:
      - description: Match dashboard id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match dashboard slug.
        in: query
        name: slug
        schema:
          type: string
      - description: Match Dashboard title.
        in: query
        name: title
        schema:
          type: string
      - description: Match Dashboard description.
        in: query
        name: description
        schema:
          type: string
      - description: Filter on a content favorite id.
        in: query
        name: content_favorite_id
        schema:
          format: int64
          type: integer
      - description: Filter on a particular space.
        in: query
        name: space_id
        schema:
          type: string
      - description: Filter on a particular space.
        in: query
        name: folder_id
        schema:
          type: string
      - description: Filter on dashboards deleted status.
        in: query
        name: deleted
        schema:
          type: string
      - description: Filter on dashboards created by a particular user.
        in: query
        name: user_id
        schema:
          type: string
      - description: Filter on a particular value of view_count
        in: query
        name: view_count
        schema:
          type: string
      - description: Filter on a content favorite id.
        in: query
        name: content_metadata_id
        schema:
          format: int64
          type: integer
      - description: Exclude items that exist only in personal spaces other than the
          users
        in: query
        name: curate
        schema:
          type: boolean
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Number of results to return. (used with offset and takes priority
          over page and per_page)
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any. (used with limit
          and takes priority over page and per_page)
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: 'One or more fields to sort by. Sortable fields: [:title, :user_id,
          :id, :created_at, :space_id, :folder_id, :description, :view_count, :favorite_count,
          :slug, :content_favorite_id, :content_metadata_id, :deleted, :deleted_at,
          :last_viewed_at, :last_accessed_at]'
        in: query
        name: sorts
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
          description: dashboards
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Dashboards
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboards/{lookml_dashboard_id}/import/{space_id}:
    post:
      description: |
        ### Import a LookML dashboard to a space as a UDD
        Creates a UDD (a dashboard which exists in the Looker database rather than as a LookML file) from the LookML dashboard
        and puts it in the space specified. The created UDD will have a lookml_link_id which links to the original LookML dashboard.

        To give the imported dashboard specify a (e.g. title: "my title") in the body of your request, otherwise the imported
        dashboard will have the same title as the original LookML dashboard.

        For this operation to succeed the user must have permission to see the LookML dashboard in question, and have permission to
        create content in the space the dashboard is being imported to.

        **Sync** a linked UDD with [sync_lookml_dashboard()](#!/Dashboard/sync_lookml_dashboard)
        **Unlink** a linked UDD by setting lookml_link_id to null with [update_dashboard()](#!/Dashboard/update_dashboard)
      operationId: import_lookml_dashboard
      parameters:
      - description: Id of LookML dashboard
        in: path
        name: lookml_dashboard_id
        required: true
        schema:
          type: string
      - description: Id of space to import the dashboard to
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: If true, and this dashboard is localized, export it with the
          raw keys, not localized.
        in: query
        name: raw_locale
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Dashboard
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Import LookML Dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/{lookml_dashboard_id}/sync:
    patch:
      description: |
        ### Update all linked dashboards to match the specified LookML dashboard.

        Any UDD (a dashboard which exists in the Looker database rather than as a LookML file) which has a `lookml_link_id`
        property value referring to a LookML dashboard's id (model::dashboardname) will be updated so that it matches the current state of the LookML dashboard.

        For this operation to succeed the user must have permission to view the LookML dashboard, and only linked dashboards
        that the user has permission to update will be synced.

        To **link** or **unlink** a UDD set the `lookml_link_id` property with [update_dashboard()](#!/Dashboard/update_dashboard)
      operationId: sync_lookml_dashboard
      parameters:
      - description: Id of LookML dashboard, in the form 'model::dashboardname'
        in: path
        name: lookml_dashboard_id
        required: true
        schema:
          type: string
      - description: If true, and this dashboard is localized, export it with the
          raw keys, not localized.
        in: query
        name: raw_locale
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Dashboard
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  format: int64
                  type: integer
                type: array
          description: Ids of all the dashboards that were updated by this operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Sync LookML Dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/{dashboard_id}:
    delete:
      description: |
        ### Delete the dashboard with the specified id

        Permanently **deletes** a dashboard. (The dashboard cannot be recovered after this operation.)

        "Soft" delete or hide a dashboard by setting its `deleted` status to `True` with [update_dashboard()](#!/Dashboard/update_dashboard).

        Note: When a dashboard is deleted in the UI, it is soft deleted. Use this API call to permanently remove it, if desired.
      operationId: delete_dashboard
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a dashboard

        Returns the full details of the identified dashboard object

        Get a **summary list** of all active dashboards with [all_dashboards()](#!/Dashboard/all_dashboards)

        You can **Search** for dashboards with [search_dashboards()](#!/Dashboard/search_dashboards)
      operationId: dashboard
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a dashboard

        You can use this function to change the string and integer properties of
        a dashboard. Nested objects such as filters, dashboard elements, or dashboard layout components
        cannot be modified by this function - use the update functions for the respective
        nested object types (like [update_dashboard_filter()](#!/3.1/Dashboard/update_dashboard_filter) to change a filter)
        to modify nested objects referenced by a dashboard.

        If you receive a 422 error response when updating a dashboard, be sure to look at the
        response body for information about exactly which fields are missing or contain invalid data.
      operationId: update_dashboard
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Dashboard
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/aggregate_table_lookml/{dashboard_id}:
    get:
      description: |+
        ### Get Aggregate Table LookML for Each Query on a Dahboard

        Returns a JSON object that contains the dashboard id and Aggregate Table lookml

      operationId: dashboard_aggregate_table_lookml
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardAggregateTableLookml'
          description: JSON for Aggregate Table LookML
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Aggregate Table LookML for a dashboard
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboards/lookml/{dashboard_id}:
    get:
      description: |+
        ### Get lookml of a UDD

        Returns a JSON object that contains the dashboard id and the full lookml

      operationId: dashboard_lookml
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLookml'
          description: json of dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get lookml of a UDD
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboard_elements/search:
    get:
      description: |+
        ### Search Dashboard Elements

        Returns an **array of DashboardElement objects** that match the specified search criteria.

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_dashboard_elements
      parameters:
      - description: Select elements that refer to a given dashboard id
        in: query
        name: dashboard_id
        schema:
          format: int64
          type: integer
      - description: Select elements that refer to a given look id
        in: query
        name: look_id
        schema:
          format: int64
          type: integer
      - description: Match the title of element
        in: query
        name: title
        schema:
          type: string
      - description: Select soft-deleted dashboard elements
        in: query
        name: deleted
        schema:
          type: boolean
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      - description: 'Fields to sort by. Sortable fields: [:look_id, :dashboard_id,
          :deleted, :title]'
        in: query
        name: sorts
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashboardElement'
                type: array
          description: Dashboard elements
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Dashboard Elements
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboard_elements/{dashboard_element_id}:
    delete:
      description: '### Delete a dashboard element with a specific id.'
      operationId: delete_dashboard_element
      parameters:
      - description: Id of dashboard element
        in: path
        name: dashboard_element_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete DashboardElement
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: '### Get information about the dashboard element with a specific
        id.'
      operationId: dashboard_element
      parameters:
      - description: Id of dashboard element
        in: path
        name: dashboard_element_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardElement'
          description: DashboardElement
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get DashboardElement
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: '### Update the dashboard element with a specific id.'
      operationId: update_dashboard_element
      parameters:
      - description: Id of dashboard element
        in: path
        name: dashboard_element_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardElement'
        description: DashboardElement
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardElement'
          description: DashboardElement
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update DashboardElement
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/{dashboard_id}/dashboard_elements:
    get:
      description: '### Get information about all the dashboard elements on a dashboard
        with a specific id.'
      operationId: dashboard_dashboard_elements
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashboardElement'
                type: array
          description: DashboardElement
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All DashboardElements
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboard_elements:
    post:
      description: '### Create a dashboard element on the dashboard with a specific
        id.'
      operationId: create_dashboard_element
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardElement'
        description: DashboardElement
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardElement'
          description: DashboardElement
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create DashboardElement
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboard_filters/{dashboard_filter_id}:
    delete:
      description: '### Delete a dashboard filter with a specific id.'
      operationId: delete_dashboard_filter
      parameters:
      - description: Id of dashboard filter
        in: path
        name: dashboard_filter_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Dashboard Filter
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: '### Get information about the dashboard filters with a specific
        id.'
      operationId: dashboard_filter
      parameters:
      - description: Id of dashboard filters
        in: path
        name: dashboard_filter_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardFilter'
          description: Dashboard Filter
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Dashboard Filter
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: '### Update the dashboard filter with a specific id.'
      operationId: update_dashboard_filter
      parameters:
      - description: Id of dashboard filter
        in: path
        name: dashboard_filter_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardFilter'
        description: Dashboard Filter
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardFilter'
          description: Dashboard Filter
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Dashboard Filter
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/{dashboard_id}/dashboard_filters:
    get:
      description: '### Get information about all the dashboard filters on a dashboard
        with a specific id.'
      operationId: dashboard_dashboard_filters
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashboardFilter'
                type: array
          description: Dashboard Filter
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Dashboard Filters
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboard_filters:
    post:
      description: '### Create a dashboard filter on the dashboard with a specific
        id.'
      operationId: create_dashboard_filter
      parameters:
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardFilter'
        description: Dashboard Filter
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardFilter'
          description: Dashboard Filter
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Dashboard Filter
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboard_layout_components/{dashboard_layout_component_id}:
    get:
      description: '### Get information about the dashboard elements with a specific
        id.'
      operationId: dashboard_layout_component
      parameters:
      - description: Id of dashboard layout component
        in: path
        name: dashboard_layout_component_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLayoutComponent'
          description: DashboardLayoutComponent
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get DashboardLayoutComponent
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: '### Update the dashboard element with a specific id.'
      operationId: update_dashboard_layout_component
      parameters:
      - description: Id of dashboard layout component
        in: path
        name: dashboard_layout_component_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardLayoutComponent'
        description: DashboardLayoutComponent
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLayoutComponent'
          description: DashboardLayoutComponent
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update DashboardLayoutComponent
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboard_layouts/{dashboard_layout_id}/dashboard_layout_components:
    get:
      description: '### Get information about all the dashboard layout components
        for a dashboard layout with a specific id.'
      operationId: dashboard_layout_dashboard_layout_components
      parameters:
      - description: Id of dashboard layout component
        in: path
        name: dashboard_layout_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashboardLayoutComponent'
                type: array
          description: DashboardLayoutComponent
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All DashboardLayoutComponents
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboard_layouts/{dashboard_layout_id}:
    delete:
      description: '### Delete a dashboard layout with a specific id.'
      operationId: delete_dashboard_layout
      parameters:
      - description: Id of dashboard layout
        in: path
        name: dashboard_layout_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete DashboardLayout
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: '### Get information about the dashboard layouts with a specific
        id.'
      operationId: dashboard_layout
      parameters:
      - description: Id of dashboard layouts
        in: path
        name: dashboard_layout_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLayout'
          description: DashboardLayout
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get DashboardLayout
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: '### Update the dashboard layout with a specific id.'
      operationId: update_dashboard_layout
      parameters:
      - description: Id of dashboard layout
        in: path
        name: dashboard_layout_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardLayout'
        description: DashboardLayout
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLayout'
          description: DashboardLayout
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update DashboardLayout
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /dashboards/{dashboard_id}/dashboard_layouts:
    get:
      description: '### Get information about all the dashboard elements on a dashboard
        with a specific id.'
      operationId: dashboard_dashboard_layouts
      parameters:
      - description: Id of dashboard
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashboardLayout'
                type: array
          description: DashboardLayout
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All DashboardLayouts
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
  /dashboard_layouts:
    post:
      description: '### Create a dashboard layout on the dashboard with a specific
        id.'
      operationId: create_dashboard_layout
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardLayout'
        description: DashboardLayout
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardLayout'
          description: DashboardLayout
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create DashboardLayout
      tags:
      - Dashboard
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /data_actions:
    post:
      description: Perform a data action. The data action object can be obtained from
        query results, and used to perform an arbitrary action.
      operationId: perform_data_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataActionRequest'
        description: Data Action Request
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataActionResponse'
          description: Data Action Response
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Send a Data Action
      tags:
      - DataAction
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /data_actions/form:
    post:
      description: For some data actions, the remote server may supply a form requesting
        further user input. This endpoint takes a data action, asks the remote server
        to generate a form for it, and returns that form to you for presentation to
        the user.
      operationId: fetch_remote_data_action_form
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        description: Data Action Request
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataActionForm'
          description: Data Action Form
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Fetch Remote Data Action Form
      tags:
      - DataAction
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /datagroups:
    get:
      description: |
        ### Get information about all datagroups.
      operationId: all_datagroups
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Datagroup'
                type: array
          description: Datagroup
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Datagroups
      tags:
      - Datagroup
      x-looker-status: beta
      x-looker-activity-type: non_query
  /datagroups/{datagroup_id}:
    get:
      description: |
        ### Get information about a datagroup.
      operationId: datagroup
      parameters:
      - description: ID of datagroup.
        in: path
        name: datagroup_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datagroup'
          description: Datagroup
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Datagroup
      tags:
      - Datagroup
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a datagroup using the specified params.
      operationId: update_datagroup
      parameters:
      - description: ID of datagroup.
        in: path
        name: datagroup_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datagroup'
        description: Datagroup
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datagroup'
          description: Datagroup
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Datagroup
      tags:
      - Datagroup
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /connections:
    get:
      description: |
        ### Get information about all connections.
      operationId: all_connections
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DBConnection'
                type: array
          description: Connection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Connections
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a connection using the specified configuration.
      operationId: create_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DBConnection'
        description: Connection
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBConnection'
          description: Connection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Connection
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /connections/{connection_name}:
    delete:
      description: |
        ### Delete a connection.
      operationId: delete_connection
      parameters:
      - description: Name of connection
        in: path
        name: connection_name
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Connection
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a connection.
      operationId: connection
      parameters:
      - description: Name of connection
        in: path
        name: connection_name
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBConnection'
          description: Connection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Connection
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a connection using the specified configuration.
      operationId: update_connection
      parameters:
      - description: Name of connection
        in: path
        name: connection_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DBConnection'
        description: Connection
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DBConnection'
          description: Connection
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Connection
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /connections/{connection_name}/connection_override/{override_context}:
    delete:
      description: |
        ### Delete a connection override.
      operationId: delete_connection_override
      parameters:
      - description: Name of connection
        in: path
        name: connection_name
        required: true
        schema:
          type: string
      - description: Context of connection override
        in: path
        name: override_context
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Connection Override
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
  /connections/{connection_name}/test:
    put:
      description: |
        ### Test an existing connection.

        Note that a connection's 'dialect' property has a 'connection_tests' property that lists the
        specific types of tests that the connection supports.

        This API is rate limited.

        Unsupported tests in the request will be ignored.
      operationId: test_connection
      parameters:
      - description: Name of connection
        in: path
        name: connection_name
        required: true
        schema:
          type: string
      - description: Array of names of tests to run
        explode: false
        in: query
        name: tests
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DBConnectionTestResult'
                type: array
          description: Test results
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Test Connection
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-looker-rate-limited: true
  /connections/test:
    put:
      description: |
        ### Test a connection configuration.

        Note that a connection's 'dialect' property has a 'connection_tests' property that lists the
        specific types of tests that the connection supports.

        This API is rate limited.

        Unsupported tests in the request will be ignored.
      operationId: test_connection_config
      parameters:
      - description: Array of names of tests to run
        explode: false
        in: query
        name: tests
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DBConnection'
        description: Connection
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DBConnectionTestResult'
                type: array
          description: Test results
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Test Connection Configuration
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-looker-rate-limited: true
      x-codegen-request-body-name: body
  /dialect_info:
    get:
      description: |
        ### Get information about all dialects.
      operationId: all_dialect_infos
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DialectInfo'
                type: array
          description: Dialect Info
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Dialect Infos
      tags:
      - Connection
      x-looker-status: stable
      x-looker-activity-type: non_query
  /digest_emails_enabled:
    get:
      description: |
        ### Retrieve the value for whether or not digest emails is enabled
      operationId: digest_emails_enabled
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigestEmails'
          description: Digest_emails
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Digest_emails
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update the setting for enabling/disabling digest emails
      operationId: update_digest_emails_enabled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigestEmails'
        description: Digest_emails
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigestEmails'
          description: Digest_emails
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Digest_emails
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /digest_email_send:
    post:
      description: |-
        ### Trigger the generation of digest email records and send them to Looker's internal system. This does not send
        any actual emails, it generates records containing content which may be of interest for users who have become inactive.
        Emails will be sent at a later time from Looker's internal system if the Digest Emails feature is enabled in settings.
      operationId: create_digest_email_send
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigestEmailSend'
          description: Status of generating and sending the data
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Deliver digest email contents
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: none
      x-looker-rate-limited: true
  /embed/sso_url:
    post:
      description: |
        ### Create SSO Embed URL

        Creates an SSO embed URL and cryptographically signs it with an embed secret.
        This signed URL can then be used to instantiate a Looker embed session in a PBL web application.
        Do not make any modifications to this URL - any change may invalidate the signature and
        cause the URL to fail to load a Looker embed session.

        A signed SSO embed URL can only be used once. After it has been used to request a page from the
        Looker server, the URL is invalid. Future requests using the same URL will fail. This is to prevent
        'replay attacks'.

        The `target_url` property must be a complete URL of a Looker UI page - scheme, hostname, path and query params.
        To load a dashboard with id 56 and with a filter of `Date=1 years`, the looker URL would look like `https:/myname.looker.com/dashboards/56?Date=1%20years`.
        The best way to obtain this target_url is to navigate to the desired Looker page in your web browser,
        copy the URL shown in the browser address bar and paste it into the `target_url` property as a quoted string value in this API request.

        Permissions for the embed user are defined by the groups in which the embed user is a member (group_ids property)
        and the lists of models and permissions assigned to the embed user.
        At a minimum, you must provide values for either the group_ids property, or both the models and permissions properties.
        These properties are additive; an embed user can be a member of certain groups AND be granted access to models and permissions.

        The embed user's access is the union of permissions granted by the group_ids, models, and permissions properties.

        This function does not strictly require all group_ids, user attribute names, or model names to exist at the moment the
        SSO embed url is created. Unknown group_id, user attribute names or model names will be passed through to the output URL.
        To diagnose potential problems with an SSO embed URL, you can copy the signed URL into the Embed URI Validator text box in `<your looker instance>/admin/embed`.

        The `secret_id` parameter is optional. If specified, its value must be the id of an active secret defined in the Looker instance.
        if not specified, the URL will be signed using the newest active secret defined in the Looker instance.

        #### Security Note
        Protect this signed URL as you would an access token or password credentials - do not write
        it to disk, do not pass it to a third party, and only pass it through a secure HTTPS
        encrypted transport.
      operationId: create_sso_embed_url
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbedSsoParams'
        description: SSO parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedUrlResponse'
          description: Signed SSO URL
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create SSO Embed Url
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: none
      x-codegen-request-body-name: body
  /projects/{project_id}/git_branches:
    get:
      description: |
        ### Get All Git Branches

        Returns a list of git branches in the project repository
      operationId: all_git_branches
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitBranch'
                type: array
          description: Git Branch
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Git Branches
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/git_branch:
    get:
      description: |
        ### Get the Current Git Branch

        Returns the git branch currently checked out in the given project repository
      operationId: git_branch
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitBranch'
          description: Git Branch
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Active Git Branch
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |+
        ### Create and Checkout a Git Branch

        Creates and checks out a new branch in the given project repository
        Only allowed in development mode
          - Call `update_session` to select the 'dev' workspace.

        Optionally specify a branch name, tag name or commit SHA as the start point in the ref field.
          If no ref is specified, HEAD of the current branch will be used as the start point for the new branch.

      operationId: create_git_branch
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitBranch'
        description: Git Branch
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitBranch'
          description: Git Branch
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Checkout New Git Branch
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
    put:
      description: |+
        ### Checkout and/or reset --hard an existing Git Branch

        Only allowed in development mode
          - Call `update_session` to select the 'dev' workspace.

        Checkout an existing branch if name field is different from the name of the currently checked out branch.

        Optionally specify a branch name, tag name or commit SHA to which the branch should be reset.
          **DANGER** hard reset will be force pushed to the remote. Unsaved changes and commits may be permanently lost.

      operationId: update_git_branch
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitBranch'
        description: Git Branch
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitBranch'
          description: Git Branch
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Project Git Branch
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /projects/{project_id}/git_branch/{branch_name}:
    delete:
      description: |
        ### Delete the specified Git Branch

        Delete git branch specified in branch_name path param from local and remote of specified project repository
      operationId: delete_git_branch
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Branch Name
        in: path
        name: branch_name
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete a Git Branch
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get the specified Git Branch

        Returns the git branch specified in branch_name path param if it exists in the given project repository
      operationId: find_git_branch
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Branch Name
        in: path
        name: branch_name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitBranch'
          description: Git Branch
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Find a Git Branch
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /groups:
    get:
      description: |
        ### Get information about all groups.
      operationId: all_groups
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Optional of ids to get specific groups.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Id of content metadata to which groups must have access.
        in: query
        name: content_metadata_id
        schema:
          format: int64
          type: integer
      - description: Select only groups that either can/cannot be given access to
          content.
        in: query
        name: can_add_to_content_metadata
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Groups
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Creates a new group (admin only).
      operationId: create_group
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Group
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /groups/search:
    get:
      description: |+
        ### Search groups

        Returns all group records that match the given search criteria.

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_groups
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Number of results to return (used with `offset`).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any (used with `limit`).
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      - description: Match group id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match group name.
        in: query
        name: name
        schema:
          type: string
      - description: Match group external_group_id.
        in: query
        name: external_group_id
        schema:
          type: string
      - description: Match group externally_managed.
        in: query
        name: externally_managed
        schema:
          type: boolean
      - description: Match group externally_orphaned.
        in: query
        name: externally_orphaned
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Group
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Groups
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
  /groups/{group_id}:
    delete:
      description: |
        ### Deletes a group (admin only).
      operationId: delete_group
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a group.
      operationId: group
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Group
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: '### Updates the a group (admin only).'
      operationId: update_group
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: Group
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Group
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /groups/{group_id}/groups:
    get:
      description: |
        ### Get information about all the groups in a group
      operationId: all_group_groups
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: All groups in group.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Groups in Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Adds a new group to a group.
      operationId: add_group_group
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupIdForGroupInclusion'
        description: Group id to add
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Added group.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Add a Group to Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /groups/{group_id}/users:
    get:
      description: |
        ### Get information about all the users directly included in a group.
      operationId: all_group_users
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: All users in group.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Users in Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Adds a new user to a group.
      operationId: add_group_user
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupIdForGroupUserInclusion'
        description: User id to add
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Added user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Add a User to Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /groups/{group_id}/users/{user_id}:
    delete:
      description: |
        ### Removes a user from a group.
      operationId: delete_group_user
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of user to remove from group
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content: {}
          description: User successfully removed from group
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Remove a User from Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
  /groups/{group_id}/groups/{deleting_group_id}:
    delete:
      description: |
        ### Removes a group from a group.
      operationId: delete_group_from_group
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of group to delete
        in: path
        name: deleting_group_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content: {}
          description: Group successfully deleted
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Deletes a Group from Group
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
  /groups/{group_id}/attribute_values/{user_attribute_id}:
    delete:
      description: |
        ### Remove a user attribute value from a group.
      operationId: delete_user_attribute_group_value
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content: {}
          description: Value successfully unset
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Delete User Attribute Group Value
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Set the value of a user attribute for a group.

        For information about how user attribute values are calculated, see [Set User Attribute Group Values](#!/UserAttribute/set_user_attribute_group_values).
      operationId: update_user_attribute_group_value
      parameters:
      - description: Id of group
        in: path
        name: group_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAttributeGroupValue'
        description: New value for group.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAttributeGroupValue'
          description: Group value object.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Set User Attribute Group Value
      tags:
      - Group
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /homepages:
    get:
      description: |
        ### Get information about all homepages.
      operationId: all_homepages
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Homepage'
                type: array
          description: Homepage
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Homepages
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a new homepage.
      operationId: create_homepage
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homepage'
        description: Homepage
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homepage'
          description: Homepage
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Homepage
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /homepages/search:
    get:
      description: |+
        ### Search Homepages

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_homepages
      parameters:
      - description: Matches homepage title.
        in: query
        name: title
        schema:
          type: string
      - description: Matches the timestamp for when the homepage was created.
        in: query
        name: created_at
        schema:
          type: string
      - description: The first name of the user who created this homepage.
        in: query
        name: first_name
        schema:
          type: string
      - description: The last name of the user who created this homepage.
        in: query
        name: last_name
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Return favorited homepages when true.
        in: query
        name: favorited
        schema:
          type: boolean
      - description: Filter on homepages created by a particular user.
        in: query
        name: creator_id
        schema:
          type: string
      - description: The page to return.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: The number of items in the returned page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: The number of items to skip before returning any. (used with
          limit and takes priority over page and per_page)
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: The maximum number of items to return. (used with offset and
          takes priority over page and per_page)
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: The fields to sort the results by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Homepage'
                type: array
          description: homepages
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Homepages
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
  /homepages/{homepage_id}:
    delete:
      description: |
        ### Delete a homepage.
      operationId: delete_homepage
      parameters:
      - description: Id of homepage
        in: path
        name: homepage_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Homepage
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a homepage.
      operationId: homepage
      parameters:
      - description: Id of homepage
        in: path
        name: homepage_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homepage'
          description: Homepage
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Homepage
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a homepage definition.
      operationId: update_homepage
      parameters:
      - description: Id of homepage
        in: path
        name: homepage_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homepage'
        description: Homepage
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homepage'
          description: Homepage
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Homepage
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /homepage_items:
    get:
      description: |
        ### Get information about all homepage items.
      operationId: all_homepage_items
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Filter to a specific homepage section
        in: query
        name: homepage_section_id
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HomepageItem'
                type: array
          description: Homepage Item
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Homepage Items
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a new homepage item.
      operationId: create_homepage_item
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomepageItem'
        description: Homepage Item
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageItem'
          description: Homepage Item
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Homepage Item
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /homepage_items/{homepage_item_id}:
    delete:
      description: |
        ### Delete a homepage item.
      operationId: delete_homepage_item
      parameters:
      - description: Id of homepage_item
        in: path
        name: homepage_item_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Homepage Item
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a homepage item.
      operationId: homepage_item
      parameters:
      - description: Id of homepage item
        in: path
        name: homepage_item_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageItem'
          description: Homepage Item
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Homepage Item
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a homepage item definition.
      operationId: update_homepage_item
      parameters:
      - description: Id of homepage item
        in: path
        name: homepage_item_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomepageItem'
        description: Homepage Item
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageItem'
          description: Homepage Item
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Homepage Item
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /homepage_sections:
    get:
      description: |
        ### Get information about all homepage sections.
      operationId: all_homepage_sections
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HomepageSection'
                type: array
          description: Homepage section
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Homepage sections
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a new homepage section.
      operationId: create_homepage_section
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomepageSection'
        description: Homepage section
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageSection'
          description: Homepage section
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Homepage section
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /homepage_sections/{homepage_section_id}:
    delete:
      description: |
        ### Delete a homepage section.
      operationId: delete_homepage_section
      parameters:
      - description: Id of homepage_section
        in: path
        name: homepage_section_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Homepage section
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a homepage section.
      operationId: homepage_section
      parameters:
      - description: Id of homepage section
        in: path
        name: homepage_section_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageSection'
          description: Homepage section
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Homepage section
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a homepage section definition.
      operationId: update_homepage_section
      parameters:
      - description: Id of homepage section
        in: path
        name: homepage_section_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomepageSection'
        description: Homepage section
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomepageSection'
          description: Homepage section
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Homepage section
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /primary_homepage_sections:
    get:
      description: |
        ### Get information about the primary homepage's sections.
      operationId: all_primary_homepage_sections
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HomepageSection'
                type: array
          description: Primary homepage section
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Primary homepage sections
      tags:
      - Homepage
      x-looker-status: beta
      x-looker-activity-type: non_query
  /integration_hubs:
    get:
      description: |
        ### Get information about all Integration Hubs.
      operationId: all_integration_hubs
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IntegrationHub'
                type: array
          description: Integration Hub
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Integration Hubs
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a new Integration Hub.

        This API is rate limited to prevent it from being used for SSRF attacks
      operationId: create_integration_hub
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationHub'
        description: Integration Hub
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationHub'
          description: Integration Hub
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Integration Hub
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-looker-rate-limited: true
      x-codegen-request-body-name: body
  /integration_hubs/{integration_hub_id}:
    delete:
      description: |
        ### Delete a Integration Hub.
      operationId: delete_integration_hub
      parameters:
      - description: Id of integration_hub
        in: path
        name: integration_hub_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Integration Hub
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a Integration Hub.
      operationId: integration_hub
      parameters:
      - description: Id of Integration Hub
        in: path
        name: integration_hub_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationHub'
          description: Integration Hub
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Integration Hub
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a Integration Hub definition.

        This API is rate limited to prevent it from being used for SSRF attacks
      operationId: update_integration_hub
      parameters:
      - description: Id of Integration Hub
        in: path
        name: integration_hub_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationHub'
        description: Integration Hub
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationHub'
          description: Integration Hub
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Integration Hub
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-looker-rate-limited: true
      x-codegen-request-body-name: body
  /integration_hubs/{integration_hub_id}/accept_legal_agreement:
    post:
      description: Accepts the legal agreement for a given integration hub. This only
        works for integration hubs that have legal_agreement_required set to true
        and legal_agreement_signed set to false.
      operationId: accept_integration_hub_legal_agreement
      parameters:
      - description: Id of integration_hub
        in: path
        name: integration_hub_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationHub'
          description: Integration hub
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Accept Integration Hub Legal Agreement
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
  /integrations:
    get:
      description: |
        ### Get information about all Integrations.
      operationId: all_integrations
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Filter to a specific provider
        in: query
        name: integration_hub_id
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
          description: Integration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Integrations
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
  /integrations/{integration_id}:
    get:
      description: |
        ### Get information about a Integration.
      operationId: integration
      parameters:
      - description: Id of integration
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: Integration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Integration
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update parameters on a Integration.
      operationId: update_integration
      parameters:
      - description: Id of integration
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
        description: Integration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: Integration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Integration
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /integrations/{integration_id}/form:
    post:
      description: Returns the Integration form for presentation to the user.
      operationId: fetch_integration_form
      parameters:
      - description: Id of integration
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
        description: Integration Form Request
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataActionForm'
          description: Data Action Form
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Fetch Remote Integration Form
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /integrations/{integration_id}/test:
    post:
      description: Tests the integration to make sure all the settings are working.
      operationId: test_integration
      parameters:
      - description: Id of integration
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationTestResult'
          description: Test Result
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Test integration
      tags:
      - Integration
      x-looker-status: beta
      x-looker-activity-type: non_query
  /internal_help_resources_content:
    get:
      description: |
        ### Set the menu item name and content for internal help resources
      operationId: internal_help_resources_content
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalHelpResourcesContent'
          description: Internal Help Resources Content
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Internal Help Resources Content
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        Update internal help resources content
      operationId: update_internal_help_resources_content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalHelpResourcesContent'
        description: Internal Help Resources Content
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalHelpResourcesContent'
          description: Internal Help Resources Content
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update internal help resources content
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /internal_help_resources_enabled:
    get:
      description: |
        ### Get and set the options for internal help resources
      operationId: internal_help_resources
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalHelpResources'
          description: Internal Help Resources
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Internal Help Resources
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
  /internal_help_resources:
    patch:
      description: |
        Update internal help resources settings
      operationId: update_internal_help_resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalHelpResources'
        description: Custom Welcome Email
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalHelpResources'
          description: Custom Welcome Email
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update internal help resources configuration
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /ldap_config:
    get:
      description: |
        ### Get the LDAP configuration.

        Looker can be optionally configured to authenticate users against an Active Directory or other LDAP directory server.
        LDAP setup requires coordination with an administrator of that directory server.

        Only Looker administrators can read and update the LDAP configuration.

        Configuring LDAP impacts authentication for all users. This configuration should be done carefully.

        Looker maintains a single LDAP configuration. It can be read and updated.       Updates only succeed if the new state will be valid (in the sense that all required fields are populated);       it is up to you to ensure that the configuration is appropriate and correct).

        LDAP is enabled or disabled for Looker using the **enabled** field.

        Looker will never return an **auth_password** field. That value can be set, but never retrieved.

        See the [Looker LDAP docs](https://www.looker.com/docs/r/api/ldap_setup) for additional information.
      operationId: ldap_config
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfig'
          description: LDAP Configuration.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get LDAP Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update the LDAP configuration.

        Configuring LDAP impacts authentication for all users. This configuration should be done carefully.

        Only Looker administrators can read and update the LDAP configuration.

        LDAP is enabled or disabled for Looker using the **enabled** field.

        It is **highly** recommended that any LDAP setting changes be tested using the APIs below before being set globally.

        See the [Looker LDAP docs](https://www.looker.com/docs/r/api/ldap_setup) for additional information.
      operationId: update_ldap_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfig'
        description: LDAP Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfig'
          description: New state for LDAP Configuration.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update LDAP Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /ldap_config/test_connection:
    put:
      description: |
        ### Test the connection settings for an LDAP configuration.

        This tests that the connection is possible given a connection_host and connection_port.

        **connection_host** and **connection_port** are required. **connection_tls** is optional.

        Example:
        ```json
        {
          "connection_host": "ldap.example.com",
          "connection_port": "636",
          "connection_tls": true
        }
        ```

        No authentication to the LDAP server is attempted.

        The active LDAP settings are not modified.
      operationId: test_ldap_config_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfig'
        description: LDAP Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfigTestResult'
          description: Result info.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Test LDAP Connection
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /ldap_config/test_auth:
    put:
      description: |+
        ### Test the connection authentication settings for an LDAP configuration.

        This tests that the connection is possible and that a 'server' account to be used by Looker can       authenticate to the LDAP server given connection and authentication information.

        **connection_host**, **connection_port**, and **auth_username**, are required.       **connection_tls** and **auth_password** are optional.

        Example:
        ```json
        {
          "connection_host": "ldap.example.com",
          "connection_port": "636",
          "connection_tls": true,
          "auth_username": "cn=looker,dc=example,dc=com",
          "auth_password": "secret"
        }
        ```

        Looker will never return an **auth_password**. If this request omits the **auth_password** field, then       the **auth_password** value from the active config (if present) will be used for the test.

        The active LDAP settings are not modified.

      operationId: test_ldap_config_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfig'
        description: LDAP Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfigTestResult'
          description: Result info.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Test LDAP Auth
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /ldap_config/test_user_info:
    put:
      description: |+
        ### Test the user authentication settings for an LDAP configuration without authenticating the user.

        This test will let you easily test the mapping for user properties and roles for any user without      needing to authenticate as that user.

        This test accepts a full LDAP configuration along with a username and attempts to find the full info      for the user from the LDAP server without actually authenticating the user. So, user password is not      required.The configuration is validated before attempting to contact the server.

        **test_ldap_user** is required.

        The active LDAP settings are not modified.

      operationId: test_ldap_config_user_info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfig'
        description: LDAP Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfigTestResult'
          description: Result info.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Test LDAP User Info
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /ldap_config/test_user_auth:
    put:
      description: |+
        ### Test the user authentication settings for an LDAP configuration.

        This test accepts a full LDAP configuration along with a username/password pair and attempts to       authenticate the user with the LDAP server. The configuration is validated before attempting the       authentication.

        Looker will never return an **auth_password**. If this request omits the **auth_password** field, then       the **auth_password** value from the active config (if present) will be used for the test.

        **test_ldap_user** and **test_ldap_password** are required.

        The active LDAP settings are not modified.

      operationId: test_ldap_config_user_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfig'
        description: LDAP Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfigTestResult'
          description: Result info.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Test LDAP User Auth
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /legacy_features:
    get:
      description: |
        ### Get all legacy features.
      operationId: all_legacy_features
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LegacyFeature'
                type: array
          description: Legacy Feature
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Legacy Features
      tags:
      - Config
      x-looker-status: stable
      x-looker-activity-type: non_query
  /legacy_features/{legacy_feature_id}:
    get:
      description: |
        ### Get information about the legacy feature with a specific id.
      operationId: legacy_feature
      parameters:
      - description: id of legacy feature
        in: path
        name: legacy_feature_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyFeature'
          description: Legacy Feature
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Legacy Feature
      tags:
      - Config
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update information about the legacy feature with a specific id.
      operationId: update_legacy_feature
      parameters:
      - description: id of legacy feature
        in: path
        name: legacy_feature_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyFeature'
        description: Legacy Feature
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyFeature'
          description: Legacy Feature
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Legacy Feature
      tags:
      - Config
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /locales:
    get:
      description: |
        ### Get a list of locales that Looker supports.
      operationId: all_locales
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Locale'
                type: array
          description: Locale
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Locales
      tags:
      - Config
      x-looker-status: stable
      x-looker-activity-type: non_query
  /looks:
    get:
      description: |
        ### Get information about all active Looks

        Returns an array of **abbreviated Look objects** describing all the looks that the caller has access to. Soft-deleted Looks are **not** included.

        Get the **full details** of a specific look by id with [look(id)](#!/Look/look)

        Find **soft-deleted looks** with [search_looks()](#!/Look/search_looks)
      operationId: all_looks
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Look'
                type: array
          description: Look
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Looks
      tags:
      - Look
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a Look

        To create a look to display query data, first create the query with [create_query()](#!/Query/create_query)
        then assign the query's id to the `query_id` property in the call to `create_look()`.

        To place the look into a particular space, assign the space's id to the `space_id` property
        in the call to `create_look()`.
      operationId: create_look
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookWithQuery'
        description: Look
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookWithQuery'
          description: Look
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Look
      tags:
      - Look
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /looks/search:
    get:
      description: |
        ### Search Looks

        Returns an **array of Look objects** that match the specified search criteria.

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.


        Get a **single look** by id with [look(id)](#!/Look/look)
      operationId: search_looks
      parameters:
      - description: Match look id.
        in: query
        name: id
        schema:
          type: string
      - description: Match Look title.
        in: query
        name: title
        schema:
          type: string
      - description: Match Look description.
        in: query
        name: description
        schema:
          type: string
      - description: Select looks with a particular content favorite id
        in: query
        name: content_favorite_id
        schema:
          format: int64
          type: integer
      - description: Select looks in a particular space.
        in: query
        name: space_id
        schema:
          type: string
      - description: Select looks created by a particular user.
        in: query
        name: user_id
        schema:
          type: string
      - description: Select looks with particular view_count value
        in: query
        name: view_count
        schema:
          type: string
      - description: Select soft-deleted looks
        in: query
        name: deleted
        schema:
          type: boolean
      - description: Select looks that reference a particular query by query_id
        in: query
        name: query_id
        schema:
          format: int64
          type: integer
      - description: Exclude items that exist only in personal spaces other than the
          users
        in: query
        name: curate
        schema:
          type: boolean
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Number of results to return. (used with offset and takes priority
          over page and per_page)
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any. (used with limit
          and takes priority over page and per_page)
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: 'One or more fields to sort results by. Sortable fields: [:title,
          :user_id, :id, :created_at, :space_id, :folder_id, :description, :updated_at,
          :last_updater_id, :view_count, :favorite_count, :content_favorite_id, :deleted,
          :deleted_at, :last_viewed_at, :last_accessed_at, :query_id]'
        in: query
        name: sorts
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Look'
                type: array
          description: looks
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Looks
      tags:
      - Look
      x-looker-status: beta
      x-looker-activity-type: non_query
  /looks/{look_id}:
    delete:
      description: |
        ### Permanently Delete a Look

        This operation **permanently** removes a look from the Looker database.

        NOTE: There is no "undo" for this kind of delete.

        For information about soft-delete (which can be undone) see [update_look()](#!/Look/update_look).
      operationId: delete_look
      parameters:
      - description: Id of look
        in: path
        name: look_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Look
      tags:
      - Look
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |+
        ### Get a Look.

        Returns detailed information about a Look and its associated Query.

      operationId: look
      parameters:
      - description: Id of look
        in: path
        name: look_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookWithQuery'
          description: Look
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Look
      tags:
      - Look
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Modify a Look

        Use this function to modify parts of a look. Property values given in a call to `update_look` are
        applied to the existing look, so there's no need to include properties whose values are not changing.
        It's best to specify only the properties you want to change and leave everything else out
        of your `update_look` call. **Look properties marked 'read-only' will be ignored.**

        When a user deletes a look in the Looker UI, the look data remains in the database but is
        marked with a deleted flag ("soft-deleted"). Soft-deleted looks can be undeleted (by an admin)
        if the delete was in error.

        To soft-delete a look via the API, use [update_look()](#!/Look/update_look) to change the look's `deleted` property to `true`.
        You can undelete a look by calling `update_look` to change the look's `deleted` property to `false`.

        Soft-deleted looks are excluded from the results of [all_looks()](#!/Look/all_looks) and [search_looks()](#!/Look/search_looks), so they
        essentially disappear from view even though they still reside in the db.
        In API 3.1 and later, you can pass `deleted: true` as a parameter to [search_looks()](#!/3.1/Look/search_looks) to list soft-deleted looks.

        NOTE: [delete_look()](#!/Look/delete_look) performs a "hard delete" - the look data is removed from the Looker
        database and destroyed. There is no "undo" for `delete_look()`.
      operationId: update_look
      parameters:
      - description: Id of look
        in: path
        name: look_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookWithQuery'
        description: Look
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookWithQuery'
          description: Look
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Look
      tags:
      - Look
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /looks/{look_id}/run/{result_format}:
    get:
      description: |+
        ### Run a Look

        Runs a given look's query and returns the results in the requested format.

        Supported formats:

        | result_format | Description
        | :-----------: | :--- |
        | json | Plain json
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | md | Simple markdown
        | xlsx | MS Excel spreadsheet
        | sql | Returns the generated SQL rather than running the query
        | png | A PNG image of the visualization of the query
        | jpg | A JPG image of the visualization of the query


      operationId: run_look
      parameters:
      - description: Id of look
        in: path
        name: look_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Format of result
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Row limit (may override the limit in the saved query).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Apply model-specified formatting to each result.
        in: query
        name: apply_formatting
        schema:
          type: boolean
      - description: Apply visualization options to results.
        in: query
        name: apply_vis
        schema:
          type: boolean
      - description: Get results from cache if available.
        in: query
        name: cache
        schema:
          type: boolean
      - description: Render width for image formats.
        in: query
        name: image_width
        schema:
          format: int64
          type: integer
      - description: Render height for image formats.
        in: query
        name: image_height
        schema:
          format: int64
          type: integer
      - description: Generate drill links (only applicable to 'json_detail' format.
        in: query
        name: generate_drill_links
        schema:
          type: boolean
      - description: Force use of production models even if the user is in development
          mode.
        in: query
        name: force_production
        schema:
          type: boolean
      - description: Retrieve any results from cache even if the results have expired.
        in: query
        name: cache_only
        schema:
          type: boolean
      - description: Prefix to use for drill links (url encoded).
        in: query
        name: path_prefix
        schema:
          type: string
      - description: Rebuild PDTS used in query.
        in: query
        name: rebuild_pdts
        schema:
          type: boolean
      - description: Perform table calculations on query results
        in: query
        name: server_table_calcs
        schema:
          type: boolean
      responses:
        200:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
            image/png:
              schema:
                type: string
            image/jpeg:
              schema:
                type: string
          description: Look
        400:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            text:
              schema:
                $ref: '#/components/schemas/ValidationError'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/png:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Look
      tags:
      - Look
      x-looker-status: stable
      x-looker-activity-type: db_query
  /lookml_models:
    get:
      description: |
        ### Get information about all lookml models.
      operationId: all_lookml_models
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LookmlModel'
                type: array
          description: LookML Model
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All LookML Models
      tags:
      - LookmlModel
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a lookml model using the specified configuration.
      operationId: create_lookml_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookmlModel'
        description: LookML Model
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookmlModel'
          description: LookML Model
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create LookML Model
      tags:
      - LookmlModel
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /lookml_models/{lookml_model_name}:
    delete:
      description: |
        ### Delete a lookml model.
      operationId: delete_lookml_model
      parameters:
      - description: Name of lookml model.
        in: path
        name: lookml_model_name
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete LookML Model
      tags:
      - LookmlModel
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a lookml model.
      operationId: lookml_model
      parameters:
      - description: Name of lookml model.
        in: path
        name: lookml_model_name
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookmlModel'
          description: LookML Model
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get LookML Model
      tags:
      - LookmlModel
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a lookml model using the specified configuration.
      operationId: update_lookml_model
      parameters:
      - description: Name of lookml model.
        in: path
        name: lookml_model_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookmlModel'
        description: LookML Model
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookmlModel'
          description: LookML Model
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update LookML Model
      tags:
      - LookmlModel
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /lookml_models/{lookml_model_name}/explores/{explore_name}:
    get:
      description: |
        ### Get information about a lookml model explore.
      operationId: lookml_model_explore
      parameters:
      - description: Name of lookml model.
        in: path
        name: lookml_model_name
        required: true
        schema:
          type: string
      - description: Name of explore.
        in: path
        name: explore_name
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookmlModelExplore'
          description: LookML Model Explore
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get LookML Model Explore
      tags:
      - LookmlModel
      x-looker-status: stable
      x-looker-activity-type: non_query
  /merge_queries/{merge_query_id}:
    get:
      description: |
        ### Get Merge Query

        Returns a merge query object given its id.
      operationId: merge_query
      parameters:
      - description: Merge Query Id
        in: path
        name: merge_query_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeQuery'
          description: Merge Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Merge Query
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
  /merge_queries:
    post:
      description: |
        ### Create Merge Query

        Creates a new merge query object.

        A merge query takes the results of one or more queries and combines (merges) the results
        according to field mapping definitions. The result is similar to a SQL left outer join.

        A merge query can merge results of queries from different SQL databases.

        The order that queries are defined in the source_queries array property is significant. The
        first query in the array defines the primary key into which the results of subsequent
        queries will be merged.

        Like model/view query objects, merge queries are immutable and have structural identity - if
        you make a request to create a new merge query that is identical to an existing merge query,
        the existing merge query will be returned instead of creating a duplicate. Conversely, any
        change to the contents of a merge query will produce a new object with a new id.
      operationId: create_merge_query
      parameters:
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeQuery'
        description: Merge Query
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeQuery'
          description: Merge Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Merge Query
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /model_sets/search:
    get:
      description: |+
        ### Search model sets
        Returns all model set records that match the given search criteria.
        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_model_sets
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Number of results to return (used with `offset`).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any (used with `limit`).
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match model set id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match model set name.
        in: query
        name: name
        schema:
          type: string
      - description: Match model sets by all_access status.
        in: query
        name: all_access
        schema:
          type: boolean
      - description: Match model sets by built_in status.
        in: query
        name: built_in
        schema:
          type: boolean
      - description: Combine given search criteria in a boolean OR expression.
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSet'
                type: array
          description: Model Set
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Model Sets
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
  /model_sets/{model_set_id}:
    delete:
      description: |
        ### Delete the model set with a specific id.
      operationId: delete_model_set
      parameters:
      - description: id of model set
        in: path
        name: model_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Model set succssfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
      summary: Delete Model Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about the model set with a specific id.
      operationId: model_set
      parameters:
      - description: Id of model set
        in: path
        name: model_set_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSet'
          description: Specified model set.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Model Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update information about the model set with a specific id.
      operationId: update_model_set
      parameters:
      - description: id of model set
        in: path
        name: model_set_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSet'
        description: ModelSet
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSet'
          description: New state for specified model set.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update Model Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /model_sets:
    get:
      description: |
        ### Get information about all model sets.
      operationId: all_model_sets
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelSet'
                type: array
          description: All model sets.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Model Sets
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a model set with the specified information. Model sets are used by Roles.
      operationId: create_model_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelSet'
        description: ModelSet
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSet'
          description: Newly created ModelSet
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Create Model Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /oidc_config:
    get:
      description: |
        ### Get the OIDC configuration.

        Looker can be optionally configured to authenticate users against an OpenID Connect (OIDC)
        authentication server. OIDC setup requires coordination with an administrator of that server.

        Only Looker administrators can read and update the OIDC configuration.

        Configuring OIDC impacts authentication for all users. This configuration should be done carefully.

        Looker maintains a single OIDC configuation. It can be read and updated.       Updates only succeed if the new state will be valid (in the sense that all required fields are populated);       it is up to you to ensure that the configuration is appropriate and correct).

        OIDC is enabled or disabled for Looker using the **enabled** field.
      operationId: oidc_config
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCConfig'
          description: OIDC Configuration.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get OIDC Configuration
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update the OIDC configuration.

        Configuring OIDC impacts authentication for all users. This configuration should be done carefully.

        Only Looker administrators can read and update the OIDC configuration.

        OIDC is enabled or disabled for Looker using the **enabled** field.

        It is **highly** recommended that any OIDC setting changes be tested using the APIs below before being set globally.
      operationId: update_oidc_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OIDCConfig'
        description: OIDC Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCConfig'
          description: New state for OIDC Configuration.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update OIDC Configuration
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /oidc_test_configs/{test_slug}:
    delete:
      description: |
        ### Delete a OIDC test configuration.
      operationId: delete_oidc_test_config
      parameters:
      - description: Slug of test config
        in: path
        name: test_slug
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Test config succssfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Delete OIDC Test Configuration
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get a OIDC test configuration by test_slug.
      operationId: oidc_test_config
      parameters:
      - description: Slug of test config
        in: path
        name: test_slug
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCConfig'
          description: OIDC test config.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get OIDC Test Configuration
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
  /oidc_test_configs:
    post:
      description: |
        ### Create a OIDC test configuration.
      operationId: create_oidc_test_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OIDCConfig'
        description: OIDC test config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCConfig'
          description: OIDC test config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Create OIDC Test Configuration
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /password_config:
    get:
      description: |
        ### Get password config.
      operationId: password_config
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordConfig'
          description: Password Config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Password Config
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update password config.
      operationId: update_password_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordConfig'
        description: Password Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordConfig'
          description: Password Config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Password Config
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /password_config/force_password_reset_at_next_login_for_all_users:
    put:
      description: |
        ### Force all credentials_email users to reset their login passwords upon their next login.
      operationId: force_password_reset_at_next_login_for_all_users
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: Password Config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Force password reset
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
  /permissions:
    get:
      description: |
        ### Get all supported permissions.
      operationId: all_permissions
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Permission'
                type: array
          description: Permission
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Permissions
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
  /permission_sets/search:
    get:
      description: |+
        ### Search permission sets
        Returns all permission set records that match the given search criteria.
        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_permission_sets
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Number of results to return (used with `offset`).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any (used with `limit`).
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match permission set id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match permission set name.
        in: query
        name: name
        schema:
          type: string
      - description: Match permission sets by all_access status.
        in: query
        name: all_access
        schema:
          type: boolean
      - description: Match permission sets by built_in status.
        in: query
        name: built_in
        schema:
          type: boolean
      - description: Combine given search criteria in a boolean OR expression.
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionSet'
                type: array
          description: Permission Set
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Permission Sets
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
  /permission_sets/{permission_set_id}:
    delete:
      description: |
        ### Delete the permission set with a specific id.
      operationId: delete_permission_set
      parameters:
      - description: Id of permission set
        in: path
        name: permission_set_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Permission Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about the permission set with a specific id.
      operationId: permission_set
      parameters:
      - description: Id of permission set
        in: path
        name: permission_set_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSet'
          description: Permission Set
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Permission Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update information about the permission set with a specific id.
      operationId: update_permission_set
      parameters:
      - description: id of permission set
        in: path
        name: permission_set_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionSet'
        description: Permission Set
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSet'
          description: Permission Set
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Permission Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /permission_sets:
    get:
      description: |
        ### Get information about all permission sets.
      operationId: all_permission_sets
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionSet'
                type: array
          description: Permission Set
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Permission Sets
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a permission set with the specified information. Permission sets are used by Roles.
      operationId: create_permission_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionSet'
        description: Permission Set
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSet'
          description: Permission Set
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Permission Set
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /projects/{project_id}/deploy_ref_to_production:
    post:
      description: |+
        ### Deploy a Remote Branch or Ref to Production

        Git must have been configured and deploy permission required.

        Deploy is a one/two step process
        1. If this is the first deploy of this project, create the production project with git repository.
        2. Pull the branch or ref into the production project.

        Can only specify either a branch or a ref.

      operationId: deploy_ref_to_production
      parameters:
      - description: Id of project
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Branch to deploy to production
        in: query
        name: branch
        schema:
          type: string
      - description: Ref to deploy to production
        in: query
        name: ref
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: Project
        204:
          content: {}
          description: Returns 204 if project was successfully deployed to production,
            otherwise 400 with an error message
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Deploy Remote Branch or Ref to Production
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/deploy_to_production:
    post:
      description: |+
        ### Deploy LookML from this Development Mode Project to Production

        Git must have been configured, must be in dev mode and deploy permission required

        Deploy is a two / three step process:

        1. Push commits in current branch of dev mode project to the production branch (origin/master).
           Note a. This step is skipped in read-only projects.
           Note b. If this step is unsuccessful for any reason (e.g. rejected non-fastforward because production branch has
                     commits not in current branch), subsequent steps will be skipped.
        2. If this is the first deploy of this project, create the production project with git repository.
        3. Pull the production branch into the production project.

      operationId: deploy_to_production
      parameters:
      - description: Id of project
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: Project
        204:
          content: {}
          description: Returns 204 if project was successfully deployed to production,
            otherwise 400 with an error message
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Deploy To Production
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/reset_to_production:
    post:
      description: |
        ### Reset a project to the revision of the project that is in production.

        **DANGER** this will delete any changes that have not been pushed to a remote repository.
      operationId: reset_project_to_production
      parameters:
      - description: Id of project
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: Project
        204:
          content: {}
          description: Returns 204 if project was successfully reset, otherwise 400
            with an error message
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Reset To Production
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/reset_to_remote:
    post:
      description: |
        ### Reset a project development branch to the revision of the project that is on the remote.

        **DANGER** this will delete any changes that have not been pushed to a remote repository.
      operationId: reset_project_to_remote
      parameters:
      - description: Id of project
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: Project
        204:
          content: {}
          description: Returns 204 if project was successfully reset, otherwise 400
            with an error message
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Reset To Remote
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects:
    get:
      description: |
        ### Get All Projects

        Returns all projects visible to the current user
      operationId: all_projects
      parameters:
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: Project
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Projects
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |+
        ### Create A Project

        dev mode required.
        - Call `update_session` to select the 'dev' workspace.

        `name` is required.
        `git_remote_url` is not allowed. To configure Git for the newly created project, follow the instructions in `update_project`.

      operationId: create_project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: Project
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Project
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /projects/{project_id}:
    get:
      description: |
        ### Get A Project

        Returns the project with the given project id
      operationId: project
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Project
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |+
        ### Update Project Configuration

        Apply changes to a project's configuration.


        #### Configuring Git for a Project

        To set up a Looker project with a remote git repository, follow these steps:

        1. Call `update_session` to select the 'dev' workspace.
        1. Call `create_git_deploy_key` to create a new deploy key for the project
        1. Copy the deploy key text into the remote git repository's ssh key configuration
        1. Call `update_project` to set project's `git_remote_url` ()and `git_service_name`, if necessary).

        When you modify a project's `git_remote_url`, Looker connects to the remote repository to fetch
        metadata. The remote git repository MUST be configured with the Looker-generated deploy
        key for this project prior to setting the project's `git_remote_url`.

        To set up a Looker project with a git repository residing on the Looker server (a 'bare' git repo):

        1. Call `update_session` to select the 'dev' workspace.
        1. Call `update_project` setting `git_remote_url` to null and `git_service_name` to "bare".

      operationId: update_project
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: Project
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Server Error
      summary: Update Project
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /projects/{project_id}/manifest:
    get:
      description: |
        ### Get A Projects Manifest object

        Returns the project with the given project id
      operationId: manifest
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
          description: Manifest
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Manifest
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/git/deploy_key:
    get:
      description: |
        ### Git Deploy Key

        Returns the ssh public key previously created for a project's git repository.
      operationId: git_deploy_key
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: The text of the public key portion of the deploy_key
        400:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Git Deploy Key
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create Git Deploy Key

        Create a public/private key pair for authenticating ssh git requests from Looker to a remote git repository
        for a particular Looker project.

        Returns the public key of the generated ssh key pair.

        Copy this public key to your remote git repository's ssh keys configuration so that the remote git service can
        validate and accept git requests from the Looker server.
      operationId: create_git_deploy_key
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Project
        400:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Deploy Key
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/validate:
    get:
      description: |
        ### Get Cached Project Validation Results

        Returns the cached results of a previous project validation calculation, if any.
        Returns http status 204 No Content if no validation results exist.

        Validating the content of all the files in a project can be computationally intensive
        for large projects. Use this API to simply fetch the results of the most recent
        project validation rather than revalidating the entire project from scratch.

        A value of `"stale": true` in the response indicates that the project has changed since
        the cached validation results were computed. The cached validation results may no longer
        reflect the current state of the project.
      operationId: project_validation_results
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectValidationCache'
          description: Project validation results
        204:
          content: {}
          description: Deleted
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Cached Project Validation Results
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Validate Project

        Performs lint validation of all lookml files in the project.
        Returns a list of errors found, if any.

        Validating the content of all the files in a project can be computationally intensive
        for large projects. For best performance, call `validate_project(project_id)` only
        when you really want to recompute project validation. To quickly display the results of
        the most recent project validation (without recomputing), use `project_validation_results(project_id)`
      operationId: validate_project
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectValidation'
          description: Project validation results
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Validate Project
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/current_workspace:
    get:
      description: |
        ### Get Project Workspace

        Returns information about the state of the project files in the currently selected workspace
      operationId: project_workspace
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWorkspace'
          description: Project Workspace
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Project Workspace
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/files:
    get:
      description: |
        ### Get All Project Files

        Returns a list of the files in the project
      operationId: all_project_files
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectFile'
                type: array
          description: Project File
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Project Files
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/files/file:
    get:
      description: |
        ### Get Project File Info

        Returns information about a file in the project
      operationId: project_file
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: File Id
        in: query
        name: file_id
        required: true
        schema:
          type: string
      - description: Requested fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
          description: Project File
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Project File
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/git_connection_tests:
    get:
      description: |
        ### Get All Git Connection Tests

        dev mode required.
          - Call `update_session` to select the 'dev' workspace.

        Returns a list of tests which can be run against a project's (or the dependency project for the provided remote_url) git connection. Call [Run Git Connection Test](#!/Project/run_git_connection_test) to execute each test in sequence.

        Tests are ordered by increasing specificity. Tests should be run in the order returned because later tests require functionality tested by tests earlier in the test list.

        For example, a late-stage test for write access is meaningless if connecting to the git server (an early test) is failing.
      operationId: all_git_connection_tests
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: '(Optional: leave blank for root project) The remote url for
          remote dependency to test.'
        in: query
        name: remote_url
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitConnectionTest'
                type: array
          description: Git Connection Test
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Git Connection Tests
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/git_connection_tests/{test_id}:
    get:
      description: |
        ### Run a git connection test

        Run the named test on the git service used by this project (or the dependency project for the provided remote_url) and return the result. This
        is intended to help debug git connections when things do not work properly, to give
        more helpful information about why a git url is not working with Looker.

        Tests should be run in the order they are returned by [Get All Git Connection Tests](#!/Project/all_git_connection_tests).
      operationId: run_git_connection_test
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Test Id
        in: path
        name: test_id
        required: true
        schema:
          type: string
      - description: '(Optional: leave blank for root project) The remote url for
          remote dependency to test.'
        in: query
        name: remote_url
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitConnectionTestResult'
          description: Git Connection Test Result
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Git Connection Test
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/lookml_tests:
    get:
      description: |
        ### Get All LookML Tests

        Returns a list of tests which can be run to validate a project's LookML code and/or the underlying data,
        optionally filtered by the file id.
        Call [Run LookML Test](#!/Project/run_lookml_test) to execute tests.
      operationId: all_lookml_tests
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: File Id
        in: query
        name: file_id
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LookmlTest'
                type: array
          description: LookML Test
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All LookML Tests
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /projects/{project_id}/lookml_tests/run:
    get:
      description: |
        ### Run LookML Tests

        Runs all tests in the project, optionally filtered by file, test, and/or model.
      operationId: run_lookml_test
      parameters:
      - description: Project Id
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: File Name
        in: query
        name: file_id
        schema:
          type: string
      - description: Test Name
        in: query
        name: test
        schema:
          type: string
      - description: Model Name
        in: query
        name: model
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LookmlTestResult'
                type: array
          description: LookML Test Results
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run LookML Test
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /render_tasks/lookml_dashboards/{dashboard_id}/{result_format}:
    post:
      deprecated: true
      description: |+
        ### Create a new task to render a lookml dashboard to a document or image.

        # DEPRECATED:  Use [create_dashboard_render_task()](#!/RenderTask/create_dashboard_render_task) in API 4.0+

        Returns a render task object.
        To check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).
        Once the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).

      operationId: create_lookml_dashboard_render_task
      parameters:
      - description: Id of lookml dashboard to render
        in: path
        name: dashboard_id
        required: true
        schema:
          type: string
      - description: 'Output type: pdf, png, or jpg'
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Output width in pixels
        in: query
        name: width
        required: true
        schema:
          format: int64
          type: integer
      - description: Output height in pixels
        in: query
        name: height
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: 'Paper size for pdf. Value can be one of: ["letter","legal","tabloid","a0","a1","a2","a3","a4","a5"]'
        in: query
        name: pdf_paper_size
        schema:
          type: string
      - description: Whether to render pdf in landscape
        in: query
        name: pdf_landscape
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardRenderTask'
        description: Dashboard render task parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderTask'
          description: Render Task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Lookml Dashboard Render Task
      tags:
      - RenderTask
      x-looker-status: deprecated
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /render_tasks/looks/{look_id}/{result_format}:
    post:
      description: |+
        ### Create a new task to render a look to an image.

        Returns a render task object.
        To check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).
        Once the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).

      operationId: create_look_render_task
      parameters:
      - description: Id of look to render
        in: path
        name: look_id
        required: true
        schema:
          format: int64
          type: integer
      - description: 'Output type: png, or jpg'
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Output width in pixels
        in: query
        name: width
        required: true
        schema:
          format: int64
          type: integer
      - description: Output height in pixels
        in: query
        name: height
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderTask'
          description: Render Task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Look Render Task
      tags:
      - RenderTask
      x-looker-status: beta
      x-looker-activity-type: db_query
  /render_tasks/queries/{query_id}/{result_format}:
    post:
      description: |+
        ### Create a new task to render an existing query to an image.

        Returns a render task object.
        To check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).
        Once the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).

      operationId: create_query_render_task
      parameters:
      - description: Id of the query to render
        in: path
        name: query_id
        required: true
        schema:
          format: int64
          type: integer
      - description: 'Output type: png or jpg'
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Output width in pixels
        in: query
        name: width
        required: true
        schema:
          format: int64
          type: integer
      - description: Output height in pixels
        in: query
        name: height
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderTask'
          description: Render Task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Query Render Task
      tags:
      - RenderTask
      x-looker-status: beta
      x-looker-activity-type: db_query
  /render_tasks/dashboards/{dashboard_id}/{result_format}:
    post:
      description: |+
        ### Create a new task to render a dashboard to a document or image.

        Returns a render task object.
        To check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).
        Once the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).

      operationId: create_dashboard_render_task
      parameters:
      - description: Id of dashboard to render
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: 'Output type: pdf, png, or jpg'
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Output width in pixels
        in: query
        name: width
        required: true
        schema:
          format: int64
          type: integer
      - description: Output height in pixels
        in: query
        name: height
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: 'Paper size for pdf. Value can be one of: ["letter","legal","tabloid","a0","a1","a2","a3","a4","a5"]'
        in: query
        name: pdf_paper_size
        schema:
          type: string
      - description: Whether to render pdf in landscape paper orientation
        in: query
        name: pdf_landscape
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardRenderTask'
        description: Dashboard render task parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderTask'
          description: Render Task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Dashboard Render Task
      tags:
      - RenderTask
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /render_tasks/{render_task_id}:
    get:
      description: |+
        ### Get information about a render task.

        Returns a render task object.
        To check the status of a render task, pass the render_task.id to [Get Render Task](#!/RenderTask/get_render_task).
        Once the render task is complete, you can download the resulting document or image using [Get Render Task Results](#!/RenderTask/get_render_task_results).

      operationId: render_task
      parameters:
      - description: Id of render task
        in: path
        name: render_task_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderTask'
          description: Render Task
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Render Task
      tags:
      - RenderTask
      x-looker-status: beta
      x-looker-activity-type: db_query
  /render_tasks/{render_task_id}/results:
    get:
      description: |
        ### Get the document or image produced by a completed render task.

        Note that the PDF or image result will be a binary blob in the HTTP response, as indicated by the
        Content-Type in the response headers. This may require specialized (or at least different) handling than text
        responses such as JSON. You may need to tell your HTTP client that the response is binary so that it does not
        attempt to parse the binary data as text.

        If the render task exists but has not finished rendering the results, the response HTTP status will be
        **202 Accepted**, the response body will be empty, and the response will have a Retry-After header indicating
        that the caller should repeat the request at a later time.

        Returns 404 if the render task cannot be found, if the cached result has expired, or if the caller
        does not have permission to view the results.

        For detailed information about the status of the render task, use [Render Task](#!/RenderTask/render_task).
        Polling loops waiting for completion of a render task would be better served by polling **render_task(id)** until
        the task status reaches completion (or error) instead of polling **render_task_results(id)** alone.
      operationId: render_task_results
      parameters:
      - description: Id of render task
        in: path
        name: render_task_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            image/jpeg:
              schema:
                type: string
            image/png:
              schema:
                type: string
            application/pdf:
              schema:
                type: string
          description: Document or image
        202:
          content: {}
          description: Accepted
        400:
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Render Task Results
      tags:
      - RenderTask
      x-looker-status: beta
      x-looker-activity-type: db_query
  /projects/{root_project_id}/credential/{credential_id}:
    delete:
      description: |
        ### Repository Credential for a remote dependency

        Admin required.

        `root_project_id` is required.
        `credential_id` is required.
      operationId: delete_repository_credential
      parameters:
      - description: Root Project Id
        in: path
        name: root_project_id
        required: true
        schema:
          type: string
      - description: Credential Id
        in: path
        name: credential_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Repository Credential
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
    put:
      description: |+
        ### Configure Repository Credential for a remote dependency

        Admin required.

        `root_project_id` is required.
        `credential_id` is required.

      operationId: update_repository_credential
      parameters:
      - description: Root Project Id
        in: path
        name: root_project_id
        required: true
        schema:
          type: string
      - description: Credential Id
        in: path
        name: credential_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryCredential'
        description: Remote Project Information
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryCredential'
          description: Repository Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Repository Credential
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /projects/{root_project_id}/credentials:
    get:
      description: |
        ### Get all Repository Credentials for a project

        `root_project_id` is required.
      operationId: get_all_repository_credentials
      parameters:
      - description: Root Project Id
        in: path
        name: root_project_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryCredential'
                type: array
          description: Repository Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Repository Credentials
      tags:
      - Project
      x-looker-status: beta
      x-looker-activity-type: non_query
  /roles:
    get:
      description: |
        ### Get information about all roles.
      operationId: all_roles
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Optional list of ids to get specific roles.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Role
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Roles
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a role with the specified information.
      operationId: create_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: Role
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Role
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /roles/search:
    get:
      description: |+
        ### Search roles

        Returns all role records that match the given search criteria.

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.

      operationId: search_roles
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Number of results to return (used with `offset`).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any (used with `limit`).
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match role id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match role name.
        in: query
        name: name
        schema:
          type: string
      - description: Match roles by built_in status.
        in: query
        name: built_in
        schema:
          type: boolean
      - description: Combine given search criteria in a boolean OR expression.
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Role
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Roles
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
  /roles/{role_id}:
    delete:
      description: |
        ### Delete the role with a specific id.
      operationId: delete_role
      parameters:
      - description: id of role
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Role
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about the role with a specific id.
      operationId: role
      parameters:
      - description: id of role
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Role
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update information about the role with a specific id.
      operationId: update_role
      parameters:
      - description: id of role
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        description: Role
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Role
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /roles/{role_id}/groups:
    get:
      description: |
        ### Get information about all the groups with the role that has a specific id.
      operationId: role_groups
      parameters:
      - description: id of role
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Groups with role.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Role Groups
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    put:
      description: |
        ### Set all groups for a role, removing all existing group associations from that role.
      operationId: set_role_groups
      parameters:
      - description: Id of Role
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: integer
              type: array
        description: Array of Group Ids
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Groups with role.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Role Groups
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /roles/{role_id}/users:
    get:
      description: |
        ### Get information about all the users with the role that has a specific id.
      operationId: role_users
      parameters:
      - description: id of user
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: 'Get only users associated directly with the role: exclude those
          only associated through groups.'
        in: query
        name: direct_association_only
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Users with role.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Role Users
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
    put:
      description: |
        ### Set all the users of the role with a specific id.
      operationId: set_role_users
      parameters:
      - description: id of role
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: integer
              type: array
        description: array of user ids for role
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Users with role.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        405:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Can't Be Modified
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Role Users
      tags:
      - Role
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /running_queries:
    get:
      description: |
        Get information about all running queries.
      operationId: all_running_queries
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RunningQueries'
                type: array
          description: Running Queries.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Running Queries
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
  /running_queries/{query_task_id}:
    delete:
      description: |
        Kill a query with a specific query_task_id.
      operationId: kill_query
      parameters:
      - description: Query task id.
        in: path
        name: query_task_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Query successfully killed.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Kill Running Query
      tags:
      - Query
      x-looker-status: stable
      x-looker-activity-type: db_query
  /saml_config:
    get:
      description: |
        ### Get the SAML configuration.

        Looker can be optionally configured to authenticate users against a SAML authentication server.
        SAML setup requires coordination with an administrator of that server.

        Only Looker administrators can read and update the SAML configuration.

        Configuring SAML impacts authentication for all users. This configuration should be done carefully.

        Looker maintains a single SAML configuation. It can be read and updated.       Updates only succeed if the new state will be valid (in the sense that all required fields are populated);       it is up to you to ensure that the configuration is appropriate and correct).

        SAML is enabled or disabled for Looker using the **enabled** field.
      operationId: saml_config
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlConfig'
          description: SAML Configuration.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get SAML Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update the SAML configuration.

        Configuring SAML impacts authentication for all users. This configuration should be done carefully.

        Only Looker administrators can read and update the SAML configuration.

        SAML is enabled or disabled for Looker using the **enabled** field.

        It is **highly** recommended that any SAML setting changes be tested using the APIs below before being set globally.
      operationId: update_saml_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlConfig'
        description: SAML Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlConfig'
          description: New state for SAML Configuration.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update SAML Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /saml_test_configs/{test_slug}:
    delete:
      description: |
        ### Delete a SAML test configuration.
      operationId: delete_saml_test_config
      parameters:
      - description: Slug of test config
        in: path
        name: test_slug
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Test config succssfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Delete SAML Test Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get a SAML test configuration by test_slug.
      operationId: saml_test_config
      parameters:
      - description: Slug of test config
        in: path
        name: test_slug
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlConfig'
          description: SAML test config.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get SAML Test Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
  /saml_test_configs:
    post:
      description: |
        ### Create a SAML test configuration.
      operationId: create_saml_test_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlConfig'
        description: SAML test config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlConfig'
          description: SAML test config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Create SAML Test Configuration
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /parse_saml_idp_metadata:
    post:
      description: |
        ### Parse the given xml as a SAML IdP metadata document and return the result.
      operationId: parse_saml_idp_metadata
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: SAML IdP metadata xml
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlMetadataParseResult'
          description: Parse result
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Parse SAML IdP XML
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /fetch_and_parse_saml_idp_metadata:
    post:
      description: |
        ### Fetch the given url and parse it as a SAML IdP metadata document and return the result.
        Note that this requires that the url be public or at least at a location where the Looker instance
        can fetch it without requiring any special authentication.
      operationId: fetch_and_parse_saml_idp_metadata
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: SAML IdP metadata public url
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlMetadataParseResult'
          description: Parse result
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Parse SAML IdP Url
      tags:
      - Auth
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /scheduled_plans/space/{space_id}:
    get:
      description: |
        ### Get Scheduled Plans for a Space

        Returns scheduled plans owned by the caller for a given space id.
      operationId: scheduled_plans_for_space
      parameters:
      - description: Space Id
        in: path
        name: space_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledPlan'
                type: array
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Scheduled Plans for Space
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
  /scheduled_plans/{scheduled_plan_id}:
    delete:
      description: |
        ### Delete a Scheduled Plan

        Normal users can only delete their own scheduled plans.
        Admins can delete other users' scheduled plans.
        This delete cannot be undone.
      operationId: delete_scheduled_plan
      parameters:
      - description: Scheduled Plan Id
        in: path
        name: scheduled_plan_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Scheduled Plan
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
    get:
      description: |
        ### Get Information About a Scheduled Plan

        Admins can fetch information about other users' Scheduled Plans.
      operationId: scheduled_plan
      parameters:
      - description: Scheduled Plan Id
        in: path
        name: scheduled_plan_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPlan'
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Scheduled Plan
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
    patch:
      description: |+
        ### Update a Scheduled Plan

        Admins can update other users' Scheduled Plans.

        Note: Any scheduled plan destinations specified in an update will **replace** all scheduled plan destinations
        currently defined for the scheduled plan.

        For Example: If a scheduled plan has destinations A, B, and C, and you call update on this scheduled plan
        specifying only B in the destinations, then destinations A and C will be deleted by the update.

        Updating a scheduled plan to assign null or an empty array to the scheduled_plan_destinations property is an error, as a scheduled plan must always have at least one destination.

        If you omit the scheduled_plan_destinations property from the object passed to update, then the destinations
        defined on the original scheduled plan will remain unchanged.

        #### Email Permissions:

        For details about permissions required to schedule delivery to email and the safeguards
        Looker offers to protect against sending to unauthorized email destinations, see [Email Domain Whitelist for Scheduled Looks](https://docs.looker.com/r/api/embed-permissions).


        #### Scheduled Plan Destination Formats

        Scheduled plan destinations must specify the data format to produce and send to the destination.

        Formats:

        | format | Description
        | :-----------: | :--- |
        | json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | xlsx | MS Excel spreadsheet
        | wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document
        | assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document
        | wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image
        ||

        Valid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.


      operationId: update_scheduled_plan
      parameters:
      - description: Scheduled Plan Id
        in: path
        name: scheduled_plan_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledPlan'
        description: Scheduled Plan
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPlan'
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Scheduled Plan
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /scheduled_plans:
    get:
      description: |+
        ### List All Scheduled Plans

        Returns all scheduled plans which belong to the caller or given user.

        If no user_id is provided, this function returns the scheduled plans owned by the caller.


        To list all schedules for all users, pass `all_users=true`.


        The caller must have `see_schedules` permission to see other users' scheduled plans.


      operationId: all_scheduled_plans
      parameters:
      - description: Return scheduled plans belonging to this user_id. If not provided,
          returns scheduled plans owned by the caller.
        in: query
        name: user_id
        schema:
          format: int64
          type: integer
      - description: Comma delimited list of field names. If provided, only the fields
          specified will be included in the response
        in: query
        name: fields
        schema:
          type: string
      - description: Return scheduled plans belonging to all users (caller needs see_schedules
          permission)
        in: query
        name: all_users
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledPlan'
                type: array
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Get All Scheduled Plans
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
    post:
      description: |+
        ### Create a Scheduled Plan

        Create a scheduled plan to render a Look or Dashboard on a recurring schedule.

        To create a scheduled plan, you MUST provide values for the following fields:
        `name`
        and
        `look_id`, `dashboard_id`, `lookml_dashboard_id`, or `query_id`
        and
        `cron_tab` or `datagroup`
        and
        at least one scheduled_plan_destination

        A scheduled plan MUST have at least one scheduled_plan_destination defined.

        When `look_id` is set, `require_no_results`, `require_results`, and `require_change` are all required.

        If `create_scheduled_plan` fails with a 422 error, be sure to look at the error messages in the response which will explain exactly what fields are missing or values that are incompatible.

        The queries that provide the data for the look or dashboard are run in the context of user account that owns the scheduled plan.

        When `run_as_recipient` is `false` or not specified, the queries that provide the data for the
        look or dashboard are run in the context of user account that owns the scheduled plan.

        When `run_as_recipient` is `true` and all the email recipients are Looker user accounts, the
        queries are run in the context of each recipient, so different recipients may see different
        data from the same scheduled render of a look or dashboard. For more details, see [Run As Recipient](https://looker.com/docs/r/admin/run-as-recipient).

        Admins can create and modify scheduled plans on behalf of other users by specifying a user id.
        Non-admin users may not create or modify scheduled plans by or for other users.

        #### Email Permissions:

        For details about permissions required to schedule delivery to email and the safeguards
        Looker offers to protect against sending to unauthorized email destinations, see [Email Domain Whitelist for Scheduled Looks](https://docs.looker.com/r/api/embed-permissions).


        #### Scheduled Plan Destination Formats

        Scheduled plan destinations must specify the data format to produce and send to the destination.

        Formats:

        | format | Description
        | :-----------: | :--- |
        | json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | xlsx | MS Excel spreadsheet
        | wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document
        | assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document
        | wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image
        ||

        Valid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.


      operationId: create_scheduled_plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledPlan'
        description: Scheduled Plan
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPlan'
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Scheduled Plan
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /scheduled_plans/run_once:
    post:
      description: |+
        ### Run a Scheduled Plan Immediately

        Create a scheduled plan that runs only once, and immediately.

        This can be useful for testing a Scheduled Plan before committing to a production schedule.

        Admins can create scheduled plans on behalf of other users by specifying a user id.

        This API is rate limited to prevent it from being used for relay spam or DoS attacks

        #### Email Permissions:

        For details about permissions required to schedule delivery to email and the safeguards
        Looker offers to protect against sending to unauthorized email destinations, see [Email Domain Whitelist for Scheduled Looks](https://docs.looker.com/r/api/embed-permissions).


        #### Scheduled Plan Destination Formats

        Scheduled plan destinations must specify the data format to produce and send to the destination.

        Formats:

        | format | Description
        | :-----------: | :--- |
        | json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | xlsx | MS Excel spreadsheet
        | wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document
        | assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document
        | wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image
        ||

        Valid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.


      operationId: scheduled_plan_run_once
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledPlan'
        description: Scheduled Plan
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPlan'
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Scheduled Plan Once
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-looker-rate-limited: true
      x-codegen-request-body-name: body
  /scheduled_plans/look/{look_id}:
    get:
      description: |+
        ### Get Scheduled Plans for a Look

        Returns all scheduled plans for a look which belong to the caller or given user.

        If no user_id is provided, this function returns the scheduled plans owned by the caller.


        To list all schedules for all users, pass `all_users=true`.


        The caller must have `see_schedules` permission to see other users' scheduled plans.


      operationId: scheduled_plans_for_look
      parameters:
      - description: Look Id
        in: path
        name: look_id
        required: true
        schema:
          format: int64
          type: integer
      - description: User Id (default is requesting user if not specified)
        in: query
        name: user_id
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Return scheduled plans belonging to all users for the look
        in: query
        name: all_users
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledPlan'
                type: array
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Scheduled Plans for Look
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
  /scheduled_plans/dashboard/{dashboard_id}:
    get:
      description: |+
        ### Get Scheduled Plans for a Dashboard

        Returns all scheduled plans for a dashboard which belong to the caller or given user.

        If no user_id is provided, this function returns the scheduled plans owned by the caller.


        To list all schedules for all users, pass `all_users=true`.


        The caller must have `see_schedules` permission to see other users' scheduled plans.


      operationId: scheduled_plans_for_dashboard
      parameters:
      - description: Dashboard Id
        in: path
        name: dashboard_id
        required: true
        schema:
          format: int64
          type: integer
      - description: User Id (default is requesting user if not specified)
        in: query
        name: user_id
        schema:
          format: int64
          type: integer
      - description: Return scheduled plans belonging to all users for the dashboard
        in: query
        name: all_users
        schema:
          type: boolean
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledPlan'
                type: array
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Scheduled Plans for Dashboard
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
  /scheduled_plans/lookml_dashboard/{lookml_dashboard_id}:
    get:
      description: |+
        ### Get Scheduled Plans for a LookML Dashboard

        Returns all scheduled plans for a LookML Dashboard which belong to the caller or given user.

        If no user_id is provided, this function returns the scheduled plans owned by the caller.


        To list all schedules for all users, pass `all_users=true`.


        The caller must have `see_schedules` permission to see other users' scheduled plans.


      operationId: scheduled_plans_for_lookml_dashboard
      parameters:
      - description: LookML Dashboard Id
        in: path
        name: lookml_dashboard_id
        required: true
        schema:
          type: string
      - description: User Id (default is requesting user if not specified)
        in: query
        name: user_id
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Return scheduled plans belonging to all users for the dashboard
        in: query
        name: all_users
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledPlan'
                type: array
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Scheduled Plans for LookML Dashboard
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
  /scheduled_plans/{scheduled_plan_id}/run_once:
    post:
      description: |+
        ### Run a Scheduled Plan By Id Immediately
        This function creates a run-once schedule plan based on an existing scheduled plan,
        applies modifications (if any) to the new scheduled plan, and runs the new schedule plan immediately.
        This can be useful for testing modifications to an existing scheduled plan before committing to a production schedule.

        This function internally performs the following operations:

        1. Copies the properties of the existing scheduled plan into a new scheduled plan
        2. Copies any properties passed in the JSON body of this request into the new scheduled plan (replacing the original values)
        3. Creates the new scheduled plan
        4. Runs the new scheduled plan

        The original scheduled plan is not modified by this operation.
        Admins can create, modify, and run scheduled plans on behalf of other users by specifying a user id.
        Non-admins can only create, modify, and run their own scheduled plans.

        #### Email Permissions:

        For details about permissions required to schedule delivery to email and the safeguards
        Looker offers to protect against sending to unauthorized email destinations, see [Email Domain Whitelist for Scheduled Looks](https://docs.looker.com/r/api/embed-permissions).


        #### Scheduled Plan Destination Formats

        Scheduled plan destinations must specify the data format to produce and send to the destination.

        Formats:

        | format | Description
        | :-----------: | :--- |
        | json | A JSON object containing a `data` property which contains an array of JSON objects, one per row. No metadata.
        | json_detail | Row data plus metadata describing the fields, pivots, table calcs, and other aspects of the query
        | inline_json | Same as the JSON format, except that the `data` property is a string containing JSON-escaped row data. Additional properties describe the data operation. This format is primarily used to send data to web hooks so that the web hook doesn't have to re-encode the JSON row data in order to pass it on to its ultimate destination.
        | csv | Comma separated values with a header
        | txt | Tab separated values with a header
        | html | Simple html
        | xlsx | MS Excel spreadsheet
        | wysiwyg_pdf | Dashboard rendered in a tiled layout to produce a PDF document
        | assembled_pdf | Dashboard rendered in a single column layout to produce a PDF document
        | wysiwyg_png | Dashboard rendered in a tiled layout to produce a PNG image
        ||

        Valid formats vary by destination type and source object. `wysiwyg_pdf` is only valid for dashboards, for example.



        This API is rate limited to prevent it from being used for relay spam or DoS attacks

      operationId: scheduled_plan_run_once_by_id
      parameters:
      - description: Id of schedule plan to copy and run
        in: path
        name: scheduled_plan_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteScheduledPlan'
        description: Property values to apply to the newly copied scheduled plan before
          running it
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPlan'
          description: Scheduled Plan
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run Scheduled Plan Once by Id
      tags:
      - ScheduledPlan
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-looker-rate-limited: true
      x-codegen-request-body-name: body
  /session_config:
    get:
      description: |
        ### Get session config.
      operationId: session_config
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionConfig'
          description: Session Config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Session Config
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update session config.
      operationId: update_session_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionConfig'
        description: Session Config
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionConfig'
          description: Session Config
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Session Config
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /session:
    get:
      description: |
        ### Get API Session

        Returns information about the current API session, such as which workspace is selected for the session.
      operationId: session
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSession'
          description: Session
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Session
      tags:
      - Session
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update API Session

        #### API Session Workspace

        You can use this endpoint to change the active workspace for the current API session.

        Only one workspace can be active in a session. The active workspace can be changed
        any number of times in a session.

        The default workspace for API sessions is the "production" workspace.

        All Looker APIs that use projects or lookml models (such as running queries) will
        use the version of project and model files defined by this workspace for the lifetime of the
        current API session or until the session workspace is changed again.

        An API session has the same lifetime as the access_token used to authenticate API requests. Each successful
        API login generates a new access_token and a new API session.

        If your Looker API client application needs to work in a dev workspace across multiple
        API sessions, be sure to select the dev workspace after each login.
      operationId: update_session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSession'
        description: Session
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSession'
          description: Session
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Session
      tags:
      - Session
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /spaces/search:
    get:
      description: |
        ### Search Spaces

          Returns an **array of space objects** that match the given search criteria.

          If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.


          The parameters `limit`, and `offset` are recommended for fetching results in page-size chunks.

          Get a **single space** by id with [Space](#!/Space/space)
      operationId: search_spaces
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Number of results to return. (used with offset and takes priority
          over page and per_page)
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any. (used with limit
          and takes priority over page and per_page)
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match Space title.
        in: query
        name: name
        schema:
          type: string
      - description: Match Space id
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Filter on a children of a particular space.
        in: query
        name: parent_id
        schema:
          type: string
      - description: Filter on spaces created by a particular user.
        in: query
        name: creator_id
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Space'
                type: array
          description: spaces
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Spaces
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /spaces/{space_id}:
    delete:
      description: |
        ### Delete the space with a specific id including any children spaces.
        **DANGER** this will delete all looks and dashboards in the space.
      operationId: delete_space
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Space
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: '### Get information about the space with a specific id.'
      operationId: space
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: Space
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Space
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: '### Update the space with a specific id.'
      operationId: update_space
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpace'
        description: Space parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: Space
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Space
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /spaces:
    get:
      description: '### Get information about all spaces.'
      operationId: all_spaces
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpaceBase'
                type: array
          description: Space
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Spaces
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a space with specified information.

        Caller must have permission to edit the parent space and to create spaces, otherwise the request
        returns 404 Not Found.
      operationId: create_space
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpace'
        description: Create a new space
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: Space
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Space
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /spaces/{space_id}/children:
    get:
      description: '### Get the children of a space.'
      operationId: space_children
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Space'
                type: array
          description: Spaces
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Space Children
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /spaces/{space_id}/children/search:
    get:
      description: '### Search the children of a space'
      operationId: space_children_search
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match Space name.
        in: query
        name: name
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Space'
                type: array
          description: Spaces
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Space Children
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /spaces/{space_id}/parent:
    get:
      description: '### Get the parent of a space'
      operationId: space_parent
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: Space
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Space Parent
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /spaces/{space_id}/ancestors:
    get:
      description: '### Get the ancestors of a space'
      operationId: space_ancestors
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Space'
                type: array
          description: Spaces
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Space Ancestors
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /spaces/{space_id}/looks:
    get:
      description: '### Get the looks in a space'
      operationId: space_looks
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LookWithQuery'
                type: array
          description: Looks
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Space Looks
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /spaces/{space_id}/dashboards:
    get:
      description: '### Get the dashboards in a space'
      operationId: space_dashboards
      parameters:
      - description: Id of space
        in: path
        name: space_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
          description: Dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Space Dashboards
      tags:
      - Space
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/search:
    get:
      description: Search for folders by creator id, parent id, name, etc
      operationId: search_folders
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Number of results to return. (used with offset and takes priority
          over page and per_page)
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any. (used with limit
          and takes priority over page and per_page)
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match Space title.
        in: query
        name: name
        schema:
          type: string
      - description: Match Space id
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Filter on a children of a particular folder.
        in: query
        name: parent_id
        schema:
          type: string
      - description: Filter on folder created by a particular user.
        in: query
        name: creator_id
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: folders
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Folders
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/{folder_id}:
    delete:
      description: |
        ### Delete the folder with a specific id including any children folders.
        **DANGER** this will delete all looks and dashboards in the folder.
      operationId: delete_folder
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Folder
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: '### Get information about the folder with a specific id.'
      operationId: folder
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Folder
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Folder
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: '### Update the folder with a specific id.'
      operationId: update_folder
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolder'
        description: Folder parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Folder
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Folder
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /folders:
    get:
      description: '### Get information about all folders.'
      operationId: all_folders
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: Folder
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Folders
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a folder with specified information.

        Caller must have permission to edit the parent folder and to create folders, otherwise the request
        returns 404 Not Found.
      operationId: create_folder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolder'
        description: Folder parameters
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Folder
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Folder
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /folders/{folder_id}/children:
    get:
      description: '### Get the children of a folder.'
      operationId: folder_children
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: Folders
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Folder Children
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/{folder_id}/children/search:
    get:
      description: '### Search the children of a folder'
      operationId: folder_children_search
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match folder name.
        in: query
        name: name
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: Folders
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Folder Children
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/{folder_id}/parent:
    get:
      description: '### Get the parent of a folder'
      operationId: folder_parent
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Folder
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Folder Parent
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/{folder_id}/ancestors:
    get:
      description: '### Get the ancestors of a folder'
      operationId: folder_ancestors
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: Folders
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Folder Ancestors
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/{folder_id}/looks:
    get:
      description: '### Get the looks in a folder'
      operationId: folder_looks
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LookWithQuery'
                type: array
          description: Looks
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Folder Looks
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /folders/{folder_id}/dashboards:
    get:
      description: '### Get the dashboards in a folder'
      operationId: folder_dashboards
      parameters:
      - description: Id of folder
        in: path
        name: folder_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
          description: Dashboard
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Folder Dashboards
      tags:
      - Folder
      x-looker-status: beta
      x-looker-activity-type: non_query
  /sql_queries/{slug}:
    get:
      description: Get a SQL Runner query.
      operationId: sql_query
      parameters:
      - description: slug of query
        in: path
        name: slug
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlQuery'
          description: SQL Runner Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get SQL Runner Query
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
  /sql_queries:
    post:
      description: |
        ### Create a SQL Runner Query

        Either the `connection_name` or `model_name` parameter MUST be provided.
      operationId: create_sql_query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlQueryCreate'
        description: SQL Runner Query
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlQuery'
          description: SQL Runner Query
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create SQL Runner Query
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
      x-codegen-request-body-name: body
  /sql_queries/{slug}/run/{result_format}:
    post:
      description: Execute a SQL Runner query in a given result_format.
      operationId: run_sql_query
      parameters:
      - description: slug of query
        in: path
        name: slug
        required: true
        schema:
          type: string
      - description: 'Format of result, options are: ["inline_json", "json", "json_detail",
          "json_fe", "csv", "html", "md", "txt", "xlsx", "gsxml", "json_label"]'
        in: path
        name: result_format
        required: true
        schema:
          type: string
      - description: Defaults to false. If set to true, the HTTP response will have
          content-disposition and other headers set to make the HTTP response behave
          as a downloadable attachment instead of as inline content.
        in: query
        name: download
        schema:
          type: string
      responses:
        200:
          content:
            text:
              schema:
                type: string
            application/json:
              schema:
                type: string
            image/png:
              schema:
                type: string
            image/jpeg:
              schema:
                type: string
          description: SQL Runner Query
        400:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            text:
              schema:
                $ref: '#/components/schemas/ValidationError'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/png:
              schema:
                $ref: '#/components/schemas/ValidationError'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            text:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            image/png:
              schema:
                $ref: '#/components/schemas/Error'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Run SQL Runner Query
      tags:
      - Query
      x-looker-status: beta
      x-looker-activity-type: db_query
  /themes:
    get:
      description: |+
        ### Get an array of all existing themes

        Get a **single theme** by id with [Theme](#!/Theme/theme)

        This method returns an array of all existing themes. The active time for the theme is not considered.

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: all_themes
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Theme'
                type: array
          description: Themes
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Themes
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
    post:
      description: |+
        ### Create a theme

        Creates a new theme object, returning the theme details, including the created id.

        If `settings` are not specified, the default theme settings will be copied into the new theme.

        The theme `name` can only contain alphanumeric characters or underscores. Theme names should not contain any confidential information, such as customer names.

        **Update** an existing theme with [Update Theme](#!/Theme/update_theme)

        **Permanently delete** an existing theme with [Delete Theme](#!/Theme/delete_theme)

        For more information, see [Creating and Applying Themes](https://looker.com/docs/r/admin/themes).

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: create_theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        description: Theme
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: Theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /themes/search:
    get:
      description: |+
        ### Search all themes for matching criteria.

        Returns an **array of theme objects** that match the specified search criteria.

        | Search Parameters | Description
        | :-------------------: | :------ |
        | `begin_at` only | Find themes active at or after `begin_at`
        | `end_at` only | Find themes active at or before `end_at`
        | both set | Find themes with an active inclusive period between `begin_at` and `end_at`

        Note: Range matching requires boolean AND logic.
        When using `begin_at` and `end_at` together, do not use `filter_or`=TRUE

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.


        Get a **single theme** by id with [Theme](#!/Theme/theme)

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: search_themes
      parameters:
      - description: Match theme id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match theme name.
        in: query
        name: name
        schema:
          type: string
      - description: Timestamp for activation.
        in: query
        name: begin_at
        schema:
          format: date-time
          type: string
      - description: Timestamp for expiration.
        in: query
        name: end_at
        schema:
          format: date-time
          type: string
      - description: Number of results to return (used with `offset`).
        in: query
        name: limit
        schema:
          format: int64
          type: integer
      - description: Number of results to skip before returning any (used with `limit`).
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Theme'
                type: array
          description: Themes
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Themes
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
  /themes/default:
    get:
      description: |
        ### Get the default theme

        Returns the active theme object set as the default.

        The **default** theme name can be set in the UI on the Admin|Theme UI page

        The optional `ts` parameter can specify a different timestamp than "now." If specified, it returns the default theme at the time indicated.
      operationId: default_theme
      parameters:
      - description: Timestamp representing the target datetime for the active period.
          Defaults to 'now'
        in: query
        name: ts
        schema:
          format: date-time
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: Theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Default Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
    put:
      description: |+
        ### Set the global default theme by theme name

        Only Admin users can call this function.

        Only an active theme with no expiration (`end_at` not set) can be assigned as the default theme. As long as a theme has an active record with no expiration, it can be set as the default.

        [Create Theme](#!/Theme/create) has detailed information on rules for default and active themes

        Returns the new specified default theme object.

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: set_default_theme
      parameters:
      - description: Name of theme to set as default
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: Theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Set Default Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
  /themes/active:
    get:
      description: |+
        ### Get active themes

        Returns an array of active themes.

        If the `name` parameter is specified, it will return an array with one theme if it's active and found.

        The optional `ts` parameter can specify a different timestamp than "now."

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.


      operationId: active_themes
      parameters:
      - description: Name of theme
        in: query
        name: name
        schema:
          type: string
      - description: Timestamp representing the target datetime for the active period.
          Defaults to 'now'
        in: query
        name: ts
        schema:
          format: date-time
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Theme'
                type: array
          description: Themes
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Active Themes
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
  /themes/theme_or_default:
    get:
      description: |+
        ### Get the named theme if it's active. Otherwise, return the default theme

        The optional `ts` parameter can specify a different timestamp than "now."
        Note: API users with `show` ability can call this function

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: theme_or_default
      parameters:
      - description: Name of theme
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: Timestamp representing the target datetime for the active period.
          Defaults to 'now'
        in: query
        name: ts
        schema:
          format: date-time
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: Theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Theme or Default
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
  /themes/validate:
    post:
      description: |+
        ### Validate a theme with the specified information

        Validates all values set for the theme, returning any errors encountered, or 200 OK if valid

        See [Create Theme](#!/Theme/create_theme) for constraints

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: validate_theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        description: Theme
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Theme validation results
        204:
          content:
            application/json:
              schema:
                type: string
          description: No errors detected with the theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Validate Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /themes/{theme_id}:
    delete:
      description: |+
        ### Delete a specific theme by id

        This operation permanently deletes the identified theme from the database.

        Because multiple themes can have the same name (with different activation time spans) themes can only be deleted by ID.

        All IDs associated with a theme name can be retrieved by searching for the theme name with [Theme Search](#!/Theme/search).

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: delete_theme
      parameters:
      - description: Id of theme
        in: path
        name: theme_id
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
    get:
      description: |+
        ### Get a theme by ID

        Use this to retrieve a specific theme, whether or not it's currently active.

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: theme
      parameters:
      - description: Id of theme
        in: path
        name: theme_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: Theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
    patch:
      description: |+
        ### Update the theme by id.

        **Note**: Custom themes needs to be enabled by Looker. Unless custom themes are enabled, only the automatically generated default theme can be used. Please contact your Account Manager or help.looker.com to update your license for this feature.

      operationId: update_theme
      parameters:
      - description: Id of theme
        in: path
        name: theme_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        description: Theme
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: Theme
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Theme
      tags:
      - Theme
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /timezones:
    get:
      description: |
        ### Get a list of timezones that Looker supports (e.g. useful for scheduling tasks).
      operationId: all_timezones
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timezone'
                type: array
          description: Timezone
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Timezones
      tags:
      - Config
      x-looker-status: stable
      x-looker-activity-type: non_query
  /user_attributes:
    get:
      description: |
        ### Get information about all user attributes.
      operationId: all_user_attributes
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: 'Fields to order the results by. Sortable fields include: name,
          label'
        in: query
        name: sorts
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAttribute'
                type: array
          description: User Attribute
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All User Attributes
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a new user attribute

        Permission information for a user attribute is conveyed through the `can` and `user_can_edit` fields.
        The `user_can_edit` field indicates whether an attribute is user-editable _anywhere_ in the application.
        The `can` field gives more granular access information, with the `set_value` child field indicating whether
        an attribute's value can be set by [Setting the User Attribute User Value](#!/User/set_user_attribute_user_value).

        Note: `name` and `label` fields must be unique across all user attributes in the Looker instance.
        Attempting to create a new user attribute with a name or label that duplicates an existing
        user attribute will fail with a 422 error.
      operationId: create_user_attribute
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAttribute'
        description: User Attribute
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAttribute'
          description: User Attribute
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create User Attribute
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /user_attributes/{user_attribute_id}:
    delete:
      description: |
        ### Delete a user attribute (admin only).
      operationId: delete_user_attribute
      parameters:
      - description: Id of user_attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete User Attribute
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about a user attribute.
      operationId: user_attribute
      parameters:
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAttribute'
          description: User Attribute
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get User Attribute
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update a user attribute definition.
      operationId: update_user_attribute
      parameters:
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAttribute'
        description: User Attribute
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAttribute'
          description: User Attribute
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update User Attribute
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /user_attributes/{user_attribute_id}/group_values:
    get:
      description: |
        ### Returns all values of a user attribute defined by user groups, in precedence order.

        A user may be a member of multiple groups which define different values for a given user attribute.
        The order of group-values in the response determines precedence for selecting which group-value applies
        to a given user.  For more information, see [Set User Attribute Group Values](#!/UserAttribute/set_user_attribute_group_values).

        Results will only include groups that the caller's user account has permission to see.
      operationId: all_user_attribute_group_values
      parameters:
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAttributeGroupValue'
                type: array
          description: All group values for attribute.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get User Attribute Group Values
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Define values for a user attribute across a set of groups, in priority order.

        This function defines all values for a user attribute defined by user groups. This is a global setting, potentially affecting
        all users in the system. This function replaces any existing group value definitions for the indicated user attribute.

        The value of a user attribute for a given user is determined by searching the following locations, in this order:

        1. the user's account settings
        2. the groups that the user is a member of
        3. the default value of the user attribute, if any

        The user may be a member of multiple groups which define different values for that user attribute. The order of items in the group_values parameter
        determines which group takes priority for that user. Lowest array index wins.

        An alternate method to indicate the selection precedence of group-values is to assign numbers to the 'rank' property of each
        group-value object in the array. Lowest 'rank' value wins. If you use this technique, you must assign a
        rank value to every group-value object in the array.

          To set a user attribute value for a single user, see [Set User Attribute User Value](#!/User/set_user_attribute_user_value).
        To set a user attribute value for all members of a group, see [Set User Attribute Group Value](#!/Group/update_user_attribute_group_value).
      operationId: set_user_attribute_group_values
      parameters:
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UserAttributeGroupValue'
              type: array
        description: Array of group values.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAttributeGroupValue'
                type: array
          description: Array of group values.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Set User Attribute Group Values
      tags:
      - UserAttribute
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /user_login_lockouts:
    get:
      description: |
        ### Get currently locked-out users.
      operationId: all_user_login_lockouts
      parameters:
      - description: Include only these fields in the response
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserLoginLockout'
                type: array
          description: User Login Lockout
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All User Login Lockouts
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
  /user_login_lockouts/search:
    get:
      description: |
        ### Search currently locked-out users.
      operationId: search_user_login_lockouts
      parameters:
      - description: Include only these fields in the response
        in: query
        name: fields
        schema:
          type: string
      - description: Return only page N of paginated results
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Return N rows of data per page
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Auth type user is locked out for (email, ldap, totp, api)
        in: query
        name: auth_type
        schema:
          type: string
      - description: Match name
        in: query
        name: full_name
        schema:
          type: string
      - description: Match email
        in: query
        name: email
        schema:
          type: string
      - description: Match remote LDAP ID
        in: query
        name: remote_id
        schema:
          type: string
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserLoginLockout'
                type: array
          description: User Login Lockout
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search User Login Lockouts
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
  /user_login_lockout/{key}:
    delete:
      description: |
        ### Removes login lockout for the associated user.
      operationId: delete_user_login_lockout
      parameters:
      - description: The key associated with the locked user
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete User Login Lockout
      tags:
      - Auth
      x-looker-status: beta
      x-looker-activity-type: non_query
  /user:
    get:
      description: |
        ### Get information about the current user; i.e. the user account currently calling the API.
      operationId: me
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Current user.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Current User
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users:
    get:
      description: |
        ### Get information about all users.
      operationId: all_users
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Requested page.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Results per page.
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Optional list of ids to get specific users.
        explode: false
        in: query
        name: ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: All users.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Users
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: |
        ### Create a user with the specified information.
      operationId: create_user
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created User
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Create User
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /users/search:
    get:
      description: |+
        ### Search users

        Returns all<sup>*</sup> user records that match the given search criteria.

        If multiple search params are given and `filter_or` is FALSE or not specified,
        search params are combined in a logical AND operation.
        Only rows that match *all* search param criteria will be returned.

        If `filter_or` is TRUE, multiple search params are combined in a logical OR operation.
        Results will include rows that match **any** of the search criteria.

        String search params use case-insensitive matching.
        String search params can contain `%` and '_' as SQL LIKE pattern match wildcard expressions.
        example="dan%" will match "danger" and "Danzig" but not "David"
        example="D_m%" will match "Damage" and "dump"

        Integer search params can accept a single value or a comma separated list of values. The multiple
        values will be combined under a logical OR operation - results will match at least one of
        the given values.

        Most search params can accept "IS NULL" and "NOT NULL" as special expressions to match
        or exclude (respectively) rows where the column is null.

        Boolean search params accept only "true" and "false" as values.


        (<sup>*</sup>) Results are always filtered to the level of information the caller is permitted to view.
        Looker admins can see all user details; normal users in an open system can see
        names of other users but no details; normal users in a closed system can only see
        names of other users who are members of the same group as the user.

      operationId: search_users
      parameters:
      - description: Include only these fields in the response
        in: query
        name: fields
        schema:
          type: string
      - description: Return only page N of paginated results
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Return N rows of data per page
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by.
        in: query
        name: sorts
        schema:
          type: string
      - description: Match User Id.
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match First name.
        in: query
        name: first_name
        schema:
          type: string
      - description: Match Last name.
        in: query
        name: last_name
        schema:
          type: string
      - description: Search for user accounts associated with Looker employees
        in: query
        name: verified_looker_employee
        schema:
          type: boolean
      - description: Search for the user with this email address
        in: query
        name: email
        schema:
          type: string
      - description: Search for disabled user accounts
        in: query
        name: is_disabled
        schema:
          type: boolean
      - description: Combine given search criteria in a boolean OR expression
        in: query
        name: filter_or
        schema:
          type: boolean
      - description: Search for users who have access to this content_metadata item
        in: query
        name: content_metadata_id
        schema:
          format: int64
          type: integer
      - description: Search for users who are direct members of this group
        in: query
        name: group_id
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Matching users.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search Users
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/search/names/{pattern}:
    get:
      description: |
        ### Search for user accounts by name

        Returns all user accounts where `first_name` OR `last_name` OR `email` field values match a pattern.
        The pattern can contain `%` and `_` wildcards as in SQL LIKE expressions.

        Any additional search params will be combined into a logical AND expression.
      operationId: search_users_names
      parameters:
      - description: Pattern to match
        in: path
        name: pattern
        required: true
        schema:
          type: string
      - description: Include only these fields in the response
        in: query
        name: fields
        schema:
          type: string
      - description: Return only page N of paginated results
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: Return N rows of data per page
        in: query
        name: per_page
        schema:
          format: int64
          type: integer
      - description: Fields to sort by
        in: query
        name: sorts
        schema:
          type: string
      - description: Match User Id
        in: query
        name: id
        schema:
          format: int64
          type: integer
      - description: Match First name
        in: query
        name: first_name
        schema:
          type: string
      - description: Match Last name
        in: query
        name: last_name
        schema:
          type: string
      - description: Match Verified Looker employee
        in: query
        name: verified_looker_employee
        schema:
          type: boolean
      - description: Match Email Address
        in: query
        name: email
        schema:
          type: string
      - description: Include or exclude disabled accounts in the results
        in: query
        name: is_disabled
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Matching users.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Search User Names
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}:
    delete:
      description: |
        ### Delete the user with a specific id.

        **DANGER** this will delete the user and all looks and other information owned by the user.
      operationId: delete_user
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: User successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission Denied
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Delete User
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: |
        ### Get information about the user with a specific id.

        If the caller is an admin or the caller is the user being specified, then full user information will
        be returned. Otherwise, a minimal 'public' variant of the user information will be returned. This contains
        The user name and avatar url, but no sensitive information.
      operationId: user
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Specified user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get User by Id
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Update information about the user with a specific id.
      operationId: update_user
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: New state for specified user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Update User
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /users/credential/{credential_type}/{credential_id}:
    get:
      description: |+
        ### Get information about the user with a credential of given type with specific id.

        This is used to do things like find users by their embed external_user_id. Or, find the user with
        a given api3 client_id, etc. The 'credential_type' matchs the 'type' name of the various credential
        types. It must be one of the values listed in the table below. The 'credential_id' is your unique Id
        for the user and is specific to each type of credential.

        An example using the Ruby sdk might look like:

        `sdk.user_for_credential('embed', 'customer-4959425')`

        This table shows the supported 'Credential Type' strings. The right column is for reference; it shows
        which field in the given credential type is actually searched when finding a user with the supplied
        'credential_id'.

        | Credential Types | Id Field Matched |
        | ---------------- | ---------------- |
        | email            | email            |
        | google           | google_user_id   |
        | saml             | saml_user_id     |
        | oidc             | oidc_user_id     |
        | ldap             | ldap_id          |
        | api              | token            |
        | api3             | client_id        |
        | embed            | external_user_id |
        | looker_openid    | email            |

        NOTE: The 'api' credential type was only used with the legacy Looker query API and is no longer supported. The credential type for API you are currently looking at is 'api3'.

      operationId: user_for_credential
      parameters:
      - description: Type name of credential
        in: path
        name: credential_type
        required: true
        schema:
          type: string
      - description: Id of credential
        in: path
        name: credential_id
        required: true
        schema:
          type: string
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Specified user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get User by Credential Id
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_email:
    delete:
      description: '### Email/password login information for the specified user.'
      operationId: delete_user_credentials_email
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Email/Password Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Email/password login information for the specified user.'
      operationId: user_credentials_email
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsEmail'
          description: Email/Password Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Email/Password Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: '### Email/password login information for the specified user.'
      operationId: update_user_credentials_email
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsEmail'
        description: Email/Password Credential
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsEmail'
          description: Email/Password Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Email/Password Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
    post:
      description: '### Email/password login information for the specified user.'
      operationId: create_user_credentials_email
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsEmail'
        description: Email/Password Credential
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsEmail'
          description: Email/Password Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Email/Password Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /users/{user_id}/credentials_totp:
    delete:
      description: '### Two-factor login information for the specified user.'
      operationId: delete_user_credentials_totp
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Two-Factor Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Two-factor login information for the specified user.'
      operationId: user_credentials_totp
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsTotp'
          description: Two-Factor Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Two-Factor Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: '### Two-factor login information for the specified user.'
      operationId: create_user_credentials_totp
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsTotp'
        description: Two-Factor Credential
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsTotp'
          description: Two-Factor Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create Two-Factor Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /users/{user_id}/credentials_ldap:
    delete:
      description: '### LDAP login information for the specified user.'
      operationId: delete_user_credentials_ldap
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete LDAP Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### LDAP login information for the specified user.'
      operationId: user_credentials_ldap
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsLDAP'
          description: LDAP Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get LDAP Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_google:
    delete:
      description: '### Google authentication login information for the specified
        user.'
      operationId: delete_user_credentials_google
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Google Auth Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Google authentication login information for the specified
        user.'
      operationId: user_credentials_google
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGoogle'
          description: Google Auth Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Google Auth Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_saml:
    delete:
      description: '### Saml authentication login information for the specified user.'
      operationId: delete_user_credentials_saml
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Saml Auth Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Saml authentication login information for the specified user.'
      operationId: user_credentials_saml
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsSaml'
          description: Saml Auth Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Saml Auth Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_oidc:
    delete:
      description: '### OpenID Connect (OIDC) authentication login information for
        the specified user.'
      operationId: delete_user_credentials_oidc
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete OIDC Auth Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### OpenID Connect (OIDC) authentication login information for
        the specified user.'
      operationId: user_credentials_oidc
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsOIDC'
          description: OIDC Auth Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get OIDC Auth Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_api3/{credentials_api3_id}:
    delete:
      description: '### API 3 login information for the specified user. This is for
        the newer API keys that can be added for any user.'
      operationId: delete_user_credentials_api3
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: id of API 3 Credential
        in: path
        name: credentials_api3_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete API 3 Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### API 3 login information for the specified user. This is for
        the newer API keys that can be added for any user.'
      operationId: user_credentials_api3
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of API 3 Credential
        in: path
        name: credentials_api3_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsApi3'
          description: API 3 Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get API 3 Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_api3:
    get:
      description: '### API 3 login information for the specified user. This is for
        the newer API keys that can be added for any user.'
      operationId: all_user_credentials_api3s
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CredentialsApi3'
                type: array
          description: API 3 Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All API 3 Credentials
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    post:
      description: '### API 3 login information for the specified user. This is for
        the newer API keys that can be added for any user.'
      operationId: create_user_credentials_api3
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsApi3'
        description: API 3 Credential
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsApi3'
          description: API 3 Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        409:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource Already Exists
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Create API 3 Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /users/{user_id}/credentials_embed/{credentials_embed_id}:
    delete:
      description: '### Embed login information for the specified user.'
      operationId: delete_user_credentials_embed
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: id of Embedding Credential
        in: path
        name: credentials_embed_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Embedding Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Embed login information for the specified user.'
      operationId: user_credentials_embed
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of Embedding Credential
        in: path
        name: credentials_embed_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsEmbed'
          description: Embedding Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Embedding Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_embed:
    get:
      description: '### Embed login information for the specified user.'
      operationId: all_user_credentials_embeds
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CredentialsEmbed'
                type: array
          description: Embedding Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Embedding Credentials
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_looker_openid:
    delete:
      description: '### Looker Openid login information for the specified user. Used
        by Looker Analysts.'
      operationId: delete_user_credentials_looker_openid
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Looker OpenId Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Looker Openid login information for the specified user. Used
        by Looker Analysts.'
      operationId: user_credentials_looker_openid
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsLookerOpenid'
          description: Looker OpenId Credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Looker OpenId Credential
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/sessions/{session_id}:
    delete:
      description: '### Web login session for the specified user.'
      operationId: delete_user_session
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: id of Web Login Session
        in: path
        name: session_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content:
            application/json:
              schema:
                type: string
          description: Successfully deleted.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Delete Web Login Session
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    get:
      description: '### Web login session for the specified user.'
      operationId: user_session
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of Web Login Session
        in: path
        name: session_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Web Login Session
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Web Login Session
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/sessions:
    get:
      description: '### Web login session for the specified user.'
      operationId: all_user_sessions
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: Web Login Session
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Web Login Sessions
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/credentials_email/password_reset:
    post:
      description: |
        ### Create a password reset token.
        This will create a cryptographically secure random password reset token for the user.
        If the user already has a password reset token then this invalidates the old token and creates a new one.
        The token is expressed as the 'password_reset_url' of the user's email/password credential object.
        This takes an optional 'expires' param to indicate if the new token should be an expiring token.
        Tokens that expire are typically used for self-service password resets for existing users.
        Invitation emails for new users typically are not set to expire.
        The expire period is always 60 minutes when expires is enabled.
        This method can be called with an empty body.
      operationId: create_user_credentials_email_password_reset
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Expiring token.
        in: query
        name: expires
        schema:
          type: boolean
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsEmail'
          description: email/password credential
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Create Password Reset Token
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/roles:
    get:
      description: |
        ### Get information about roles of a given user
      operationId: user_roles
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: 'Get only roles associated directly with the user: exclude those
          only associated through groups.'
        in: query
        name: direct_association_only
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Roles of user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get User Roles
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    put:
      description: |
        ### Set roles of the user with a specific id.
      operationId: set_user_roles
      parameters:
      - description: id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int64
                type: integer
              type: array
        description: array of roles ids for user
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Roles of user.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Set User Roles
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /users/{user_id}/attribute_values:
    get:
      description: |
        ### Get user attribute values for a given user.

        Returns the values of specified user attributes (or all user attributes) for a certain user.

        A value for each user attribute is searched for in the following locations, in this order:

        1. in the user's account information
        1. in groups that the user is a member of
        1. the default value of the user attribute

        If more than one group has a value defined for a user attribute, the group with the lowest rank wins.

        The response will only include user attributes for which values were found. Use `include_unset=true` to include
        empty records for user attributes with no value.

        The value of all hidden user attributes will be blank.
      operationId: user_attribute_user_values
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      - description: Specific user attributes to request. Omit or leave blank to request
          all user attributes.
        explode: false
        in: query
        name: user_attribute_ids
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: If true, returns all values in the search path instead of just
          the first value found. Useful for debugging group precedence.
        in: query
        name: all_values
        schema:
          type: boolean
      - description: If true, returns an empty record for each requested attribute
          that has no user, group, or default value.
        in: query
        name: include_unset
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserAttributeWithValue'
                type: array
          description: Value of user attribute.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get User Attribute Values
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
  /users/{user_id}/attribute_values/{user_attribute_id}:
    delete:
      description: |
        ### Delete a user attribute value from a user's account settings.

        After the user attribute value is deleted from the user's account settings, subsequent requests
        for the user attribute value for this user will draw from the user's groups or the default
        value of the user attribute. See [Get User Attribute Values](#!/User/user_attribute_user_values) for more
        information about how user attribute values are resolved.
      operationId: delete_user_attribute_user_value
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        204:
          content: {}
          description: Deleted
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Delete User Attribute User Value
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
    patch:
      description: |
        ### Store a custom value for a user attribute in a user's account settings.

        Per-user user attribute values take precedence over group or default values.
      operationId: set_user_attribute_user_value
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          format: int64
          type: integer
      - description: Id of user attribute
        in: path
        name: user_attribute_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAttributeWithValue'
        description: New attribute value for user.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAttributeWithValue'
          description: User attribute value.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
      summary: Set User Attribute User Value
      tags:
      - User
      x-looker-status: stable
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /vector_thumbnail/{type}/{resource_id}:
    get:
      deprecated: true
      description: |
        ### Get a vector image representing the contents of a dashboard or look.

        # DEPRECATED:  Use [content_thumbnail()](#!/Content/content_thumbnail)

        The returned thumbnail is an abstract representation of the contents of a dashbord or look and does not
        reflect the actual data displayed in the respective visualizations.
      operationId: vector_thumbnail
      parameters:
      - description: Either dashboard or look
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: ID of the dashboard or look to render
        in: path
        name: resource_id
        required: true
        schema:
          type: string
      - description: Whether or not to refresh the rendered image with the latest
          content
        in: query
        name: reload
        schema:
          type: string
      responses:
        200:
          content:
            image/svg+xml:
              schema:
                type: string
          description: Vector thumbnail
        400:
          content:
            image/svg+xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            image/svg+xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Vector Thumbnail
      tags:
      - Content
      x-looker-status: deprecated
      x-looker-activity-type: db_query
  /versions:
    get:
      description: |
        ### Get information about all API versions supported by this Looker instance.
      operationId: versions
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          description: ApiVersion
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get ApiVersion
      tags:
      - Config
      x-looker-status: stable
      x-looker-activity-type: none
  /whitelabel_configuration:
    get:
      description: |
        ### This feature is enabled only by special license.
        ### Gets the whitelabel configuration, which includes hiding documentation links, custom favicon uploading, etc.
      operationId: whitelabel_configuration
      parameters:
      - description: Requested fields.
        in: query
        name: fields
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhitelabelConfiguration'
          description: Whitelabel configuration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Whitelabel configuration
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
    put:
      description: |
        ### Update the whitelabel configuration
      operationId: update_whitelabel_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhitelabelConfiguration'
        description: Whitelabel configuration
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhitelabelConfiguration'
          description: Whitelabel configuration
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Validation Error
        429:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      summary: Update Whitelabel configuration
      tags:
      - Config
      x-looker-status: beta
      x-looker-activity-type: non_query
      x-codegen-request-body-name: body
  /workspaces:
    get:
      description: |
        ### Get All Workspaces

        Returns all workspaces available to the calling user.
      operationId: all_workspaces
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Workspace'
                type: array
          description: Workspace
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get All Workspaces
      tags:
      - Workspace
      x-looker-status: beta
      x-looker-activity-type: non_query
  /workspaces/{workspace_id}:
    get:
      description: |
        ### Get A Workspace

        Returns information about a workspace such as the git status and selected branches
        of all projects available to the caller's user account.

        A workspace defines which versions of project files will be used to evaluate expressions
        and operations that use model definitions - operations such as running queries or rendering dashboards.
        Each project has its own git repository, and each project in a workspace may be configured to reference
        particular branch or revision within their respective repositories.

        There are two predefined workspaces available: "production" and "dev".

        The production workspace is shared across all Looker users. Models in the production workspace are read-only.
        Changing files in production is accomplished by modifying files in a git branch and using Pull Requests
        to merge the changes from the dev branch into the production branch, and then telling
        Looker to sync with production.

        The dev workspace is local to each Looker user. Changes made to project/model files in the dev workspace only affect
        that user, and only when the dev workspace is selected as the active workspace for the API session.
        (See set_session_workspace()).

        The dev workspace is NOT unique to an API session. Two applications accessing the Looker API using
        the same user account will see the same files in the dev workspace. To avoid collisions between
        API clients it's best to have each client login with API3 credentials for a different user account.

        Changes made to files in a dev workspace are persistent across API sessions. It's a good
        idea to commit any changes you've made to the git repository, but not strictly required. Your modified files
        reside in a special user-specific directory on the Looker server and will still be there when you login in again
        later and use update_session(workspace_id: "dev") to select the dev workspace for the new API session.
      operationId: workspace
      parameters:
      - description: 'Id of the workspace '
        in: path
        name: workspace_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Workspace
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: Get Workspace
      tags:
      - Workspace
      x-looker-status: beta
      x-looker-activity-type: non_query
components:
  schemas:
    Error:
      properties:
        message:
          description: Error details
          readOnly: true
          type: string
          x-looker-nullable: true
        documentation_url:
          description: Documentation link
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      required:
      - documentation_url
      - message
      type: object
      x-looker-status: stable
    DashboardBase:
      example:
        query_timezone: query_timezone
        refresh_interval: refresh_interval
        hidden: true
        description: description
        refresh_interval_to_i: 2
        title: title
        space:
          is_embed: true
          child_count: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 1
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 6
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        can:
          key: true
        content_favorite_id: 9
        content_metadata_id: 3
        folder:
          is_embed: true
          child_count: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 4
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 7
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        readonly: true
        user_id: 1
        model:
          id: id
          label: label
        id: id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_favorite_id:
          description: Content Favorite Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        description:
          description: Description
          readOnly: true
          type: string
          x-looker-nullable: true
        hidden:
          description: Is Hidden
          readOnly: true
          type: boolean
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        model:
          $ref: '#/components/schemas/LookModel'
        query_timezone:
          description: Timezone in which the Dashboard will run by default.
          readOnly: true
          type: string
          x-looker-nullable: true
        readonly:
          description: Is Read-only
          readOnly: true
          type: boolean
          x-looker-nullable: false
        refresh_interval:
          description: Refresh Interval, as a time duration phrase like "2 hours 30
            minutes". A number with no time units will be interpreted as whole seconds.
          readOnly: true
          type: string
          x-looker-nullable: true
        refresh_interval_to_i:
          description: Refresh Interval in milliseconds
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        folder:
          $ref: '#/components/schemas/FolderBase'
        title:
          description: Dashboard Title
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: Id of User
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/SpaceBase'
      type: object
      x-looker-status: beta
    SpaceBase:
      example:
        is_embed: true
        child_count: 7
        created_at: 2000-01-23T04:56:07.000+00:00
        external_id: external_id
        is_users_root: true
        is_personal: true
        can:
          key: true
        content_metadata_id: 1
        is_embed_users_root: true
        parent_id: parent_id
        is_shared_root: true
        name: name
        creator_id: 6
        is_embed_shared_root: true
        is_personal_descendant: true
        id: id
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time the space was created
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        creator_id:
          description: User Id of Creator
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        child_count:
          description: Children Count
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        external_id:
          description: Embedder's Id if this space was autogenerated as an embedding
            shared space via 'external_group_id' in an SSO embed login
          readOnly: true
          type: string
          x-looker-nullable: true
        is_embed:
          description: Space is an embed space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_shared_root:
          description: Space is the root embed shared space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_users_root:
          description: Space is the root embed users space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal:
          description: Space is a user's personal space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal_descendant:
          description: Space is descendant of a user's personal space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_shared_root:
          description: Space is the root shared space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_users_root:
          description: Space is the root user space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      required:
      - name
      type: object
      x-looker-status: beta
    CreateSpace:
      example:
        parent_id: parent_id
        name: name
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: false
      required:
      - name
      - parent_id
      type: object
      x-looker-status: beta
    UpdateSpace:
      example:
        parent_id: parent_id
        name: name
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Space:
      example:
        is_embed: true
        child_count: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        external_id: external_id
        is_users_root: true
        dashboards:
        - query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        - query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        is_personal: true
        can:
          key: true
        content_metadata_id: 0
        looks:
        - embed_url: embed_url
          query_id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deleter_id: 7
          description: description
          title: title
          dashboards:
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          short_url: short_url
          public_url: public_url
          can:
            key: true
          content_favorite_id: 2
          excel_file_url: excel_file_url
          public: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          last_viewed_at: 2000-01-23T04:56:07.000+00:00
          favorite_count: 9
          model:
            id: id
            label: label
          id: 5
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          public_slug: public_slug
          last_updater_id: 3
          is_run_on_load: true
          deleted_at: 2000-01-23T04:56:07.000+00:00
          content_metadata_id: 5
          deleted: true
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          user_id: 4
          image_embed_url: image_embed_url
          google_spreadsheet_formula: google_spreadsheet_formula
          folder_id: folder_id
          user:
            id: 1
          space_id: space_id
          view_count: 7
        - embed_url: embed_url
          query_id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deleter_id: 7
          description: description
          title: title
          dashboards:
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          short_url: short_url
          public_url: public_url
          can:
            key: true
          content_favorite_id: 2
          excel_file_url: excel_file_url
          public: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          last_viewed_at: 2000-01-23T04:56:07.000+00:00
          favorite_count: 9
          model:
            id: id
            label: label
          id: 5
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          public_slug: public_slug
          last_updater_id: 3
          is_run_on_load: true
          deleted_at: 2000-01-23T04:56:07.000+00:00
          content_metadata_id: 5
          deleted: true
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          user_id: 4
          image_embed_url: image_embed_url
          google_spreadsheet_formula: google_spreadsheet_formula
          folder_id: folder_id
          user:
            id: 1
          space_id: space_id
          view_count: 7
        is_embed_users_root: true
        parent_id: parent_id
        is_shared_root: true
        name: name
        creator_id: 6
        is_embed_shared_root: true
        is_personal_descendant: true
        id: id
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time the space was created
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        creator_id:
          description: User Id of Creator
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        child_count:
          description: Children Count
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        external_id:
          description: Embedder's Id if this space was autogenerated as an embedding
            shared space via 'external_group_id' in an SSO embed login
          readOnly: true
          type: string
          x-looker-nullable: true
        is_embed:
          description: Space is an embed space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_shared_root:
          description: Space is the root embed shared space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_users_root:
          description: Space is the root embed users space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal:
          description: Space is a user's personal space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal_descendant:
          description: Space is descendant of a user's personal space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_shared_root:
          description: Space is the root shared space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_users_root:
          description: Space is the root user space
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        dashboards:
          description: Dashboards
          items:
            $ref: '#/components/schemas/DashboardBase'
          readOnly: true
          type: array
          x-looker-nullable: true
        looks:
          description: Looks
          items:
            $ref: '#/components/schemas/LookWithDashboards'
          readOnly: true
          type: array
          x-looker-nullable: true
      required:
      - name
      type: object
      x-looker-status: beta
    Homepage:
      example:
        can:
          key: true
        content_metadata_id: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 1
        primary_homepage: true
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        homepage_sections:
        - homepage_items:
          - content_updated_at: content_updated_at
            homepage_section_id: homepage_section_id
            description: description
            title: title
            can:
              key: true
            content_favorite_id: 1
            use_custom_image: true
            section_fetch_time: 3.6160767
            custom_title: custom_title
            use_custom_description: true
            favorite_count: 2
            id: id
            custom_url: custom_url
            order: 9
            look_id: 7
            image_url: image_url
            use_custom_title: true
            content_created_by: content_created_by
            custom_image_data_base64: custom_image_data_base64
            url: url
            lookml_dashboard_id: lookml_dashboard_id
            content_metadata_id: 5
            use_custom_url: true
            location: location
            custom_description: custom_description
            custom_image_url: custom_image_url
            view_count: 2
            dashboard_id: 5
          - content_updated_at: content_updated_at
            homepage_section_id: homepage_section_id
            description: description
            title: title
            can:
              key: true
            content_favorite_id: 1
            use_custom_image: true
            section_fetch_time: 3.6160767
            custom_title: custom_title
            use_custom_description: true
            favorite_count: 2
            id: id
            custom_url: custom_url
            order: 9
            look_id: 7
            image_url: image_url
            use_custom_title: true
            content_created_by: content_created_by
            custom_image_data_base64: custom_image_data_base64
            url: url
            lookml_dashboard_id: lookml_dashboard_id
            content_metadata_id: 5
            use_custom_url: true
            location: location
            custom_description: custom_description
            custom_image_url: custom_image_url
            view_count: 2
            dashboard_id: 5
          can:
            key: true
          detail_url: detail_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          homepage_id: 6
          description: description
          id: id
          title: title
          deleted_at: 2000-01-23T04:56:07.000+00:00
          is_header: true
          item_order:
          - 4
          - 4
        - homepage_items:
          - content_updated_at: content_updated_at
            homepage_section_id: homepage_section_id
            description: description
            title: title
            can:
              key: true
            content_favorite_id: 1
            use_custom_image: true
            section_fetch_time: 3.6160767
            custom_title: custom_title
            use_custom_description: true
            favorite_count: 2
            id: id
            custom_url: custom_url
            order: 9
            look_id: 7
            image_url: image_url
            use_custom_title: true
            content_created_by: content_created_by
            custom_image_data_base64: custom_image_data_base64
            url: url
            lookml_dashboard_id: lookml_dashboard_id
            content_metadata_id: 5
            use_custom_url: true
            location: location
            custom_description: custom_description
            custom_image_url: custom_image_url
            view_count: 2
            dashboard_id: 5
          - content_updated_at: content_updated_at
            homepage_section_id: homepage_section_id
            description: description
            title: title
            can:
              key: true
            content_favorite_id: 1
            use_custom_image: true
            section_fetch_time: 3.6160767
            custom_title: custom_title
            use_custom_description: true
            favorite_count: 2
            id: id
            custom_url: custom_url
            order: 9
            look_id: 7
            image_url: image_url
            use_custom_title: true
            content_created_by: content_created_by
            custom_image_data_base64: custom_image_data_base64
            url: url
            lookml_dashboard_id: lookml_dashboard_id
            content_metadata_id: 5
            use_custom_url: true
            location: location
            custom_description: custom_description
            custom_image_url: custom_image_url
            view_count: 2
            dashboard_id: 5
          can:
            key: true
          detail_url: detail_url
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          homepage_id: 6
          description: description
          id: id
          title: title
          deleted_at: 2000-01-23T04:56:07.000+00:00
          is_header: true
          item_order:
          - 4
          - 4
        title: title
        deleted_at: 2000-01-23T04:56:07.000+00:00
        section_order:
        - 7
        - 7
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_metadata_id:
          description: Id of associated content_metadata record
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Date of homepage creation
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleted_at:
          description: Date of homepage deletion
          format: date-time
          type: string
          x-looker-nullable: true
        description:
          description: Description of the homepage
          type: string
          x-looker-nullable: true
        homepage_sections:
          description: Sections of the homepage
          items:
            $ref: '#/components/schemas/HomepageSection'
          readOnly: true
          type: array
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        section_order:
          description: ids of the homepage sections in the order they should be displayed
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        title:
          description: Title of the homepage
          type: string
          x-looker-nullable: true
        updated_at:
          description: Date of last homepage update
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: User id of homepage creator
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        primary_homepage:
          description: Whether the homepage is the primary homepage or not
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    HomepageSection:
      example:
        homepage_items:
        - content_updated_at: content_updated_at
          homepage_section_id: homepage_section_id
          description: description
          title: title
          can:
            key: true
          content_favorite_id: 1
          use_custom_image: true
          section_fetch_time: 3.6160767
          custom_title: custom_title
          use_custom_description: true
          favorite_count: 2
          id: id
          custom_url: custom_url
          order: 9
          look_id: 7
          image_url: image_url
          use_custom_title: true
          content_created_by: content_created_by
          custom_image_data_base64: custom_image_data_base64
          url: url
          lookml_dashboard_id: lookml_dashboard_id
          content_metadata_id: 5
          use_custom_url: true
          location: location
          custom_description: custom_description
          custom_image_url: custom_image_url
          view_count: 2
          dashboard_id: 5
        - content_updated_at: content_updated_at
          homepage_section_id: homepage_section_id
          description: description
          title: title
          can:
            key: true
          content_favorite_id: 1
          use_custom_image: true
          section_fetch_time: 3.6160767
          custom_title: custom_title
          use_custom_description: true
          favorite_count: 2
          id: id
          custom_url: custom_url
          order: 9
          look_id: 7
          image_url: image_url
          use_custom_title: true
          content_created_by: content_created_by
          custom_image_data_base64: custom_image_data_base64
          url: url
          lookml_dashboard_id: lookml_dashboard_id
          content_metadata_id: 5
          use_custom_url: true
          location: location
          custom_description: custom_description
          custom_image_url: custom_image_url
          view_count: 2
          dashboard_id: 5
        can:
          key: true
        detail_url: detail_url
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        homepage_id: 6
        description: description
        id: id
        title: title
        deleted_at: 2000-01-23T04:56:07.000+00:00
        is_header: true
        item_order:
        - 4
        - 4
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Time at which this section was created.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleted_at:
          description: Time at which this section was deleted.
          format: date-time
          type: string
          x-looker-nullable: true
        detail_url:
          description: A URL pointing to a page showing further information about
            the content in the section.
          readOnly: true
          type: string
          x-looker-nullable: true
        homepage_id:
          description: Id reference to parent homepage
          format: int64
          type: integer
          x-looker-nullable: true
        homepage_items:
          description: Items in the homepage section
          items:
            $ref: '#/components/schemas/HomepageItem'
          readOnly: true
          type: array
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        is_header:
          description: Is this a header section (has no items)
          readOnly: true
          type: boolean
          x-looker-nullable: false
        item_order:
          description: ids of the homepage items in the order they should be displayed
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        title:
          description: Name of row
          type: string
          x-looker-nullable: true
        updated_at:
          description: Time at which this section was last updated.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description of the content found in this section.
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    HomepageItem:
      example:
        content_updated_at: content_updated_at
        homepage_section_id: homepage_section_id
        description: description
        title: title
        can:
          key: true
        content_favorite_id: 1
        use_custom_image: true
        section_fetch_time: 3.6160767
        custom_title: custom_title
        use_custom_description: true
        favorite_count: 2
        id: id
        custom_url: custom_url
        order: 9
        look_id: 7
        image_url: image_url
        use_custom_title: true
        content_created_by: content_created_by
        custom_image_data_base64: custom_image_data_base64
        url: url
        lookml_dashboard_id: lookml_dashboard_id
        content_metadata_id: 5
        use_custom_url: true
        location: location
        custom_description: custom_description
        custom_image_url: custom_image_url
        view_count: 2
        dashboard_id: 5
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_created_by:
          description: Name of user who created the content this item is based on
          readOnly: true
          type: string
          x-looker-nullable: true
        content_favorite_id:
          description: Content favorite id associated with the item this content is
            based on
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        content_metadata_id:
          description: Content metadata id associated with the item this content is
            based on
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        content_updated_at:
          description: Last time the content that this item is based on was updated
          readOnly: true
          type: string
          x-looker-nullable: true
        custom_description:
          description: Custom description entered by the user, if present
          type: string
          x-looker-nullable: true
        custom_image_data_base64:
          description: (Write-Only) base64 encoded image data
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        custom_image_url:
          description: Custom image_url entered by the user, if present
          readOnly: true
          type: string
          x-looker-nullable: true
        custom_title:
          description: Custom title entered by the user, if present
          type: string
          x-looker-nullable: true
        custom_url:
          description: Custom url entered by the user, if present
          type: string
          x-looker-nullable: true
        dashboard_id:
          description: Dashboard to base this item on
          format: int64
          type: integer
          x-looker-nullable: true
        description:
          description: The actual description for display
          readOnly: true
          type: string
          x-looker-nullable: true
        favorite_count:
          description: Number of times content has been favorited, if present
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        homepage_section_id:
          description: Associated Homepage Section
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        image_url:
          description: The actual image_url for display
          readOnly: true
          type: string
          x-looker-nullable: true
        location:
          description: The container folder name of the content
          readOnly: true
          type: string
          x-looker-nullable: true
        look_id:
          description: Look to base this item on
          format: int64
          type: integer
          x-looker-nullable: true
        lookml_dashboard_id:
          description: LookML Dashboard to base this item on
          type: string
          x-looker-nullable: true
        order:
          description: An arbitrary integer representing the sort order within the
            section
          format: int64
          type: integer
          x-looker-nullable: true
        section_fetch_time:
          description: Number of seconds it took to fetch the section this item is
            in
          format: float
          readOnly: true
          type: number
          x-looker-nullable: true
        title:
          description: The actual title for display
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: The actual url for display
          readOnly: true
          type: string
          x-looker-nullable: true
        use_custom_description:
          description: Whether the custom description should be used instead of the
            content description, if the item is associated with content
          type: boolean
          x-looker-nullable: false
        use_custom_image:
          description: Whether the custom image should be used instead of the content
            image, if the item is associated with content
          type: boolean
          x-looker-nullable: false
        use_custom_title:
          description: Whether the custom title should be used instead of the content
            title, if the item is associated with content
          type: boolean
          x-looker-nullable: false
        use_custom_url:
          description: Whether the custom url should be used instead of the content
            url, if the item is associated with content
          type: boolean
          x-looker-nullable: false
        view_count:
          description: Number of times content has been viewed, if present
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ValidationError:
      example:
        message: message
        documentation_url: https://openapi-generator.tech
        errors:
        - code: code
          field: field
          message: message
          documentation_url: https://openapi-generator.tech
        - code: code
          field: field
          message: message
          documentation_url: https://openapi-generator.tech
      properties:
        message:
          description: Error details
          readOnly: true
          type: string
          x-looker-nullable: true
        errors:
          description: Error detail array
          items:
            $ref: '#/components/schemas/ValidationErrorDetail'
          readOnly: true
          type: array
          x-looker-nullable: true
        documentation_url:
          description: Documentation link
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      required:
      - documentation_url
      - message
      type: object
      x-looker-status: stable
    ValidationErrorDetail:
      example:
        code: code
        field: field
        message: message
        documentation_url: https://openapi-generator.tech
      properties:
        field:
          description: Field with error
          readOnly: true
          type: string
          x-looker-nullable: true
        code:
          description: Error code
          readOnly: true
          type: string
          x-looker-nullable: true
        message:
          description: Error info message
          readOnly: true
          type: string
          x-looker-nullable: true
        documentation_url:
          description: Documentation link
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      required:
      - documentation_url
      type: object
      x-looker-status: stable
    AccessToken:
      example:
        access_token: access_token
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          description: Access Token used for API calls
          readOnly: true
          type: string
          x-looker-nullable: false
        token_type:
          description: Type of Token
          readOnly: true
          type: string
          x-looker-nullable: false
        expires_in:
          description: Number of seconds before the token expires
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    ApiSession:
      example:
        workspace_id: workspace_id
        can:
          key: true
        sudo_user_id: 0
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        workspace_id:
          description: The id of active workspace for this session
          type: string
          x-looker-nullable: true
        sudo_user_id:
          description: The id of the actual user in the case when this session represents
            one user sudo'ing as another
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    BackupConfiguration:
      example:
        can:
          key: true
        custom_s3_bucket: custom_s3_bucket
        custom_s3_key: custom_s3_key
        type: type
        custom_s3_secret: custom_s3_secret
        custom_s3_bucket_region: custom_s3_bucket_region
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        type:
          description: 'Type of backup: looker-s3 or custom-s3'
          type: string
          x-looker-nullable: true
        custom_s3_bucket:
          description: Name of bucket for custom-s3 backups
          type: string
          x-looker-nullable: true
        custom_s3_bucket_region:
          description: Name of region where the bucket is located
          type: string
          x-looker-nullable: true
        custom_s3_key:
          description: (Write-Only) AWS S3 key used for custom-s3 backups
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        custom_s3_secret:
          description: (Write-Only) AWS S3 secret used for custom-s3 backups
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ColorStop:
      example:
        color: color
        offset: 0
      properties:
        color:
          description: CSS color string
          type: string
          x-looker-nullable: false
        offset:
          description: Offset in continuous palette (0 to 100)
          format: int64
          type: integer
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ContinuousPalette:
      example:
        id: id
        label: label
        stops:
        - color: color
          offset: 0
        - color: color
          offset: 0
        type: type
      properties:
        id:
          description: Unique identity string
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Label for palette
          type: string
          x-looker-nullable: true
        type:
          description: Type of palette
          type: string
          x-looker-nullable: false
        stops:
          description: Array of ColorStops in the palette
          items:
            $ref: '#/components/schemas/ColorStop'
          type: array
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    DiscretePalette:
      example:
        id: id
        label: label
        type: type
        colors:
        - colors
        - colors
      properties:
        id:
          description: Unique identity string
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Label for palette
          type: string
          x-looker-nullable: true
        type:
          description: Type of palette
          type: string
          x-looker-nullable: false
        colors:
          description: Array of colors in the palette
          items:
            type: string
          type: array
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ColorCollection:
      example:
        divergingPalettes:
        - id: id
          label: label
          stops:
          - color: color
            offset: 0
          - color: color
            offset: 0
          type: type
        - id: id
          label: label
          stops:
          - color: color
            offset: 0
          - color: color
            offset: 0
          type: type
        sequentialPalettes:
        - id: id
          label: label
          stops:
          - color: color
            offset: 0
          - color: color
            offset: 0
          type: type
        - id: id
          label: label
          stops:
          - color: color
            offset: 0
          - color: color
            offset: 0
          type: type
        id: id
        label: label
        categoricalPalettes:
        - id: id
          label: label
          type: type
          colors:
          - colors
          - colors
        - id: id
          label: label
          type: type
          colors:
          - colors
          - colors
      properties:
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Label of color collection
          type: string
          x-looker-nullable: false
        categoricalPalettes:
          description: Array of categorical palette definitions
          items:
            $ref: '#/components/schemas/DiscretePalette'
          type: array
          x-looker-nullable: false
        sequentialPalettes:
          description: Array of discrete palette definitions
          items:
            $ref: '#/components/schemas/ContinuousPalette'
          type: array
          x-looker-nullable: false
        divergingPalettes:
          description: Array of diverging palette definitions
          items:
            $ref: '#/components/schemas/ContinuousPalette'
          type: array
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ContentFavorite:
      example:
        content_metadata_id: 1
        look_id: 5
        user_id: 6
        id: 0
        look:
          can:
            key: true
          content_metadata_id: 2
          id: 7
          title: title
        dashboard:
          query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        dashboard_id: 5
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        user_id:
          description: User Id which owns this ContentFavorite
          format: int64
          type: integer
          x-looker-nullable: false
        content_metadata_id:
          description: Content Metadata Id associated with this ContentFavorite
          format: int64
          type: integer
          x-looker-nullable: false
        look_id:
          description: Id of a look
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of a dashboard
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        look:
          $ref: '#/components/schemas/LookBasic'
        dashboard:
          $ref: '#/components/schemas/DashboardBase'
      type: object
      x-looker-status: beta
    ContentMetaGroupUser:
      example:
        can:
          key: true
        content_metadata_id: content_metadata_id
        permission_type: permission_type
        group_id: 0
        user_id: 6
        id: id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        content_metadata_id:
          description: Id of associated Content Metadata
          readOnly: true
          type: string
          x-looker-nullable: true
        permission_type:
          description: 'Type of permission: "view" or "edit" Valid values are: "view",
            "edit".'
          readOnly: true
          type: string
          x-looker-nullable: true
          x-looker-values:
          - view
          - edit
        group_id:
          description: ID of associated group
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user_id:
          description: ID of associated user
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentMeta:
      example:
        can:
          key: true
        look_id: 1
        content_type: content_type
        inheriting_id: 5
        parent_id: 6
        name: name
        id: 0
        folder_id: folder_id
        inherits: true
        space_id: space_id
        slug: slug
        dashboard_id: dashboard_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        name:
          description: Name or title of underlying content
          readOnly: true
          type: string
          x-looker-nullable: true
        parent_id:
          description: Id of Parent Content
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of associated dashboard when content_type is "dashboard"
          readOnly: true
          type: string
          x-looker-nullable: true
        look_id:
          description: Id of associated look when content_type is "look"
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        folder_id:
          description: Id of associated folder when content_type is "space"
          readOnly: true
          type: string
          x-looker-nullable: true
        content_type:
          description: Content Type ("dashboard", "look", or "space")
          readOnly: true
          type: string
          x-looker-nullable: true
        inherits:
          description: Whether content inherits its access levels from parent
          type: boolean
          x-looker-nullable: false
        inheriting_id:
          description: Id of Inherited Content
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        slug:
          description: Content Slug
          readOnly: true
          type: string
          x-looker-nullable: true
        space_id:
          description: Id of associated space when content_type is "space"
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentValidation:
      example:
        total_alerts_validated: 4
        total_dashboard_elements_validated: 9
        content_with_errors:
        - dashboard_element:
            look_id: look_id
            query_id: 6
            body_text: body_text
            title: title
            type: type
            note_display: note_display
            subtitle_text: subtitle_text
            note_text_as_html: note_text_as_html
            title_hidden: true
            title_text: title_text
            id: id
            note_state: note_state
            note_text: note_text
            dashboard_id: dashboard_id
          dashboard_filter:
            explore: explore
            name: name
            default_value: default_value
            model: model
            id: id
            title: title
            type: type
            dimension: dimension
            dashboard_id: dashboard_id
          lookml_dashboard_element:
            lookml_link_id: lookml_link_id
            title: title
          alert:
            lookml_dashboard_id: lookml_dashboard_id
            lookml_link_id: lookml_link_id
            custom_title: custom_title
            id: 5
          lookml_dashboard:
            id: id
            title: title
            space_id: space_id
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
          scheduled_plan:
            look_id: 1
            name: name
            id: 5
          id: id
          look:
            folder:
              name: name
              id: id
            id: 0
            title: title
            space:
              name: name
              id: id
          dashboard:
            folder:
              name: name
              id: id
            description: description
            id: id
            title: title
            space:
              name: name
              id: id
          errors:
          - model_name: model_name
            removable: true
            message: message
            explore_name: explore_name
            field_name: field_name
          - model_name: model_name
            removable: true
            message: message
            explore_name: explore_name
            field_name: field_name
        - dashboard_element:
            look_id: look_id
            query_id: 6
            body_text: body_text
            title: title
            type: type
            note_display: note_display
            subtitle_text: subtitle_text
            note_text_as_html: note_text_as_html
            title_hidden: true
            title_text: title_text
            id: id
            note_state: note_state
            note_text: note_text
            dashboard_id: dashboard_id
          dashboard_filter:
            explore: explore
            name: name
            default_value: default_value
            model: model
            id: id
            title: title
            type: type
            dimension: dimension
            dashboard_id: dashboard_id
          lookml_dashboard_element:
            lookml_link_id: lookml_link_id
            title: title
          alert:
            lookml_dashboard_id: lookml_dashboard_id
            lookml_link_id: lookml_link_id
            custom_title: custom_title
            id: 5
          lookml_dashboard:
            id: id
            title: title
            space_id: space_id
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
          scheduled_plan:
            look_id: 1
            name: name
            id: 5
          id: id
          look:
            folder:
              name: name
              id: id
            id: 0
            title: title
            space:
              name: name
              id: id
          dashboard:
            folder:
              name: name
              id: id
            description: description
            id: id
            title: title
            space:
              name: name
              id: id
          errors:
          - model_name: model_name
            removable: true
            message: message
            explore_name: explore_name
            field_name: field_name
          - model_name: model_name
            removable: true
            message: message
            explore_name: explore_name
            field_name: field_name
        total_looks_validated: 7
        total_dashboard_filters_validated: 3
        total_scheduled_plans_validated: 2
        computation_time: 2.302136
        total_explores_validated: 7
      properties:
        content_with_errors:
          description: A list of content errors
          items:
            $ref: '#/components/schemas/ContentValidatorError'
          readOnly: true
          type: array
          x-looker-nullable: true
        computation_time:
          description: Duration of content validation in seconds
          format: float
          readOnly: true
          type: number
          x-looker-nullable: true
        total_looks_validated:
          description: The number of looks validated
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        total_dashboard_elements_validated:
          description: The number of dashboard elements validated
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        total_dashboard_filters_validated:
          description: The number of dashboard filters validated
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        total_scheduled_plans_validated:
          description: The number of scheduled plans validated
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        total_alerts_validated:
          description: The number of alerts validated
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        total_explores_validated:
          description: The number of explores used across all content validated
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentValidatorError:
      example:
        dashboard_element:
          look_id: look_id
          query_id: 6
          body_text: body_text
          title: title
          type: type
          note_display: note_display
          subtitle_text: subtitle_text
          note_text_as_html: note_text_as_html
          title_hidden: true
          title_text: title_text
          id: id
          note_state: note_state
          note_text: note_text
          dashboard_id: dashboard_id
        dashboard_filter:
          explore: explore
          name: name
          default_value: default_value
          model: model
          id: id
          title: title
          type: type
          dimension: dimension
          dashboard_id: dashboard_id
        lookml_dashboard_element:
          lookml_link_id: lookml_link_id
          title: title
        alert:
          lookml_dashboard_id: lookml_dashboard_id
          lookml_link_id: lookml_link_id
          custom_title: custom_title
          id: 5
        lookml_dashboard:
          id: id
          title: title
          space_id: space_id
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
        scheduled_plan:
          look_id: 1
          name: name
          id: 5
        id: id
        look:
          folder:
            name: name
            id: id
          id: 0
          title: title
          space:
            name: name
            id: id
        dashboard:
          folder:
            name: name
            id: id
          description: description
          id: id
          title: title
          space:
            name: name
            id: id
        errors:
        - model_name: model_name
          removable: true
          message: message
          explore_name: explore_name
          field_name: field_name
        - model_name: model_name
          removable: true
          message: message
          explore_name: explore_name
          field_name: field_name
      properties:
        look:
          $ref: '#/components/schemas/ContentValidationLook'
        dashboard:
          $ref: '#/components/schemas/ContentValidationDashboard'
        dashboard_element:
          $ref: '#/components/schemas/ContentValidationDashboardElement'
        dashboard_filter:
          $ref: '#/components/schemas/ContentValidationDashboardFilter'
        scheduled_plan:
          $ref: '#/components/schemas/ContentValidationScheduledPlan'
        alert:
          $ref: '#/components/schemas/ContentValidationAlert'
        lookml_dashboard:
          $ref: '#/components/schemas/ContentValidationLookMLDashboard'
        lookml_dashboard_element:
          $ref: '#/components/schemas/ContentValidationLookMLDashboardElement'
        errors:
          description: A list of errors found for this piece of content
          items:
            $ref: '#/components/schemas/ContentValidationError'
          readOnly: true
          type: array
          x-looker-nullable: true
        id:
          description: An id unique to this piece of content for this validation run
          readOnly: true
          type: string
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ContentValidationSpace:
      example:
        name: name
        id: id
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
      required:
      - name
      type: object
      x-looker-status: beta
    ContentValidationFolder:
      example:
        name: name
        id: id
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
      required:
      - name
      type: object
      x-looker-status: beta
    ContentValidationLook:
      example:
        folder:
          name: name
          id: id
        id: 0
        title: title
        space:
          name: name
          id: id
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        title:
          description: Look Title
          type: string
          x-looker-nullable: true
        folder:
          $ref: '#/components/schemas/ContentValidationFolder'
        space:
          $ref: '#/components/schemas/ContentValidationSpace'
      type: object
      x-looker-status: beta
    ContentValidationDashboard:
      example:
        folder:
          name: name
          id: id
        description: description
        id: id
        title: title
        space:
          name: name
          id: id
      properties:
        description:
          description: Description
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        folder:
          $ref: '#/components/schemas/ContentValidationFolder'
        title:
          description: Dashboard Title
          type: string
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/ContentValidationSpace'
      type: object
      x-looker-status: beta
    ContentValidationDashboardElement:
      example:
        look_id: look_id
        query_id: 6
        body_text: body_text
        title: title
        type: type
        note_display: note_display
        subtitle_text: subtitle_text
        note_text_as_html: note_text_as_html
        title_hidden: true
        title_text: title_text
        id: id
        note_state: note_state
        note_text: note_text
        dashboard_id: dashboard_id
      properties:
        body_text:
          description: Text tile body text
          type: string
          x-looker-nullable: true
        dashboard_id:
          description: Id of Dashboard
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        look_id:
          description: Id Of Look
          type: string
          x-looker-nullable: true
        note_display:
          description: Note Display
          type: string
          x-looker-nullable: true
        note_state:
          description: Note State
          type: string
          x-looker-nullable: true
        note_text:
          description: Note Text
          type: string
          x-looker-nullable: true
        note_text_as_html:
          description: Note Text as Html
          readOnly: true
          type: string
          x-looker-nullable: true
        query_id:
          description: Id Of Query
          format: int64
          type: integer
          x-looker-nullable: true
        subtitle_text:
          description: Text tile subtitle text
          type: string
          x-looker-nullable: true
        title:
          description: Title of dashboard element
          type: string
          x-looker-nullable: true
        title_hidden:
          description: Whether title is hidden
          type: boolean
          x-looker-nullable: false
        title_text:
          description: Text tile title
          type: string
          x-looker-nullable: true
        type:
          description: Type
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentValidationError:
      example:
        model_name: model_name
        removable: true
        message: message
        explore_name: explore_name
        field_name: field_name
      properties:
        message:
          description: Error message
          readOnly: true
          type: string
          x-looker-nullable: true
        field_name:
          description: Name of the field involved in the error
          readOnly: true
          type: string
          x-looker-nullable: true
        model_name:
          description: Name of the model involved in the error
          readOnly: true
          type: string
          x-looker-nullable: true
        explore_name:
          description: Name of the explore involved in the error
          readOnly: true
          type: string
          x-looker-nullable: true
        removable:
          description: Whether this validation error is removable
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ContentValidationDashboardFilter:
      example:
        explore: explore
        name: name
        default_value: default_value
        model: model
        id: id
        title: title
        type: type
        dimension: dimension
        dashboard_id: dashboard_id
      properties:
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        dashboard_id:
          description: Id of Dashboard
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of filter
          type: string
          x-looker-nullable: true
        title:
          description: Title of filter
          type: string
          x-looker-nullable: true
        type:
          description: 'Type of filter: one of date, number, string, or field'
          type: string
          x-looker-nullable: true
        default_value:
          description: Default value of filter
          type: string
          x-looker-nullable: true
        model:
          description: Model of filter (required if type = field)
          type: string
          x-looker-nullable: true
        explore:
          description: Explore of filter (required if type = field)
          type: string
          x-looker-nullable: true
        dimension:
          description: Dimension of filter (required if type = field)
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentValidationScheduledPlan:
      example:
        look_id: 1
        name: name
        id: 5
      properties:
        name:
          description: Name of this scheduled plan
          type: string
          x-looker-nullable: true
        look_id:
          description: Id of a look
          format: int64
          type: integer
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ContentValidationAlert:
      example:
        lookml_dashboard_id: lookml_dashboard_id
        lookml_link_id: lookml_link_id
        custom_title: custom_title
        id: 5
      properties:
        id:
          description: ID of the alert
          format: int64
          type: integer
          x-looker-nullable: false
        lookml_dashboard_id:
          description: ID of the LookML dashboard associated with the alert
          type: string
          x-looker-nullable: true
        lookml_link_id:
          description: ID of the LookML dashboard element associated with the alert
          type: string
          x-looker-nullable: true
        custom_title:
          description: An optional, user-defined title for the alert
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentValidationLookMLDashboard:
      example:
        id: id
        title: title
        space_id: space_id
        space:
          is_embed: true
          child_count: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 1
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 6
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
      properties:
        id:
          description: ID of the LookML Dashboard
          readOnly: true
          type: string
          x-looker-nullable: false
        title:
          description: Title of the LookML Dashboard
          readOnly: true
          type: string
          x-looker-nullable: true
        space_id:
          description: ID of Space
          readOnly: true
          type: string
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/SpaceBase'
      type: object
      x-looker-status: beta
    ContentValidationLookMLDashboardElement:
      example:
        lookml_link_id: lookml_link_id
        title: title
      properties:
        lookml_link_id:
          description: Link ID of the LookML Dashboard Element
          readOnly: true
          type: string
          x-looker-nullable: true
        title:
          description: Title of the LookML Dashboard Element
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ContentView:
      example:
        can:
          key: true
        look_id: 6
        content_metadata_id: 5
        start_of_week_date: start_of_week_date
        user_id: 5
        group_id: 2
        last_viewed_at: last_viewed_at
        favorite_count: 9
        id: 0
        view_count: 7
        dashboard_id: 1
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        look_id:
          description: Id of viewed Look
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of the viewed Dashboard
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        content_metadata_id:
          description: Content metadata id of the Look or Dashboard
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user_id:
          description: Id of user content was viewed by
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        group_id:
          description: Id of group content was viewed by
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        view_count:
          description: Number of times piece of content was viewed
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        favorite_count:
          description: Number of times piece of content was favorited
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        last_viewed_at:
          description: Date the piece of content was last viewed
          readOnly: true
          type: string
          x-looker-nullable: true
        start_of_week_date:
          description: Week start date for the view and favorite count during that
            given week
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    CredentialsApi3:
      example:
        can:
          key: true
        is_disabled: true
        created_at: created_at
        id: 0
        type: type
        client_id: client_id
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        client_id:
          description: API key client_id
          readOnly: true
          type: string
          x-looker-nullable: true
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsEmail:
      example:
        can:
          key: true
        password_reset_url: password_reset_url
        is_disabled: true
        user_url: https://openapi-generator.tech
        created_at: created_at
        type: type
        forced_password_reset_at_next_login: true
        logged_in_at: logged_in_at
        email: email
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address used for user login
          type: string
          x-looker-nullable: true
        forced_password_reset_at_next_login:
          description: Force the user to change their password upon their next login
          type: boolean
          x-looker-nullable: false
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        password_reset_url:
          description: Url with one-time use secret token that the user can use to
            reset password
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        user_url:
          description: Link to get this user
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsEmbed:
      example:
        can:
          key: true
        is_disabled: true
        created_at: created_at
        external_group_id: external_group_id
        id: 6
        type: type
        logged_in_at: logged_in_at
        url: https://openapi-generator.tech
        external_user_id: external_user_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        external_group_id:
          description: Embedder's id for a group to which this user was added during
            the most recent login
          readOnly: true
          type: string
          x-looker-nullable: true
        external_user_id:
          description: Embedder's unique id for the user
          readOnly: true
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsGoogle:
      example:
        can:
          key: true
        google_user_id: google_user_id
        domain: domain
        is_disabled: true
        created_at: created_at
        type: type
        logged_in_at: logged_in_at
        email: email
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        domain:
          description: Google domain
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address
          readOnly: true
          type: string
          x-looker-nullable: true
        google_user_id:
          description: Google's Unique ID for this user
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsLDAP:
      example:
        can:
          key: true
        ldap_dn: ldap_dn
        ldap_id: ldap_id
        is_disabled: true
        created_at: created_at
        type: type
        logged_in_at: logged_in_at
        email: email
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        ldap_dn:
          description: LDAP Distinguished name for this user (as-of the last login)
          readOnly: true
          type: string
          x-looker-nullable: true
        ldap_id:
          description: LDAP Unique ID for this user
          readOnly: true
          type: string
          x-looker-nullable: true
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsLookerOpenid:
      example:
        can:
          key: true
        is_disabled: true
        user_url: https://openapi-generator.tech
        created_at: created_at
        logged_in_ip: logged_in_ip
        type: type
        logged_in_at: logged_in_at
        email: email
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address used for user login
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        logged_in_ip:
          description: IP address of client for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        user_url:
          description: Link to get this user
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsOIDC:
      example:
        can:
          key: true
        is_disabled: true
        created_at: created_at
        oidc_user_id: oidc_user_id
        type: type
        logged_in_at: logged_in_at
        email: email
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        oidc_user_id:
          description: OIDC OP's Unique ID for this user
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsSaml:
      example:
        can:
          key: true
        is_disabled: true
        created_at: created_at
        type: type
        logged_in_at: logged_in_at
        email: email
        saml_user_id: saml_user_id
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        logged_in_at:
          description: Timestamp for most recent login using credential
          readOnly: true
          type: string
          x-looker-nullable: true
        saml_user_id:
          description: Saml IdP's Unique ID for this user
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CredentialsTotp:
      example:
        can:
          key: true
        is_disabled: true
        verified: true
        created_at: created_at
        type: type
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Timestamp for the creation of this credential
          readOnly: true
          type: string
          x-looker-nullable: true
        is_disabled:
          description: Has this credential been disabled?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        type:
          description: Short name for the type of this kind of credential
          readOnly: true
          type: string
          x-looker-nullable: true
        verified:
          description: User has verified
          readOnly: true
          type: boolean
          x-looker-nullable: false
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    CustomWelcomeEmail:
      example:
        can:
          key: true
        subject: subject
        header: header
        enabled: true
        content: content
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        enabled:
          description: If true, custom email content will replace the default body
            of welcome emails
          type: boolean
          x-looker-nullable: false
        content:
          description: The HTML to use as custom content for welcome emails. Script
            elements and other potentially dangerous markup will be removed.
          type: string
          x-looker-nullable: true
        subject:
          description: The text to appear in the email subject line.
          type: string
          x-looker-nullable: true
        header:
          description: The text to appear in the header line of the email body.
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DashboardAggregateTableLookml:
      example:
        dashboard_id: dashboard_id
        aggregate_table_lookml: aggregate_table_lookml
      properties:
        dashboard_id:
          description: Dashboard Id
          readOnly: true
          type: string
          x-looker-nullable: true
        aggregate_table_lookml:
          description: Aggregate Table LookML
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DashboardAppearance:
      example:
        page_side_margins: 6
        tile_title_alignment: tile_title_alignment
        key_color: key_color
        tile_space_between: 6
        page_background_color: page_background_color
        tile_shadow: true
        tile_background_color: tile_background_color
      properties:
        page_side_margins:
          description: Page margin (side) width
          format: int64
          type: integer
          x-looker-nullable: true
        page_background_color:
          description: Background color for the dashboard
          type: string
          x-looker-nullable: true
        tile_title_alignment:
          description: Title alignment on dashboard tiles
          type: string
          x-looker-nullable: true
        tile_space_between:
          description: Space between tiles
          format: int64
          type: integer
          x-looker-nullable: true
        tile_background_color:
          description: Background color for tiles
          type: string
          x-looker-nullable: true
        tile_shadow:
          description: Tile shadow on/off
          type: boolean
          x-looker-nullable: true
        key_color:
          description: Key color
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DashboardElement:
      example:
        lookml_link_id: lookml_link_id
        query_id: 1
        body_text: body_text
        refresh_interval_to_i: 6
        title: title
        type: type
        body_text_as_html: body_text_as_html
        note_display: note_display
        can:
          key: true
        subtitle_text: subtitle_text
        alert_count: 5
        result_maker:
          merge_result_id: merge_result_id
          total: true
          vis_config:
            key: vis_config
          query_id: 1
          sql_query_id: sql_query_id
          dynamic_fields: dynamic_fields
          query:
            query_timezone: query_timezone
            vis_config:
              key: vis_config
            filter_expression: filter_expression
            has_table_calculations: true
            row_total: row_total
            expanded_share_url: expanded_share_url
            client_id: client_id
            can:
              key: true
            view: view
            total: true
            visible_ui_sections: visible_ui_sections
            dynamic_fields: dynamic_fields
            limit: limit
            model: model
            id: 6
            sorts:
            - sorts
            - sorts
            slug: slug
            filter_config:
              key: filter_config
            subtotals:
            - subtotals
            - subtotals
            fill_fields:
            - fill_fields
            - fill_fields
            runtime: 1.4658129805029452
            filters:
              key: filters
            pivots:
            - pivots
            - pivots
            url: url
            share_url: share_url
            fields:
            - fields
            - fields
            column_limit: column_limit
          filterables:
          - view: view
            name: name
            model: model
            listen:
            - field: field
              dashboard_filter_name: dashboard_filter_name
            - field: field
              dashboard_filter_name: dashboard_filter_name
          - view: view
            name: name
            model: model
            listen:
            - field: field
              dashboard_filter_name: dashboard_filter_name
            - field: field
              dashboard_filter_name: dashboard_filter_name
          id: 7
          sorts:
          - sorts
          - sorts
        note_text_as_html: note_text_as_html
        title_hidden: true
        subtitle_text_as_html: subtitle_text_as_html
        id: id
        title_text_as_html: title_text_as_html
        look_id: look_id
        refresh_interval: refresh_interval
        query:
          query_timezone: query_timezone
          vis_config:
            key: vis_config
          filter_expression: filter_expression
          has_table_calculations: true
          row_total: row_total
          expanded_share_url: expanded_share_url
          client_id: client_id
          can:
            key: true
          view: view
          total: true
          visible_ui_sections: visible_ui_sections
          dynamic_fields: dynamic_fields
          limit: limit
          model: model
          id: 6
          sorts:
          - sorts
          - sorts
          slug: slug
          filter_config:
            key: filter_config
          subtotals:
          - subtotals
          - subtotals
          fill_fields:
          - fill_fields
          - fill_fields
          runtime: 1.4658129805029452
          filters:
            key: filters
          pivots:
          - pivots
          - pivots
          url: url
          share_url: share_url
          fields:
          - fields
          - fields
          column_limit: column_limit
        look:
          embed_url: embed_url
          query_id: 4
          created_at: 2000-01-23T04:56:07.000+00:00
          deleter_id: 9
          description: description
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          short_url: short_url
          public_url: public_url
          can:
            key: true
          content_favorite_id: 7
          excel_file_url: excel_file_url
          public: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          last_viewed_at: 2000-01-23T04:56:07.000+00:00
          favorite_count: 3
          model:
            id: id
            label: label
          id: 2
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          public_slug: public_slug
          last_updater_id: 2
          query:
            query_timezone: query_timezone
            vis_config:
              key: vis_config
            filter_expression: filter_expression
            has_table_calculations: true
            row_total: row_total
            expanded_share_url: expanded_share_url
            client_id: client_id
            can:
              key: true
            view: view
            total: true
            visible_ui_sections: visible_ui_sections
            dynamic_fields: dynamic_fields
            limit: limit
            model: model
            id: 6
            sorts:
            - sorts
            - sorts
            slug: slug
            filter_config:
              key: filter_config
            subtotals:
            - subtotals
            - subtotals
            fill_fields:
            - fill_fields
            - fill_fields
            runtime: 1.4658129805029452
            filters:
              key: filters
            pivots:
            - pivots
            - pivots
            url: url
            share_url: share_url
            fields:
            - fields
            - fields
            column_limit: column_limit
          is_run_on_load: true
          deleted_at: 2000-01-23T04:56:07.000+00:00
          url: url
          content_metadata_id: 5
          deleted: true
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          user_id: 7
          image_embed_url: image_embed_url
          google_spreadsheet_formula: google_spreadsheet_formula
          folder_id: folder_id
          user:
            id: 1
          space_id: space_id
          view_count: 1
        merge_result_id: merge_result_id
        edit_uri: https://openapi-generator.tech
        title_text: title_text
        result_maker_id: 4
        note_state: note_state
        note_text: note_text
        dashboard_id: dashboard_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        body_text:
          description: Text tile body text
          type: string
          x-looker-nullable: true
        body_text_as_html:
          description: Text tile body text as Html
          readOnly: true
          type: string
          x-looker-nullable: true
        dashboard_id:
          description: Id of Dashboard
          type: string
          x-looker-nullable: true
        edit_uri:
          description: Relative path of URI of LookML file to edit the dashboard element
            (LookML dashboard only).
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        look:
          $ref: '#/components/schemas/LookWithQuery'
        look_id:
          description: Id Of Look
          type: string
          x-looker-nullable: true
        lookml_link_id:
          description: LookML link ID
          readOnly: true
          type: string
          x-looker-nullable: true
        merge_result_id:
          description: ID of merge result
          type: string
          x-looker-nullable: true
        note_display:
          description: Note Display
          type: string
          x-looker-nullable: true
        note_state:
          description: Note State
          type: string
          x-looker-nullable: true
        note_text:
          description: Note Text
          type: string
          x-looker-nullable: true
        note_text_as_html:
          description: Note Text as Html
          readOnly: true
          type: string
          x-looker-nullable: true
        query:
          $ref: '#/components/schemas/Query'
        query_id:
          description: Id Of Query
          format: int64
          type: integer
          x-looker-nullable: true
        refresh_interval:
          description: Refresh Interval
          type: string
          x-looker-nullable: true
        refresh_interval_to_i:
          description: Refresh Interval as integer
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        result_maker:
          $ref: '#/components/schemas/ResultMakerWithIdVisConfigAndDynamicFields'
        result_maker_id:
          description: ID of the ResultMakerLookup entry.
          format: int64
          type: integer
          x-looker-nullable: true
        subtitle_text:
          description: Text tile subtitle text
          type: string
          x-looker-nullable: true
        title:
          description: Title of dashboard element
          type: string
          x-looker-nullable: true
        title_hidden:
          description: Whether title is hidden
          type: boolean
          x-looker-nullable: false
        title_text:
          description: Text tile title
          type: string
          x-looker-nullable: true
        type:
          description: Type
          type: string
          x-looker-nullable: true
        alert_count:
          description: Count of Alerts associated to a dashboard element
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        title_text_as_html:
          description: Text tile title text as Html
          readOnly: true
          type: string
          x-looker-nullable: true
        subtitle_text_as_html:
          description: Text tile subtitle text as Html
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DashboardFilter:
      example:
        explore: explore
        allow_multiple_values: true
        default_value: default_value
        title: title
        type: type
        required: true
        can:
          key: true
        field:
          key: field
        name: name
        model: model
        id: id
        row: 9
        listens_to_filters:
        - listens_to_filters
        - listens_to_filters
        ui_config:
          key: ui_config
        dimension: dimension
        dashboard_id: dashboard_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        dashboard_id:
          description: Id of Dashboard
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of filter
          type: string
          x-looker-nullable: true
        title:
          description: Title of filter
          type: string
          x-looker-nullable: true
        type:
          description: 'Type of filter: one of date, number, string, or field'
          type: string
          x-looker-nullable: true
        default_value:
          description: Default value of filter
          type: string
          x-looker-nullable: true
        model:
          description: Model of filter (required if type = field)
          type: string
          x-looker-nullable: true
        explore:
          description: Explore of filter (required if type = field)
          type: string
          x-looker-nullable: true
        dimension:
          description: Dimension of filter (required if type = field)
          type: string
          x-looker-nullable: true
        field:
          additionalProperties:
            format: any
            type: string
          description: Field information
          readOnly: true
          type: object
          x-looker-nullable: true
        row:
          description: Display order of this filter relative to other filters
          format: int64
          type: integer
          x-looker-nullable: true
        listens_to_filters:
          description: Array of listeners for faceted filters
          items:
            type: string
          type: array
          x-looker-nullable: true
        allow_multiple_values:
          description: Whether the filter allows multiple filter values
          type: boolean
          x-looker-nullable: false
        required:
          description: Whether the filter requires a value to run the dashboard
          type: boolean
          x-looker-nullable: false
        ui_config:
          additionalProperties:
            format: any
            type: string
          description: The visual configuration for this filter. Used to set up how
            the UI for this filter should appear.
          type: object
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    CreateDashboardFilter:
      example:
        explore: explore
        allow_multiple_values: true
        default_value: default_value
        title: title
        type: type
        required: true
        field:
          key: field
        name: name
        model: model
        id: id
        row: 0
        listens_to_filters:
        - listens_to_filters
        - listens_to_filters
        ui_config:
          key: ui_config
        dimension: dimension
        dashboard_id: dashboard_id
      properties:
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        dashboard_id:
          description: Id of Dashboard
          type: string
          x-looker-nullable: true
        name:
          description: Name of filter
          type: string
          x-looker-nullable: true
        title:
          description: Title of filter
          type: string
          x-looker-nullable: true
        type:
          description: 'Type of filter: one of date, number, string, or field'
          type: string
          x-looker-nullable: true
        default_value:
          description: Default value of filter
          type: string
          x-looker-nullable: true
        model:
          description: Model of filter (required if type = field)
          type: string
          x-looker-nullable: true
        explore:
          description: Explore of filter (required if type = field)
          type: string
          x-looker-nullable: true
        dimension:
          description: Dimension of filter (required if type = field)
          type: string
          x-looker-nullable: true
        field:
          additionalProperties:
            format: any
            type: string
          description: Field information
          readOnly: true
          type: object
          x-looker-nullable: true
        row:
          description: Display order of this filter relative to other filters
          format: int64
          type: integer
          x-looker-nullable: true
        listens_to_filters:
          description: Array of listeners for faceted filters
          items:
            type: string
          type: array
          x-looker-nullable: true
        allow_multiple_values:
          description: Whether the filter allows multiple filter values
          type: boolean
          x-looker-nullable: false
        required:
          description: Whether the filter requires a value to run the dashboard
          type: boolean
          x-looker-nullable: false
        ui_config:
          additionalProperties:
            format: any
            type: string
          description: The visual configuration for this filter. Used to set up how
            the UI for this filter should appear.
          type: object
          x-looker-nullable: true
      required:
      - dashboard_id
      - name
      - title
      - type
      type: object
      x-looker-status: beta
    DashboardLayoutComponent:
      example:
        can:
          key: true
        element_title: element_title
        deleted: true
        element_title_hidden: true
        column: 9
        width: 6
        id: id
        row: 8
        dashboard_element_id: dashboard_element_id
        vis_type: vis_type
        dashboard_layout_id: dashboard_layout_id
        height: 3
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        dashboard_layout_id:
          description: Id of Dashboard Layout
          type: string
          x-looker-nullable: true
        dashboard_element_id:
          description: Id Of Dashboard Element
          type: string
          x-looker-nullable: true
        row:
          description: Row
          format: int64
          type: integer
          x-looker-nullable: true
        column:
          description: Column
          format: int64
          type: integer
          x-looker-nullable: true
        width:
          description: Width
          format: int64
          type: integer
          x-looker-nullable: true
        height:
          description: Height
          format: int64
          type: integer
          x-looker-nullable: true
        deleted:
          description: Whether or not the dashboard layout component is deleted
          readOnly: true
          type: boolean
          x-looker-nullable: false
        element_title:
          description: Dashboard element title, extracted from the Dashboard Element.
          readOnly: true
          type: string
          x-looker-nullable: true
        element_title_hidden:
          description: Whether or not the dashboard element title is displayed.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        vis_type:
          description: Visualization type, extracted from a query's vis_config
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DashboardLayout:
      example:
        can:
          key: true
        deleted: true
        dashboard_title: dashboard_title
        width: 6
        active: true
        dashboard_layout_components:
        - can:
            key: true
          element_title: element_title
          deleted: true
          element_title_hidden: true
          column: 9
          width: 6
          id: id
          row: 8
          dashboard_element_id: dashboard_element_id
          vis_type: vis_type
          dashboard_layout_id: dashboard_layout_id
          height: 3
        - can:
            key: true
          element_title: element_title
          deleted: true
          element_title_hidden: true
          column: 9
          width: 6
          id: id
          row: 8
          dashboard_element_id: dashboard_element_id
          vis_type: vis_type
          dashboard_layout_id: dashboard_layout_id
          height: 3
        column_width: 9
        id: id
        type: type
        dashboard_id: dashboard_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        dashboard_id:
          description: Id of Dashboard
          type: string
          x-looker-nullable: true
        type:
          description: Type
          type: string
          x-looker-nullable: true
        active:
          description: Is Active
          type: boolean
          x-looker-nullable: false
        column_width:
          description: Column Width
          format: int64
          type: integer
          x-looker-nullable: true
        width:
          description: Width
          format: int64
          type: integer
          x-looker-nullable: true
        deleted:
          description: Whether or not the dashboard layout is deleted.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        dashboard_title:
          description: Title extracted from the dashboard this layout represents.
          readOnly: true
          type: string
          x-looker-nullable: true
        dashboard_layout_components:
          description: Components
          items:
            $ref: '#/components/schemas/DashboardLayoutComponent'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DashboardLookml:
      example:
        lookml: lookml
        dashboard_id: dashboard_id
      properties:
        dashboard_id:
          description: Id of Dashboard
          readOnly: true
          type: string
          x-looker-nullable: true
        lookml:
          description: lookml of UDD
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    Dashboard:
      example:
        query_timezone: query_timezone
        lookml_link_id: lookml_link_id
        hidden: true
        preferred_viewer: preferred_viewer
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        deleter_id: 6
        tile_text_color: tile_text_color
        refresh_interval_to_i: 1
        title: title
        tile_background_color: tile_background_color
        space:
          is_embed: true
          child_count: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 1
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 6
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        can:
          key: true
        content_favorite_id: 0
        readonly: true
        last_viewed_at: 2000-01-23T04:56:07.000+00:00
        model:
          id: id
          label: label
        favorite_count: 1
        id: id
        last_accessed_at: 2000-01-23T04:56:07.000+00:00
        slug: slug
        crossfilter_enabled: true
        show_filters_bar: true
        dashboard_filters:
        - explore: explore
          allow_multiple_values: true
          default_value: default_value
          title: title
          type: type
          required: true
          can:
            key: true
          field:
            key: field
          name: name
          model: model
          id: id
          row: 9
          listens_to_filters:
          - listens_to_filters
          - listens_to_filters
          ui_config:
            key: ui_config
          dimension: dimension
          dashboard_id: dashboard_id
        - explore: explore
          allow_multiple_values: true
          default_value: default_value
          title: title
          type: type
          required: true
          can:
            key: true
          field:
            key: field
          name: name
          model: model
          id: id
          row: 9
          listens_to_filters:
          - listens_to_filters
          - listens_to_filters
          ui_config:
            key: ui_config
          dimension: dimension
          dashboard_id: dashboard_id
        refresh_interval: refresh_interval
        text_tile_text_color: text_tile_text_color
        title_color: title_color
        deleted_at: 2000-01-23T04:56:07.000+00:00
        content_metadata_id: 6
        folder:
          is_embed: true
          child_count: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 4
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 7
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        deleted: true
        load_configuration: load_configuration
        appearance:
          page_side_margins: 6
          tile_title_alignment: tile_title_alignment
          key_color: key_color
          tile_space_between: 6
          page_background_color: page_background_color
          tile_shadow: true
          tile_background_color: tile_background_color
        background_color: background_color
        user_id: 5
        dashboard_elements:
        - lookml_link_id: lookml_link_id
          query_id: 1
          body_text: body_text
          refresh_interval_to_i: 6
          title: title
          type: type
          body_text_as_html: body_text_as_html
          note_display: note_display
          can:
            key: true
          subtitle_text: subtitle_text
          alert_count: 5
          result_maker:
            merge_result_id: merge_result_id
            total: true
            vis_config:
              key: vis_config
            query_id: 1
            sql_query_id: sql_query_id
            dynamic_fields: dynamic_fields
            query:
              query_timezone: query_timezone
              vis_config:
                key: vis_config
              filter_expression: filter_expression
              has_table_calculations: true
              row_total: row_total
              expanded_share_url: expanded_share_url
              client_id: client_id
              can:
                key: true
              view: view
              total: true
              visible_ui_sections: visible_ui_sections
              dynamic_fields: dynamic_fields
              limit: limit
              model: model
              id: 6
              sorts:
              - sorts
              - sorts
              slug: slug
              filter_config:
                key: filter_config
              subtotals:
              - subtotals
              - subtotals
              fill_fields:
              - fill_fields
              - fill_fields
              runtime: 1.4658129805029452
              filters:
                key: filters
              pivots:
              - pivots
              - pivots
              url: url
              share_url: share_url
              fields:
              - fields
              - fields
              column_limit: column_limit
            filterables:
            - view: view
              name: name
              model: model
              listen:
              - field: field
                dashboard_filter_name: dashboard_filter_name
              - field: field
                dashboard_filter_name: dashboard_filter_name
            - view: view
              name: name
              model: model
              listen:
              - field: field
                dashboard_filter_name: dashboard_filter_name
              - field: field
                dashboard_filter_name: dashboard_filter_name
            id: 7
            sorts:
            - sorts
            - sorts
          note_text_as_html: note_text_as_html
          title_hidden: true
          subtitle_text_as_html: subtitle_text_as_html
          id: id
          title_text_as_html: title_text_as_html
          look_id: look_id
          refresh_interval: refresh_interval
          query:
            query_timezone: query_timezone
            vis_config:
              key: vis_config
            filter_expression: filter_expression
            has_table_calculations: true
            row_total: row_total
            expanded_share_url: expanded_share_url
            client_id: client_id
            can:
              key: true
            view: view
            total: true
            visible_ui_sections: visible_ui_sections
            dynamic_fields: dynamic_fields
            limit: limit
            model: model
            id: 6
            sorts:
            - sorts
            - sorts
            slug: slug
            filter_config:
              key: filter_config
            subtotals:
            - subtotals
            - subtotals
            fill_fields:
            - fill_fields
            - fill_fields
            runtime: 1.4658129805029452
            filters:
              key: filters
            pivots:
            - pivots
            - pivots
            url: url
            share_url: share_url
            fields:
            - fields
            - fields
            column_limit: column_limit
          look:
            embed_url: embed_url
            query_id: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            deleter_id: 9
            description: description
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            short_url: short_url
            public_url: public_url
            can:
              key: true
            content_favorite_id: 7
            excel_file_url: excel_file_url
            public: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            last_viewed_at: 2000-01-23T04:56:07.000+00:00
            favorite_count: 3
            model:
              id: id
              label: label
            id: 2
            last_accessed_at: 2000-01-23T04:56:07.000+00:00
            public_slug: public_slug
            last_updater_id: 2
            query:
              query_timezone: query_timezone
              vis_config:
                key: vis_config
              filter_expression: filter_expression
              has_table_calculations: true
              row_total: row_total
              expanded_share_url: expanded_share_url
              client_id: client_id
              can:
                key: true
              view: view
              total: true
              visible_ui_sections: visible_ui_sections
              dynamic_fields: dynamic_fields
              limit: limit
              model: model
              id: 6
              sorts:
              - sorts
              - sorts
              slug: slug
              filter_config:
                key: filter_config
              subtotals:
              - subtotals
              - subtotals
              fill_fields:
              - fill_fields
              - fill_fields
              runtime: 1.4658129805029452
              filters:
                key: filters
              pivots:
              - pivots
              - pivots
              url: url
              share_url: share_url
              fields:
              - fields
              - fields
              column_limit: column_limit
            is_run_on_load: true
            deleted_at: 2000-01-23T04:56:07.000+00:00
            url: url
            content_metadata_id: 5
            deleted: true
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            user_id: 7
            image_embed_url: image_embed_url
            google_spreadsheet_formula: google_spreadsheet_formula
            folder_id: folder_id
            user:
              id: 1
            space_id: space_id
            view_count: 1
          merge_result_id: merge_result_id
          edit_uri: https://openapi-generator.tech
          title_text: title_text
          result_maker_id: 4
          note_state: note_state
          note_text: note_text
          dashboard_id: dashboard_id
        - lookml_link_id: lookml_link_id
          query_id: 1
          body_text: body_text
          refresh_interval_to_i: 6
          title: title
          type: type
          body_text_as_html: body_text_as_html
          note_display: note_display
          can:
            key: true
          subtitle_text: subtitle_text
          alert_count: 5
          result_maker:
            merge_result_id: merge_result_id
            total: true
            vis_config:
              key: vis_config
            query_id: 1
            sql_query_id: sql_query_id
            dynamic_fields: dynamic_fields
            query:
              query_timezone: query_timezone
              vis_config:
                key: vis_config
              filter_expression: filter_expression
              has_table_calculations: true
              row_total: row_total
              expanded_share_url: expanded_share_url
              client_id: client_id
              can:
                key: true
              view: view
              total: true
              visible_ui_sections: visible_ui_sections
              dynamic_fields: dynamic_fields
              limit: limit
              model: model
              id: 6
              sorts:
              - sorts
              - sorts
              slug: slug
              filter_config:
                key: filter_config
              subtotals:
              - subtotals
              - subtotals
              fill_fields:
              - fill_fields
              - fill_fields
              runtime: 1.4658129805029452
              filters:
                key: filters
              pivots:
              - pivots
              - pivots
              url: url
              share_url: share_url
              fields:
              - fields
              - fields
              column_limit: column_limit
            filterables:
            - view: view
              name: name
              model: model
              listen:
              - field: field
                dashboard_filter_name: dashboard_filter_name
              - field: field
                dashboard_filter_name: dashboard_filter_name
            - view: view
              name: name
              model: model
              listen:
              - field: field
                dashboard_filter_name: dashboard_filter_name
              - field: field
                dashboard_filter_name: dashboard_filter_name
            id: 7
            sorts:
            - sorts
            - sorts
          note_text_as_html: note_text_as_html
          title_hidden: true
          subtitle_text_as_html: subtitle_text_as_html
          id: id
          title_text_as_html: title_text_as_html
          look_id: look_id
          refresh_interval: refresh_interval
          query:
            query_timezone: query_timezone
            vis_config:
              key: vis_config
            filter_expression: filter_expression
            has_table_calculations: true
            row_total: row_total
            expanded_share_url: expanded_share_url
            client_id: client_id
            can:
              key: true
            view: view
            total: true
            visible_ui_sections: visible_ui_sections
            dynamic_fields: dynamic_fields
            limit: limit
            model: model
            id: 6
            sorts:
            - sorts
            - sorts
            slug: slug
            filter_config:
              key: filter_config
            subtotals:
            - subtotals
            - subtotals
            fill_fields:
            - fill_fields
            - fill_fields
            runtime: 1.4658129805029452
            filters:
              key: filters
            pivots:
            - pivots
            - pivots
            url: url
            share_url: share_url
            fields:
            - fields
            - fields
            column_limit: column_limit
          look:
            embed_url: embed_url
            query_id: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            deleter_id: 9
            description: description
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            short_url: short_url
            public_url: public_url
            can:
              key: true
            content_favorite_id: 7
            excel_file_url: excel_file_url
            public: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            last_viewed_at: 2000-01-23T04:56:07.000+00:00
            favorite_count: 3
            model:
              id: id
              label: label
            id: 2
            last_accessed_at: 2000-01-23T04:56:07.000+00:00
            public_slug: public_slug
            last_updater_id: 2
            query:
              query_timezone: query_timezone
              vis_config:
                key: vis_config
              filter_expression: filter_expression
              has_table_calculations: true
              row_total: row_total
              expanded_share_url: expanded_share_url
              client_id: client_id
              can:
                key: true
              view: view
              total: true
              visible_ui_sections: visible_ui_sections
              dynamic_fields: dynamic_fields
              limit: limit
              model: model
              id: 6
              sorts:
              - sorts
              - sorts
              slug: slug
              filter_config:
                key: filter_config
              subtotals:
              - subtotals
              - subtotals
              fill_fields:
              - fill_fields
              - fill_fields
              runtime: 1.4658129805029452
              filters:
                key: filters
              pivots:
              - pivots
              - pivots
              url: url
              share_url: share_url
              fields:
              - fields
              - fields
              column_limit: column_limit
            is_run_on_load: true
            deleted_at: 2000-01-23T04:56:07.000+00:00
            url: url
            content_metadata_id: 5
            deleted: true
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            user_id: 7
            image_embed_url: image_embed_url
            google_spreadsheet_formula: google_spreadsheet_formula
            folder_id: folder_id
            user:
              id: 1
            space_id: space_id
            view_count: 1
          merge_result_id: merge_result_id
          edit_uri: https://openapi-generator.tech
          title_text: title_text
          result_maker_id: 4
          note_state: note_state
          note_text: note_text
          dashboard_id: dashboard_id
        edit_uri: https://openapi-generator.tech
        show_title: true
        dashboard_layouts:
        - can:
            key: true
          deleted: true
          dashboard_title: dashboard_title
          width: 6
          active: true
          dashboard_layout_components:
          - can:
              key: true
            element_title: element_title
            deleted: true
            element_title_hidden: true
            column: 9
            width: 6
            id: id
            row: 8
            dashboard_element_id: dashboard_element_id
            vis_type: vis_type
            dashboard_layout_id: dashboard_layout_id
            height: 3
          - can:
              key: true
            element_title: element_title
            deleted: true
            element_title_hidden: true
            column: 9
            width: 6
            id: id
            row: 8
            dashboard_element_id: dashboard_element_id
            vis_type: vis_type
            dashboard_layout_id: dashboard_layout_id
            height: 3
          column_width: 9
          id: id
          type: type
          dashboard_id: dashboard_id
        - can:
            key: true
          deleted: true
          dashboard_title: dashboard_title
          width: 6
          active: true
          dashboard_layout_components:
          - can:
              key: true
            element_title: element_title
            deleted: true
            element_title_hidden: true
            column: 9
            width: 6
            id: id
            row: 8
            dashboard_element_id: dashboard_element_id
            vis_type: vis_type
            dashboard_layout_id: dashboard_layout_id
            height: 3
          - can:
              key: true
            element_title: element_title
            deleted: true
            element_title_hidden: true
            column: 9
            width: 6
            id: id
            row: 8
            dashboard_element_id: dashboard_element_id
            vis_type: vis_type
            dashboard_layout_id: dashboard_layout_id
            height: 3
          column_width: 9
          id: id
          type: type
          dashboard_id: dashboard_id
        folder_id: folder_id
        space_id: space_id
        view_count: 2
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_favorite_id:
          description: Content Favorite Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        description:
          description: Description
          type: string
          x-looker-nullable: true
        hidden:
          description: Is Hidden
          type: boolean
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        model:
          $ref: '#/components/schemas/LookModel'
        query_timezone:
          description: Timezone in which the Dashboard will run by default.
          type: string
          x-looker-nullable: true
        readonly:
          description: Is Read-only
          readOnly: true
          type: boolean
          x-looker-nullable: false
        refresh_interval:
          description: Refresh Interval, as a time duration phrase like "2 hours 30
            minutes". A number with no time units will be interpreted as whole seconds.
          type: string
          x-looker-nullable: true
        refresh_interval_to_i:
          description: Refresh Interval in milliseconds
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        folder:
          $ref: '#/components/schemas/FolderBase'
        title:
          description: Dashboard Title
          type: string
          x-looker-nullable: true
        user_id:
          description: Id of User
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/SpaceBase'
        background_color:
          description: Background color
          type: string
          x-looker-nullable: true
        created_at:
          description: Time that the Dashboard was created.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        crossfilter_enabled:
          description: Enables crossfiltering in dashboards - only available in dashboards-next
            (beta)
          type: boolean
          x-looker-nullable: false
        dashboard_elements:
          description: Elements
          items:
            $ref: '#/components/schemas/DashboardElement'
          readOnly: true
          type: array
          x-looker-nullable: true
        dashboard_filters:
          description: Filters
          items:
            $ref: '#/components/schemas/DashboardFilter'
          readOnly: true
          type: array
          x-looker-nullable: true
        dashboard_layouts:
          description: Layouts
          items:
            $ref: '#/components/schemas/DashboardLayout'
          readOnly: true
          type: array
          x-looker-nullable: true
        deleted:
          description: Whether or not a dashboard is 'soft' deleted.
          type: boolean
          x-looker-nullable: false
        deleted_at:
          description: Time that the Dashboard was 'soft' deleted.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleter_id:
          description: Id of User that 'soft' deleted the dashboard.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        edit_uri:
          description: Relative path of URI of LookML file to edit the dashboard (LookML
            dashboard only).
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        favorite_count:
          description: Number of times favorited
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        last_accessed_at:
          description: Time the dashboard was last accessed
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        last_viewed_at:
          description: Time last viewed in the Looker web UI
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        load_configuration:
          description: configuration option that governs how dashboard loading will
            happen.
          type: string
          x-looker-nullable: true
        lookml_link_id:
          description: Links this dashboard to a particular LookML dashboard such
            that calling a **sync** operation on that LookML dashboard will update
            this dashboard to match.
          type: string
          x-looker-nullable: true
        show_filters_bar:
          description: Show filters bar.  **Security Note:** This property only affects
            the *cosmetic* appearance of the dashboard, not a user's ability to access
            data. Hiding the filters bar does **NOT** prevent users from changing
            filters by other means. For information on how to set up secure data access
            control policies, see [Control User Access to Data](https://looker.com/docs/r/api/control-access)
          type: boolean
          x-looker-nullable: false
        show_title:
          description: Show title
          type: boolean
          x-looker-nullable: false
        slug:
          description: Content Metadata Slug
          type: string
          x-looker-nullable: true
        space_id:
          description: Id of Space
          type: string
          x-looker-nullable: true
        folder_id:
          description: Id of folder
          type: string
          x-looker-nullable: true
        text_tile_text_color:
          description: Color of text on text tiles
          type: string
          x-looker-nullable: true
        tile_background_color:
          description: Tile background color
          type: string
          x-looker-nullable: true
        tile_text_color:
          description: Tile text color
          type: string
          x-looker-nullable: true
        title_color:
          description: Title color
          type: string
          x-looker-nullable: true
        view_count:
          description: Number of times viewed in the Looker web UI
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        appearance:
          $ref: '#/components/schemas/DashboardAppearance'
        preferred_viewer:
          description: 'The preferred route for viewing this dashboard (ie: dashboards
            or dashboards-next)'
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DataActionFormField:
      example:
        default: default
        name: name
        oauth_url: oauth_url
        interactive: true
        options:
        - name: name
          label: label
        - name: name
          label: label
        description: description
        label: label
        type: type
        required: true
      properties:
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        label:
          description: Human-readable label
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description of field
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: Type of field.
          readOnly: true
          type: string
          x-looker-nullable: true
        default:
          description: Default value of the field.
          readOnly: true
          type: string
          x-looker-nullable: true
        oauth_url:
          description: The URL for an oauth link, if type is 'oauth_link'.
          readOnly: true
          type: string
          x-looker-nullable: true
        interactive:
          description: Whether or not a field supports interactive forms.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        required:
          description: Whether or not the field is required. This is a user-interface
            hint. A user interface displaying this form should not submit it without
            a value for this field. The action server must also perform this validation.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        options:
          description: If the form type is 'select', a list of options to be selected
            from.
          items:
            $ref: '#/components/schemas/DataActionFormSelectOption'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DataActionForm:
      example:
        state:
          data: data
          refresh_time: 0
        fields:
        - default: default
          name: name
          oauth_url: oauth_url
          interactive: true
          options:
          - name: name
            label: label
          - name: name
            label: label
          description: description
          label: label
          type: type
          required: true
        - default: default
          name: name
          oauth_url: oauth_url
          interactive: true
          options:
          - name: name
            label: label
          - name: name
            label: label
          description: description
          label: label
          type: type
          required: true
      properties:
        state:
          $ref: '#/components/schemas/DataActionUserState'
        fields:
          description: Array of form fields.
          items:
            $ref: '#/components/schemas/DataActionFormField'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DataActionFormSelectOption:
      example:
        name: name
        label: label
      properties:
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        label:
          description: Human-readable label
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DataActionRequest:
      example:
        action:
          key: action
        form_values:
          key: form_values
      properties:
        action:
          additionalProperties:
            type: string
          description: The JSON describing the data action. This JSON should be considered
            opaque and should be passed through unmodified from the query result it
            came from.
          type: object
          x-looker-nullable: true
        form_values:
          additionalProperties:
            type: string
          description: User input for any form values the data action might use.
          type: object
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DataActionResponse:
      example:
        webhook_id: webhook_id
        success: true
        refresh_query: true
        validation_errors:
          message: message
          documentation_url: https://openapi-generator.tech
          errors:
          - code: code
            field: field
            message: message
            documentation_url: https://openapi-generator.tech
          - code: code
            field: field
            message: message
            documentation_url: https://openapi-generator.tech
        message: message
      properties:
        webhook_id:
          description: ID of the webhook event that sent this data action. In some
            error conditions, this may be null.
          readOnly: true
          type: string
          x-looker-nullable: true
        success:
          description: Whether the data action was successful.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        refresh_query:
          description: When true, indicates that the client should refresh (rerun)
            the source query because the data may have been changed by the action.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        validation_errors:
          $ref: '#/components/schemas/ValidationError'
        message:
          description: Optional message returned by the data action server describing
            the state of the action that took place. This can be used to implement
            custom failure messages. If a failure is related to a particular form
            field, the server should send back a validation error instead. The Looker
            web UI does not currently display any message if the action indicates
            'success', but may do so in the future.
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DataActionUserState:
      example:
        data: data
        refresh_time: 0
      properties:
        data:
          description: User state data
          readOnly: true
          type: string
          x-looker-nullable: true
        refresh_time:
          description: Time in seconds until the state needs to be refreshed
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    Datagroup:
      example:
        can:
          key: true
        model_name: model_name
        stale_before: 6
        trigger_check_at: 1
        name: name
        triggered_at: 5
        created_at: 0
        trigger_value: trigger_value
        trigger_error: trigger_error
        id: id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: UNIX timestamp at which this entry was created.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        id:
          description: Unique ID of the datagroup
          readOnly: true
          type: string
          x-looker-nullable: false
        model_name:
          description: Name of the model containing the datagroup. Unique when combined
            with name.
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of the datagroup. Unique when combined with model_name.
          readOnly: true
          type: string
          x-looker-nullable: true
        stale_before:
          description: UNIX timestamp before which cache entries are considered stale.
            Cannot be in the future.
          format: int64
          type: integer
          x-looker-nullable: true
        trigger_check_at:
          description: UNIX timestamp at which this entry trigger was last checked.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        trigger_error:
          description: The message returned with the error of the last trigger check.
          readOnly: true
          type: string
          x-looker-nullable: true
        trigger_value:
          description: The value of the trigger when last checked.
          readOnly: true
          type: string
          x-looker-nullable: true
        triggered_at:
          description: UNIX timestamp at which this entry became triggered. Cannot
            be in the future.
          format: int64
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    DBConnectionBase:
      example:
        can:
          key: true
        dialect:
          persistent_table_distkey: persistent_table_distkey
          supports_cost_estimate: true
          connection_tests:
          - connection_tests
          - connection_tests
          persistent_table_indexes: persistent_table_indexes
          supports_inducer: true
          supports_persistent_derived_tables: true
          label: label
          supports_streaming: true
          automatically_run_sql_runner_snippets: true
          name: name
          has_ssl_support: true
          supports_multiple_databases: true
          persistent_table_sortkeys: persistent_table_sortkeys
        snippets:
        - can:
            key: true
          name: name
          label: label
          sql: sql
        - can:
            key: true
          name: name
          label: label
          sql: sql
        pdts_enabled: true
        name: name
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        name:
          description: Name of the connection. Also used as the unique identifier
          readOnly: true
          type: string
          x-looker-nullable: false
        dialect:
          $ref: '#/components/schemas/Dialect'
        snippets:
          description: SQL Runner snippets for this connection
          items:
            $ref: '#/components/schemas/Snippet'
          readOnly: true
          type: array
          x-looker-nullable: false
        pdts_enabled:
          description: True if PDTs are enabled on this connection
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    DBConnection:
      example:
        query_timezone: query_timezone
        schema: schema
        jdbc_additional_params: jdbc_additional_params
        dialect:
          persistent_table_distkey: persistent_table_distkey
          supports_cost_estimate: true
          connection_tests:
          - connection_tests
          - connection_tests
          persistent_table_indexes: persistent_table_indexes
          supports_inducer: true
          supports_persistent_derived_tables: true
          label: label
          supports_streaming: true
          automatically_run_sql_runner_snippets: true
          name: name
          has_ssl_support: true
          supports_multiple_databases: true
          persistent_table_sortkeys: persistent_table_sortkeys
        pdts_enabled: true
        certificate: certificate
        created_at: created_at
        after_connect_statements: after_connect_statements
        db_timezone: db_timezone
        ssl: true
        example: true
        can:
          key: true
        password: password
        database: database
        user_db_credentials: true
        last_reap_at: last_reap_at
        snippets:
        - can:
            key: true
          name: name
          label: label
          sql: sql
        - can:
            key: true
          name: name
          label: label
          sql: sql
        file_type: file_type
        user_attribute_fields:
        - user_attribute_fields
        - user_attribute_fields
        managed: true
        host: host
        uses_oauth: true
        last_regen_at: last_regen_at
        dialect_name: dialect_name
        max_billing_gigabytes: max_billing_gigabytes
        max_connections: 0
        pool_timeout: 6
        sql_runner_precache_tables: true
        verify_ssl: true
        port: port
        user_id: user_id
        name: name
        tmp_db_name: tmp_db_name
        maintenance_cron: maintenance_cron
        username: username
        pdt_context_override:
          schema: schema
          jdbc_additional_params: jdbc_additional_params
          password: password
          database: database
          port: port
          file_type: file_type
          context: context
          host: host
          certificate: certificate
          after_connect_statements: after_connect_statements
          username: username
          has_password: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        name:
          description: Name of the connection. Also used as the unique identifier
          type: string
          x-looker-nullable: false
        dialect:
          $ref: '#/components/schemas/Dialect'
        snippets:
          description: SQL Runner snippets for this connection
          items:
            $ref: '#/components/schemas/Snippet'
          readOnly: true
          type: array
          x-looker-nullable: false
        pdts_enabled:
          description: True if PDTs are enabled on this connection
          readOnly: true
          type: boolean
          x-looker-nullable: false
        host:
          description: Host name/address of server
          type: string
          x-looker-nullable: true
        port:
          description: Port number on server
          type: string
          x-looker-nullable: true
        username:
          description: Username for server authentication
          type: string
          x-looker-nullable: true
        password:
          description: (Write-Only) Password for server authentication
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        uses_oauth:
          description: Whether the connection uses OAuth for authentication.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        certificate:
          description: (Write-Only) Base64 encoded Certificate body for server authentication
            (when appropriate for dialect).
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        file_type:
          description: (Write-Only) Certificate keyfile type - .json or .p12
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        database:
          description: Database name
          type: string
          x-looker-nullable: true
        db_timezone:
          description: Time zone of database
          type: string
          x-looker-nullable: true
        query_timezone:
          description: Timezone to use in queries
          type: string
          x-looker-nullable: true
        schema:
          description: Scheme name
          type: string
          x-looker-nullable: true
        max_connections:
          description: Maximum number of concurrent connection to use
          format: int64
          type: integer
          x-looker-nullable: true
        max_billing_gigabytes:
          description: Maximum size of query in GBs (BigQuery only, can be a user_attribute
            name)
          type: string
          x-looker-nullable: true
        ssl:
          description: Use SSL/TLS when connecting to server
          type: boolean
          x-looker-nullable: false
        verify_ssl:
          description: Verify the SSL
          type: boolean
          x-looker-nullable: false
        tmp_db_name:
          description: Name of temporary database (if used)
          type: string
          x-looker-nullable: true
        jdbc_additional_params:
          description: Additional params to add to JDBC connection string
          type: string
          x-looker-nullable: true
        pool_timeout:
          description: Connection Pool Timeout, in seconds
          format: int64
          type: integer
          x-looker-nullable: true
        dialect_name:
          description: (Read/Write) SQL Dialect name
          type: string
          x-looker-nullable: true
        created_at:
          description: Creation date for this connection
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: Id of user who last modified this connection configuration
          readOnly: true
          type: string
          x-looker-nullable: true
        example:
          description: Is this an example connection?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        user_db_credentials:
          description: (Limited access feature) Are per user db credentials enabled.
            Enabling will remove previously set username and password
          type: boolean
          x-looker-nullable: true
        user_attribute_fields:
          description: Fields whose values map to user attribute names
          items:
            type: string
          type: array
          x-looker-nullable: true
        maintenance_cron:
          description: Cron string specifying when maintenance such as PDT trigger
            checks and drops should be performed
          type: string
          x-looker-nullable: true
        last_regen_at:
          description: Unix timestamp at start of last completed PDT trigger check
            process
          readOnly: true
          type: string
          x-looker-nullable: true
        last_reap_at:
          description: Unix timestamp at start of last completed PDT reap process
          readOnly: true
          type: string
          x-looker-nullable: true
        sql_runner_precache_tables:
          description: Precache tables in the SQL Runner
          type: boolean
          x-looker-nullable: false
        after_connect_statements:
          description: SQL statements (semicolon separated) to issue after connecting
            to the database. Requires `custom_after_connect_statements` license feature
          type: string
          x-looker-nullable: true
        pdt_context_override:
          $ref: '#/components/schemas/DBConnectionOverride'
        managed:
          description: Is this connection created and managed by Looker
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    DBConnectionOverride:
      example:
        schema: schema
        jdbc_additional_params: jdbc_additional_params
        password: password
        database: database
        port: port
        file_type: file_type
        context: context
        host: host
        certificate: certificate
        after_connect_statements: after_connect_statements
        username: username
        has_password: true
      properties:
        context:
          description: Context in which to override (`pdt` is the only allowed value)
          type: string
          x-looker-nullable: false
        host:
          description: Host name/address of server
          type: string
          x-looker-nullable: true
        port:
          description: Port number on server
          type: string
          x-looker-nullable: true
        username:
          description: Username for server authentication
          type: string
          x-looker-nullable: true
        password:
          description: (Write-Only) Password for server authentication
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        has_password:
          description: Whether or not the password is overridden in this context
          readOnly: true
          type: boolean
          x-looker-nullable: false
        certificate:
          description: (Write-Only) Base64 encoded Certificate body for server authentication
            (when appropriate for dialect).
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        file_type:
          description: (Write-Only) Certificate keyfile type - .json or .p12
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        database:
          description: Database name
          type: string
          x-looker-nullable: true
        schema:
          description: Scheme name
          type: string
          x-looker-nullable: true
        jdbc_additional_params:
          description: Additional params to add to JDBC connection string
          type: string
          x-looker-nullable: true
        after_connect_statements:
          description: SQL statements (semicolon separated) to issue after connecting
            to the database. Requires `custom_after_connect_statements` license feature
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    DBConnectionTestResult:
      example:
        can:
          key: true
        name: name
        message: message
        connection_string: connection_string
        status: status
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        connection_string:
          description: JDBC connection string. (only populated in the 'connect' test)
          readOnly: true
          type: string
          x-looker-nullable: true
        message:
          description: Result message of test
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of test
          readOnly: true
          type: string
          x-looker-nullable: true
        status:
          description: Result code of test
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    DelegateOauthTest:
      example:
        installation_target_id: installation_target_id
        success: true
        name: name
        installation_id: 0
      properties:
        name:
          description: Delegate Oauth Connection Name
          readOnly: true
          type: string
          x-looker-nullable: false
        installation_target_id:
          description: The ID of the installation target. For Slack, this would be
            workspace id.
          readOnly: true
          type: string
          x-looker-nullable: false
        installation_id:
          description: Installation ID
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        success:
          description: Whether or not the test was successful
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    DialectInfo:
      example:
        can:
          key: true
        installed: true
        default_port: default_port
        name: name
        label_for_database_equivalent: label_for_database_equivalent
        supported_options:
          schema: true
          can:
            key: true
          username_required: true
          auth: true
          timezone: true
          oauth_credentials: true
          host: true
          project_name: true
          ssl: true
          additional_params: true
          tmp_table: true
        label: label
        default_max_connections: default_max_connections
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        default_max_connections:
          description: Default number max connections
          readOnly: true
          type: string
          x-looker-nullable: true
        default_port:
          description: Default port number
          readOnly: true
          type: string
          x-looker-nullable: true
        installed:
          description: Is the supporting driver installed
          readOnly: true
          type: boolean
          x-looker-nullable: false
        label:
          description: The human-readable label of the connection
          readOnly: true
          type: string
          x-looker-nullable: true
        label_for_database_equivalent:
          description: What the dialect calls the equivalent of a normal SQL table
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: The name of the dialect
          readOnly: true
          type: string
          x-looker-nullable: true
        supported_options:
          $ref: '#/components/schemas/DialectInfoOptions'
      type: object
      x-looker-status: stable
    DialectInfoOptions:
      example:
        schema: true
        can:
          key: true
        username_required: true
        auth: true
        timezone: true
        oauth_credentials: true
        host: true
        project_name: true
        ssl: true
        additional_params: true
        tmp_table: true
      properties:
        additional_params:
          description: Has additional params support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        auth:
          description: Has auth support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        host:
          description: Has host support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        oauth_credentials:
          description: Has support for a service account
          readOnly: true
          type: boolean
          x-looker-nullable: false
        project_name:
          description: Has project name support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        schema:
          description: Has schema support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        ssl:
          description: Has SSL support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        timezone:
          description: Has timezone support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        tmp_table:
          description: Has tmp table support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        username_required:
          description: Username is required
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    Dialect:
      example:
        persistent_table_distkey: persistent_table_distkey
        supports_cost_estimate: true
        connection_tests:
        - connection_tests
        - connection_tests
        persistent_table_indexes: persistent_table_indexes
        supports_inducer: true
        supports_persistent_derived_tables: true
        label: label
        supports_streaming: true
        automatically_run_sql_runner_snippets: true
        name: name
        has_ssl_support: true
        supports_multiple_databases: true
        persistent_table_sortkeys: persistent_table_sortkeys
      properties:
        name:
          description: The name of the dialect
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: The human-readable label of the connection
          readOnly: true
          type: string
          x-looker-nullable: false
        supports_cost_estimate:
          description: Whether the dialect supports query cost estimates
          readOnly: true
          type: boolean
          x-looker-nullable: false
        persistent_table_indexes:
          description: PDT index columns
          readOnly: true
          type: string
          x-looker-nullable: false
        persistent_table_sortkeys:
          description: PDT sortkey columns
          readOnly: true
          type: string
          x-looker-nullable: false
        persistent_table_distkey:
          description: PDT distkey column
          readOnly: true
          type: string
          x-looker-nullable: false
        supports_streaming:
          description: Suports streaming results
          readOnly: true
          type: boolean
          x-looker-nullable: false
        automatically_run_sql_runner_snippets:
          description: Should SQL Runner snippets automatically be run
          readOnly: true
          type: boolean
          x-looker-nullable: false
        connection_tests:
          description: Array of names of the tests that can be run on a connection
            using this dialect
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
        supports_inducer:
          description: Is supported with the inducer (i.e. generate from sql)
          readOnly: true
          type: boolean
          x-looker-nullable: false
        supports_multiple_databases:
          description: Can multiple databases be accessed from a connection using
            this dialect
          readOnly: true
          type: boolean
          x-looker-nullable: false
        supports_persistent_derived_tables:
          description: Whether the dialect supports allowing Looker to build persistent
            derived tables
          readOnly: true
          type: boolean
          x-looker-nullable: false
        has_ssl_support:
          description: Does the database have client SSL support settable through
            the JDBC string explicitly?
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    DigestEmailSend:
      example:
        configuration_delivered: true
      properties:
        configuration_delivered:
          description: True if content was successfully generated and delivered
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    DigestEmails:
      example:
        is_enabled: true
      properties:
        is_enabled:
          description: Whether or not digest emails are enabled
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    EmbedSsoParams:
      example:
        force_logout_login: true
        models:
        - models
        - models
        secret_id: 5
        target_url: https://openapi-generator.tech
        session_length: 0
        last_name: last_name
        user_attributes:
          key: user_attributes
        external_user_id: external_user_id
        user_timezone: user_timezone
        permissions:
        - permissions
        - permissions
        group_ids:
        - 6
        - 6
        external_group_id: 1
        first_name: first_name
      properties:
        target_url:
          description: 'The complete URL of the Looker UI page to display in the embed
            context. For example, to display the dashboard with id 34, `target_url`
            would look like: `https://mycompany.looker.com:9999/dashboards/34`. `target_uri`
            MUST contain a scheme (HTTPS), domain name, and URL path. Port must be
            included if it is required to reach the Looker server from browser clients.
            If the Looker instance is behind a load balancer or other proxy, `target_uri`
            must be the public-facing domain name and port required to reach the Looker
            instance, not the actual internal network machine name of the Looker instance.'
          format: uri
          type: string
          x-looker-nullable: false
        session_length:
          description: Number of seconds the SSO embed session will be valid after
            the embed session is started. Defaults to 300 seconds. Maximum session
            length accepted is 2592000 seconds (30 days).
          format: int64
          type: integer
          x-looker-nullable: true
        force_logout_login:
          description: When true, the embed session will purge any residual Looker
            login state (such as in browser cookies) before creating a new login state
            with the given embed user info. Defaults to true.
          type: boolean
          x-looker-nullable: false
        external_user_id:
          description: A value from an external system that uniquely identifies the
            embed user. Since the user_ids of Looker embed users may change with every
            embed session, external_user_id provides a way to assign a known, stable
            user identifier across multiple embed sessions.
          type: string
          x-looker-nullable: true
        first_name:
          description: First name of the embed user. Defaults to 'Embed' if not specified
          type: string
          x-looker-nullable: true
        last_name:
          description: Last name of the embed user. Defaults to 'User' if not specified
          type: string
          x-looker-nullable: true
        user_timezone:
          description: Sets the user timezone for the embed user session, if the User
            Specific Timezones setting is enabled in the Looker admin settings. A
            value of `null` forces the embed user to use the Looker Application Default
            Timezone. You MUST omit this property from the request if the User Specific
            Timezones setting is disabled. Timezone values are validated against the
            IANA Timezone standard and can be seen in the Application Time Zone dropdown
            list on the Looker General Settings admin page.
          type: string
          x-looker-nullable: true
        permissions:
          description: List of Looker permission names to grant to the embed user.
            Requested permissions will be filtered to permissions allowed for embed
            sessions.
          items:
            type: string
          type: array
          x-looker-nullable: true
        models:
          description: List of model names that the embed user may access
          items:
            type: string
          type: array
          x-looker-nullable: true
        group_ids:
          description: List of Looker group ids in which to enroll the embed user
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        external_group_id:
          description: A unique value identifying an embed-exclusive group. Multiple
            embed users using the same `external_group_id` value will be able to share
            Looker content with each other. Content and embed users associated with
            the `external_group_id` will not be accessible to normal Looker users
            or embed users not associated with this `external_group_id`.
          format: int64
          type: integer
          x-looker-nullable: true
        user_attributes:
          additionalProperties:
            format: any
            type: string
          description: A dictionary of name-value pairs associating a Looker user
            attribute name with a value.
          type: object
          x-looker-nullable: true
        secret_id:
          description: Id of the embed secret to use to sign this SSO url. If specified,
            the value must be an id of a valid (active) secret defined in the Looker
            instance. If not specified, the URL will be signed with the newest active
            embed secret defined in the Looker instance.
          format: int64
          type: integer
          x-looker-nullable: true
      required:
      - target_url
      type: object
      x-looker-status: beta
    EmbedUrlResponse:
      example:
        url: url
      properties:
        url:
          description: The embed URL. Any modification to this string will make the
            URL unusable.
          readOnly: true
          type: string
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    FolderBase:
      example:
        is_embed: true
        child_count: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        external_id: external_id
        is_users_root: true
        is_personal: true
        can:
          key: true
        content_metadata_id: 4
        is_embed_users_root: true
        parent_id: parent_id
        is_shared_root: true
        name: name
        creator_id: 7
        is_embed_shared_root: true
        is_personal_descendant: true
        id: id
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time the folder was created
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        creator_id:
          description: User Id of Creator
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        child_count:
          description: Children Count
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        external_id:
          description: Embedder's Id if this folder was autogenerated as an embedding
            shared folder via 'external_group_id' in an SSO embed login
          readOnly: true
          type: string
          x-looker-nullable: true
        is_embed:
          description: Folder is an embed folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_shared_root:
          description: Folder is the root embed shared folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_users_root:
          description: Folder is the root embed users folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal:
          description: Folder is a user's personal folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal_descendant:
          description: Folder is descendant of a user's personal folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_shared_root:
          description: Folder is the root shared folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_users_root:
          description: Folder is the root user folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      required:
      - name
      type: object
      x-looker-status: beta
    CreateFolder:
      example:
        parent_id: parent_id
        name: name
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: false
      required:
      - name
      - parent_id
      type: object
      x-looker-status: beta
    UpdateFolder:
      example:
        parent_id: parent_id
        name: name
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Folder:
      example:
        is_embed: true
        child_count: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        external_id: external_id
        is_users_root: true
        dashboards:
        - query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        - query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        is_personal: true
        can:
          key: true
        content_metadata_id: 0
        looks:
        - embed_url: embed_url
          query_id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deleter_id: 7
          description: description
          title: title
          dashboards:
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          short_url: short_url
          public_url: public_url
          can:
            key: true
          content_favorite_id: 2
          excel_file_url: excel_file_url
          public: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          last_viewed_at: 2000-01-23T04:56:07.000+00:00
          favorite_count: 9
          model:
            id: id
            label: label
          id: 5
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          public_slug: public_slug
          last_updater_id: 3
          is_run_on_load: true
          deleted_at: 2000-01-23T04:56:07.000+00:00
          content_metadata_id: 5
          deleted: true
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          user_id: 4
          image_embed_url: image_embed_url
          google_spreadsheet_formula: google_spreadsheet_formula
          folder_id: folder_id
          user:
            id: 1
          space_id: space_id
          view_count: 7
        - embed_url: embed_url
          query_id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deleter_id: 7
          description: description
          title: title
          dashboards:
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          - query_timezone: query_timezone
            refresh_interval: refresh_interval
            hidden: true
            description: description
            refresh_interval_to_i: 2
            title: title
            space:
              is_embed: true
              child_count: 7
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 1
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 6
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            can:
              key: true
            content_favorite_id: 9
            content_metadata_id: 3
            folder:
              is_embed: true
              child_count: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              external_id: external_id
              is_users_root: true
              is_personal: true
              can:
                key: true
              content_metadata_id: 4
              is_embed_users_root: true
              parent_id: parent_id
              is_shared_root: true
              name: name
              creator_id: 7
              is_embed_shared_root: true
              is_personal_descendant: true
              id: id
            readonly: true
            user_id: 1
            model:
              id: id
              label: label
            id: id
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          short_url: short_url
          public_url: public_url
          can:
            key: true
          content_favorite_id: 2
          excel_file_url: excel_file_url
          public: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          last_viewed_at: 2000-01-23T04:56:07.000+00:00
          favorite_count: 9
          model:
            id: id
            label: label
          id: 5
          last_accessed_at: 2000-01-23T04:56:07.000+00:00
          public_slug: public_slug
          last_updater_id: 3
          is_run_on_load: true
          deleted_at: 2000-01-23T04:56:07.000+00:00
          content_metadata_id: 5
          deleted: true
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          user_id: 4
          image_embed_url: image_embed_url
          google_spreadsheet_formula: google_spreadsheet_formula
          folder_id: folder_id
          user:
            id: 1
          space_id: space_id
          view_count: 7
        is_embed_users_root: true
        parent_id: parent_id
        is_shared_root: true
        name: name
        creator_id: 6
        is_embed_shared_root: true
        is_personal_descendant: true
        id: id
      properties:
        name:
          description: Unique Name
          type: string
          x-looker-nullable: false
        parent_id:
          description: Id of Parent. If the parent id is null, this is a root-level
            entry
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time the space was created
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        creator_id:
          description: User Id of Creator
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        child_count:
          description: Children Count
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        external_id:
          description: Embedder's Id if this folder was autogenerated as an embedding
            shared folder via 'external_group_id' in an SSO embed login
          readOnly: true
          type: string
          x-looker-nullable: true
        is_embed:
          description: Folder is an embed folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_shared_root:
          description: Folder is the root embed shared folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_embed_users_root:
          description: Folder is the root embed users folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal:
          description: Folder is a user's personal folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_personal_descendant:
          description: Folder is descendant of a user's personal folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_shared_root:
          description: Folder is the root shared folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_users_root:
          description: Folder is the root user folder
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        dashboards:
          description: Dashboards
          items:
            $ref: '#/components/schemas/DashboardBase'
          readOnly: true
          type: array
          x-looker-nullable: true
        looks:
          description: Looks
          items:
            $ref: '#/components/schemas/LookWithDashboards'
          readOnly: true
          type: array
          x-looker-nullable: true
      required:
      - name
      type: object
      x-looker-status: beta
    GitBranch:
      example:
        owner_name: owner_name
        commit_at: 1
        is_remote: true
        is_production: true
        personal: true
        remote: remote
        error: error
        message: message
        remote_ref: remote_ref
        can:
          key: true
        ref: ref
        ahead_count: 0
        readonly: true
        remote_name: remote_name
        name: name
        is_local: true
        behind_count: 6
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        name:
          description: The short name on the local. Updating `name` results in `git
            checkout <new_name>`
          type: string
          x-looker-nullable: true
        remote:
          description: The name of the remote
          readOnly: true
          type: string
          x-looker-nullable: true
        remote_name:
          description: The short name on the remote
          readOnly: true
          type: string
          x-looker-nullable: true
        error:
          description: Name of error
          readOnly: true
          type: string
          x-looker-nullable: true
        message:
          description: Message describing an error if present
          readOnly: true
          type: string
          x-looker-nullable: true
        owner_name:
          description: Name of the owner of a personal branch
          readOnly: true
          type: string
          x-looker-nullable: true
        readonly:
          description: Whether or not this branch is readonly
          readOnly: true
          type: boolean
          x-looker-nullable: false
        personal:
          description: Whether or not this branch is a personal branch - readonly
            for all developers except the owner
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_local:
          description: Whether or not a local ref exists for the branch
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_remote:
          description: Whether or not a remote ref exists for the branch
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_production:
          description: Whether or not this is the production branch
          readOnly: true
          type: boolean
          x-looker-nullable: false
        ahead_count:
          description: Number of commits the local branch is ahead of the remote
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        behind_count:
          description: Number of commits the local branch is behind the remote
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        commit_at:
          description: UNIX timestamp at which this branch was last committed.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        ref:
          description: The resolved ref of this branch. Updating `ref` results in
            `git reset --hard <new_ref>``.
          type: string
          x-looker-nullable: true
        remote_ref:
          description: The resolved ref of this branch remote.
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    GitConnectionTest:
      example:
        can:
          key: true
        description: description
        id: id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        description:
          description: Human readable string describing the test
          readOnly: true
          type: string
          x-looker-nullable: true
        id:
          description: A short string, uniquely naming this test
          readOnly: true
          type: string
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    GitConnectionTestResult:
      example:
        can:
          key: true
        id: id
        message: message
        status: status
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: A short string, uniquely naming this test
          readOnly: true
          type: string
          x-looker-nullable: false
        message:
          description: Additional data from the test
          readOnly: true
          type: string
          x-looker-nullable: true
        status:
          description: Either 'pass' or 'fail'
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    GitStatus:
      example:
        can:
          key: true
        revertable: true
        action: action
        text: text
        conflict: true
      properties:
        action:
          description: 'Git action: add, delete, etc'
          readOnly: true
          type: string
          x-looker-nullable: true
        conflict:
          description: When true, changes to the local file conflict with the remote
            repository
          readOnly: true
          type: boolean
          x-looker-nullable: false
        revertable:
          description: When true, the file can be reverted to an earlier state
          readOnly: true
          type: boolean
          x-looker-nullable: false
        text:
          description: Git description of the action
          readOnly: true
          type: string
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    GroupIdForGroupInclusion:
      example:
        group_id: 0
      properties:
        group_id:
          description: Id of group
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    Group:
      example:
        can:
          key: true
        can_add_to_content_metadata: true
        user_count: 6
        include_by_default: true
        externally_managed: true
        name: name
        external_group_id: external_group_id
        contains_current_user: true
        id: 0
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        can_add_to_content_metadata:
          description: Group can be used in content access controls
          type: boolean
          x-looker-nullable: false
        contains_current_user:
          description: Currently logged in user is group member
          readOnly: true
          type: boolean
          x-looker-nullable: false
        external_group_id:
          description: External Id group if embed group
          readOnly: true
          type: string
          x-looker-nullable: true
        externally_managed:
          description: Group membership controlled outside of Looker
          readOnly: true
          type: boolean
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        include_by_default:
          description: New users are added to this group by default
          readOnly: true
          type: boolean
          x-looker-nullable: false
        name:
          description: Name of group
          type: string
          x-looker-nullable: true
        user_count:
          description: Number of users included in this group
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    GroupIdForGroupUserInclusion:
      example:
        user_id: 0
      properties:
        user_id:
          description: Id of user
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ImportedProject:
      example:
        can:
          key: true
        ref: ref
        name: name
        is_remote: true
        url: url
      properties:
        name:
          description: Dependency name
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Url for a remote dependency
          readOnly: true
          type: string
          x-looker-nullable: true
        ref:
          description: Ref for a remote dependency
          readOnly: true
          type: string
          x-looker-nullable: true
        is_remote:
          description: Flag signifying if a dependency is remote or local
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    IntegrationHub:
      example:
        can:
          key: true
        has_authorization_token: true
        authorization_token: authorization_token
        legal_agreement_text: legal_agreement_text
        official: true
        id: 0
        label: label
        legal_agreement_signed: true
        url: url
        fetch_error_message: fetch_error_message
        legal_agreement_required: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: ID of the hub.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        url:
          description: URL of the hub.
          type: string
          x-looker-nullable: false
        label:
          description: Label of the hub.
          readOnly: true
          type: string
          x-looker-nullable: false
        official:
          description: Whether this hub is a first-party integration hub operated
            by Looker.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        fetch_error_message:
          description: An error message, present if the integration hub metadata could
            not be fetched. If this is present, the integration hub is unusable.
          readOnly: true
          type: string
          x-looker-nullable: true
        authorization_token:
          description: (Write-Only) An authorization key that will be sent to the
            integration hub on every request.
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        has_authorization_token:
          description: Whether the authorization_token is set for the hub.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        legal_agreement_signed:
          description: Whether the legal agreement message has been signed by the
            user. This only matters if legal_agreement_required is true.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        legal_agreement_required:
          description: Whether the legal terms for the integration hub are required
            before use.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        legal_agreement_text:
          description: The legal agreement text for this integration hub.
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    Integration:
      example:
        icon_url: icon_url
        supported_download_settings:
        - supported_download_settings
        - supported_download_settings
        delegate_oauth: true
        supported_formats:
        - supported_formats
        - supported_formats
        integration_hub_id: 0
        supported_action_types:
        - supported_action_types
        - supported_action_types
        description: description
        supported_visualization_formattings:
        - supported_visualization_formattings
        - supported_visualization_formattings
        label: label
        params:
        - user_attribute_name: user_attribute_name
          name: name
          has_value: true
          description: description
          delegate_oauth_url: delegate_oauth_url
          label: label
          sensitive: true
          value: value
          required: true
          per_user: true
        - user_attribute_name: user_attribute_name
          name: name
          has_value: true
          description: description
          delegate_oauth_url: delegate_oauth_url
          label: label
          sensitive: true
          value: value
          required: true
          per_user: true
        enabled: true
        can:
          key: true
        required_fields:
        - any_tag:
          - any_tag
          - any_tag
          all_tags:
          - all_tags
          - all_tags
          tag: tag
        - any_tag:
          - any_tag
          - any_tag
          all_tags:
          - all_tags
          - all_tags
          tag: tag
        installed_delegate_oauth_targets:
        - 6
        - 6
        id: id
        uses_oauth: true
        supported_formattings:
        - supported_formattings
        - supported_formattings
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: ID of the integration.
          readOnly: true
          type: string
          x-looker-nullable: false
        integration_hub_id:
          description: ID of the integration hub.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        label:
          description: Label for the integration.
          readOnly: true
          type: string
          x-looker-nullable: false
        description:
          description: Description of the integration.
          readOnly: true
          type: string
          x-looker-nullable: true
        enabled:
          description: Whether the integration is available to users.
          type: boolean
          x-looker-nullable: false
        params:
          description: Array of params for the integration.
          items:
            $ref: '#/components/schemas/IntegrationParam'
          type: array
          x-looker-nullable: false
        supported_formats:
          description: 'A list of data formats the integration supports. If unspecified,
            the default is all data formats. Valid values are: "txt", "csv", "inline_json",
            "json", "json_label", "json_detail", "json_detail_lite_stream", "xlsx",
            "html", "wysiwyg_pdf", "assembled_pdf", "wysiwyg_png", "csv_zip".'
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
          x-looker-values:
          - txt
          - csv
          - inline_json
          - json
          - json_label
          - json_detail
          - json_detail_lite_stream
          - xlsx
          - html
          - wysiwyg_pdf
          - assembled_pdf
          - wysiwyg_png
          - csv_zip
        supported_action_types:
          description: 'A list of action types the integration supports. Valid values
            are: "cell", "query", "dashboard".'
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
          x-looker-values:
          - cell
          - query
          - dashboard
        supported_formattings:
          description: 'A list of formatting options the integration supports. If
            unspecified, defaults to all formats. Valid values are: "formatted", "unformatted".'
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
          x-looker-values:
          - formatted
          - unformatted
        supported_visualization_formattings:
          description: 'A list of visualization formatting options the integration
            supports. If unspecified, defaults to all formats. Valid values are: "apply",
            "noapply".'
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
          x-looker-values:
          - apply
          - noapply
        supported_download_settings:
          description: 'A list of all the download mechanisms the integration supports.
            The order of values is not significant: Looker will select the most appropriate
            supported download mechanism for a given query. The integration must ensure
            it can handle any of the mechanisms it claims to support. If unspecified,
            this defaults to all download setting values. Valid values are: "push",
            "url".'
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
          x-looker-values:
          - push
          - url
        icon_url:
          description: URL to an icon for the integration.
          readOnly: true
          type: string
          x-looker-nullable: true
        uses_oauth:
          description: Whether the integration uses oauth.
          readOnly: true
          type: boolean
          x-looker-nullable: true
        required_fields:
          description: A list of descriptions of required fields that this integration
            is compatible with. If there are multiple entries in this list, the integration
            requires more than one field. If unspecified, no fields will be required.
          items:
            $ref: '#/components/schemas/IntegrationRequiredField'
          readOnly: true
          type: array
          x-looker-nullable: false
        delegate_oauth:
          description: Whether the integration uses delegate oauth, which allows federation
            between an integration installation scope specific entity (like org, group,
            and team, etc.) and Looker.
          readOnly: true
          type: boolean
          x-looker-nullable: true
        installed_delegate_oauth_targets:
          description: Whether the integration is available to users.
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    IntegrationParam:
      example:
        user_attribute_name: user_attribute_name
        name: name
        has_value: true
        description: description
        delegate_oauth_url: delegate_oauth_url
        label: label
        sensitive: true
        value: value
        required: true
        per_user: true
      properties:
        name:
          description: Name of the parameter.
          type: string
          x-looker-nullable: true
        label:
          description: Label of the parameter.
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Short description of the parameter.
          readOnly: true
          type: string
          x-looker-nullable: true
        required:
          description: Whether the parameter is required to be set to use the destination.
            If unspecified, this defaults to false.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        has_value:
          description: Whether the parameter has a value set.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        value:
          description: The current value of the parameter. Always null if the value
            is sensitive. When writing, null values will be ignored. Set the value
            to an empty string to clear it.
          type: string
          x-looker-nullable: true
        user_attribute_name:
          description: When present, the param's value comes from this user attribute
            instead of the 'value' parameter. Set to null to use the 'value'.
          type: string
          x-looker-nullable: true
        sensitive:
          description: Whether the parameter contains sensitive data like API credentials.
            If unspecified, this defaults to true.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        per_user:
          description: When true, this parameter must be assigned to a user attribute
            in the admin panel (instead of a constant value), and that value may be
            updated by the user as part of the integration flow.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        delegate_oauth_url:
          description: When present, the param represents the oauth url the user will
            be taken to.
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    IntegrationRequiredField:
      example:
        any_tag:
        - any_tag
        - any_tag
        all_tags:
        - all_tags
        - all_tags
        tag: tag
      properties:
        tag:
          description: Matches a field that has this tag.
          readOnly: true
          type: string
          x-looker-nullable: true
        any_tag:
          description: If present, supercedes 'tag' and matches a field that has any
            of the provided tags.
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        all_tags:
          description: If present, supercedes 'tag' and matches a field that has all
            of the provided tags.
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    IntegrationTestResult:
      example:
        delegate_oauth_result:
        - installation_target_id: installation_target_id
          success: true
          name: name
          installation_id: 0
        - installation_target_id: installation_target_id
          success: true
          name: name
          installation_id: 0
        success: true
        message: message
      properties:
        success:
          description: Whether or not the test was successful
          readOnly: true
          type: boolean
          x-looker-nullable: false
        message:
          description: A message representing the results of the test.
          readOnly: true
          type: string
          x-looker-nullable: true
        delegate_oauth_result:
          description: An array of connection test result for delegate oauth actions.
          items:
            $ref: '#/components/schemas/DelegateOauthTest'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    InternalHelpResourcesContent:
      example:
        can:
          key: true
        organization_name: organization_name
        markdown_content: markdown_content
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        organization_name:
          description: Text to display in the help menu item which will display the
            internal help resources
          type: string
          x-looker-nullable: true
        markdown_content:
          description: Content to be displayed in the internal help resources page/modal
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    InternalHelpResources:
      example:
        can:
          key: true
        enabled: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        enabled:
          description: If true and internal help resources content is not blank then
            the link for internal help resources will be shown in the help menu and
            the content displayed within Looker
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    LDAPConfig:
      example:
        user_attribute_map_ldap_id: user_attribute_map_ldap_id
        test_ldap_password: test_ldap_password
        alternate_email_login_allowed: true
        default_new_user_group_ids:
        - 0
        - 0
        user_attributes:
        - name: name
          user_attributes:
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          required: true
          url: https://openapi-generator.tech
        - name: name
          user_attributes:
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          required: true
          url: https://openapi-generator.tech
        has_auth_password: true
        user_id_attribute_names: user_id_attribute_names
        enabled: true
        groups_with_role_ids:
        - looker_group_id: 4
          looker_group_name: looker_group_name
          name: name
          id: 2
          role_ids:
          - 7
          - 7
          url: https://openapi-generator.tech
        - looker_group_id: 4
          looker_group_name: looker_group_name
          name: name
          id: 2
          role_ids:
          - 7
          - 7
          url: https://openapi-generator.tech
        can:
          key: true
        groups_finder_type: groups_finder_type
        default_new_user_groups:
        - can:
            key: true
          can_add_to_content_metadata: true
          user_count: 6
          include_by_default: true
          externally_managed: true
          name: name
          external_group_id: external_group_id
          contains_current_user: true
          id: 0
        - can:
            key: true
          can_add_to_content_metadata: true
          user_count: 6
          include_by_default: true
          externally_managed: true
          name: name
          external_group_id: external_group_id
          contains_current_user: true
          id: 0
        auth_username: auth_username
        set_roles_from_groups: true
        user_bind_base_dn: user_bind_base_dn
        allow_roles_from_normal_groups: true
        modified_at: modified_at
        user_attribute_map_last_name: user_attribute_map_last_name
        connection_tls_no_verify: true
        user_attribute_map_first_name: user_attribute_map_first_name
        connection_port: connection_port
        connection_tls: true
        groups_member_attribute: groups_member_attribute
        allow_direct_roles: true
        default_new_user_roles:
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        auth_password: auth_password
        groups:
        - looker_group_id: 3
          looker_group_name: looker_group_name
          roles:
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          name: name
          id: 9
          url: https://openapi-generator.tech
        - looker_group_id: 3
          looker_group_name: looker_group_name
          roles:
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          name: name
          id: 9
          url: https://openapi-generator.tech
        user_attributes_with_ids:
        - user_attribute_ids:
          - 1
          - 1
          name: name
          required: true
          url: https://openapi-generator.tech
        - user_attribute_ids:
          - 1
          - 1
          name: name
          required: true
          url: https://openapi-generator.tech
        default_new_user_role_ids:
        - 6
        - 6
        url: https://openapi-generator.tech
        auth_requires_role: true
        groups_user_attribute: groups_user_attribute
        connection_host: connection_host
        groups_base_dn: groups_base_dn
        user_objectclass: user_objectclass
        groups_objectclasses: groups_objectclasses
        user_attribute_map_email: user_attribute_map_email
        merge_new_users_by_email: true
        force_no_page: true
        test_ldap_user: test_ldap_user
        modified_by: modified_by
        user_custom_filter: user_custom_filter
        allow_normal_group_membership: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        alternate_email_login_allowed:
          description: Allow alternate email-based login via '/login/email' for admins
            and for specified users with the 'login_special_email' permission. This
            option is useful as a fallback during ldap setup, if ldap config problems
            occur later, or if you need to support some users who are not in your
            ldap directory. Looker email/password logins are always disabled for regular
            users when ldap is enabled.
          type: boolean
          x-looker-nullable: false
        auth_password:
          description: (Write-Only)  Password for the LDAP account used to access
            the LDAP server
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        auth_requires_role:
          description: Users will not be allowed to login at all unless a role for
            them is found in LDAP if set to true
          type: boolean
          x-looker-nullable: false
        auth_username:
          description: Distinguished name of LDAP account used to access the LDAP
            server
          type: string
          x-looker-nullable: true
        connection_host:
          description: LDAP server hostname
          type: string
          x-looker-nullable: true
        connection_port:
          description: LDAP host port
          type: string
          x-looker-nullable: true
        connection_tls:
          description: Use Transport Layer Security
          type: boolean
          x-looker-nullable: false
        connection_tls_no_verify:
          description: Do not verify peer when using TLS
          type: boolean
          x-looker-nullable: false
        default_new_user_group_ids:
          description: (Write-Only)  Array of ids of groups that will be applied to
            new users the first time they login via LDAP
          items:
            format: int64
            type: integer
          type: array
          x-looker-write-only: true
          x-looker-nullable: true
        default_new_user_groups:
          description: (Read-only) Groups that will be applied to new users the first
            time they login via LDAP
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
          type: array
          x-looker-nullable: true
        default_new_user_role_ids:
          description: (Write-Only)  Array of ids of roles that will be applied to
            new users the first time they login via LDAP
          items:
            format: int64
            type: integer
          type: array
          x-looker-write-only: true
          x-looker-nullable: true
        default_new_user_roles:
          description: (Read-only) Roles that will be applied to new users the first
            time they login via LDAP
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
          x-looker-nullable: true
        enabled:
          description: Enable/Disable LDAP authentication for the server
          type: boolean
          x-looker-nullable: false
        force_no_page:
          description: Don't attempt to do LDAP search result paging (RFC 2696) even
            if the LDAP server claims to support it.
          type: boolean
          x-looker-nullable: false
        groups:
          description: (Read-only) Array of mappings between LDAP Groups and Looker
            Roles
          items:
            $ref: '#/components/schemas/LDAPGroupRead'
          readOnly: true
          type: array
          x-looker-nullable: true
        groups_base_dn:
          description: Base dn for finding groups in LDAP searches
          type: string
          x-looker-nullable: true
        groups_finder_type:
          description: Identifier for a strategy for how Looker will search for groups
            in the LDAP server
          type: string
          x-looker-nullable: true
        groups_member_attribute:
          description: LDAP Group attribute that signifies the members of the groups.
            Most commonly 'member'
          type: string
          x-looker-nullable: true
        groups_objectclasses:
          description: Optional comma-separated list of supported LDAP objectclass
            for groups when doing groups searches
          type: string
          x-looker-nullable: true
        groups_user_attribute:
          description: LDAP Group attribute that signifies the user in a group. Most
            commonly 'dn'
          type: string
          x-looker-nullable: true
        groups_with_role_ids:
          description: (Read/Write) Array of mappings between LDAP Groups and arrays
            of Looker Role ids
          items:
            $ref: '#/components/schemas/LDAPGroupWrite'
          type: array
          x-looker-nullable: true
        has_auth_password:
          description: (Read-only) Has the password been set for the LDAP account
            used to access the LDAP server
          readOnly: true
          type: boolean
          x-looker-nullable: false
        merge_new_users_by_email:
          description: Merge first-time ldap login to existing user account by email
            addresses. When a user logs in for the first time via ldap this option
            will connect this user into their existing account by finding the account
            with a matching email address. Otherwise a new user account will be created
            for the user.
          type: boolean
          x-looker-nullable: false
        modified_at:
          description: When this config was last modified
          readOnly: true
          type: string
          x-looker-nullable: true
        modified_by:
          description: User id of user who last modified this config
          readOnly: true
          type: string
          x-looker-nullable: true
        set_roles_from_groups:
          description: Set user roles in Looker based on groups from LDAP
          type: boolean
          x-looker-nullable: false
        test_ldap_password:
          description: (Write-Only)  Test LDAP user password. For ldap tests only.
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        test_ldap_user:
          description: (Write-Only)  Test LDAP user login id. For ldap tests only.
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        user_attribute_map_email:
          description: Name of user record attributes used to indicate email address
            field
          type: string
          x-looker-nullable: true
        user_attribute_map_first_name:
          description: Name of user record attributes used to indicate first name
          type: string
          x-looker-nullable: true
        user_attribute_map_last_name:
          description: Name of user record attributes used to indicate last name
          type: string
          x-looker-nullable: true
        user_attribute_map_ldap_id:
          description: Name of user record attributes used to indicate unique record
            id
          type: string
          x-looker-nullable: true
        user_attributes:
          description: (Read-only) Array of mappings between LDAP User Attributes
            and Looker User Attributes
          items:
            $ref: '#/components/schemas/LDAPUserAttributeRead'
          readOnly: true
          type: array
          x-looker-nullable: true
        user_attributes_with_ids:
          description: (Read/Write) Array of mappings between LDAP User Attributes
            and arrays of Looker User Attribute ids
          items:
            $ref: '#/components/schemas/LDAPUserAttributeWrite'
          type: array
          x-looker-nullable: true
        user_bind_base_dn:
          description: Distinguished name of LDAP node used as the base for user searches
          type: string
          x-looker-nullable: true
        user_custom_filter:
          description: (Optional) Custom RFC-2254 filter clause for use in finding
            user during login. Combined via 'and' with the other generated filter
            clauses.
          type: string
          x-looker-nullable: true
        user_id_attribute_names:
          description: Name(s) of user record attributes used for matching user login
            id (comma separated list)
          type: string
          x-looker-nullable: true
        user_objectclass:
          description: (Optional) Name of user record objectclass used for finding
            user during login id
          type: string
          x-looker-nullable: true
        allow_normal_group_membership:
          description: Allow LDAP auth'd users to be members of non-reflected Looker
            groups. If 'false', user will be removed from non-reflected groups on
            login.
          type: boolean
          x-looker-nullable: false
        allow_roles_from_normal_groups:
          description: LDAP auth'd users will be able to inherit roles from non-reflected
            Looker groups.
          type: boolean
          x-looker-nullable: false
        allow_direct_roles:
          description: Allows roles to be directly assigned to LDAP auth'd users.
          type: boolean
          x-looker-nullable: false
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LDAPConfigTestResult:
      example:
        trace: trace
        details: details
        message: message
        issues:
        - severity: severity
          can:
            key: true
          message: message
        - severity: severity
          can:
            key: true
          message: message
        user:
          can:
            key: true
          ldap_dn: ldap_dn
          ldap_id: ldap_id
          roles:
          - roles
          - roles
          groups:
          - groups
          - groups
          last_name: last_name
          attributes:
            key: attributes
          all_emails:
          - all_emails
          - all_emails
          first_name: first_name
          email: email
          url: https://openapi-generator.tech
        url: https://openapi-generator.tech
        status: status
      properties:
        details:
          description: Additional details for error cases
          readOnly: true
          type: string
          x-looker-nullable: true
        issues:
          description: Array of issues/considerations about the result
          items:
            $ref: '#/components/schemas/LDAPConfigTestIssue'
          readOnly: true
          type: array
          x-looker-nullable: true
        message:
          description: Short human readable test about the result
          readOnly: true
          type: string
          x-looker-nullable: true
        status:
          description: 'Test status code: always ''success'' or ''error'''
          readOnly: true
          type: string
          x-looker-nullable: true
        trace:
          description: A more detailed trace of incremental results during auth tests
          readOnly: true
          type: string
          x-looker-nullable: true
        user:
          $ref: '#/components/schemas/LDAPUser'
        url:
          description: Link to ldap config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LDAPConfigTestIssue:
      example:
        severity: severity
        can:
          key: true
        message: message
      properties:
        severity:
          description: Severity of the issue. Error or Warning
          readOnly: true
          type: string
          x-looker-nullable: true
        message:
          description: Message describing the issue
          readOnly: true
          type: string
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LDAPGroupRead:
      example:
        looker_group_id: 3
        looker_group_name: looker_group_name
        roles:
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        name: name
        id: 9
        url: https://openapi-generator.tech
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        looker_group_id:
          description: Unique Id of group in Looker
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        looker_group_name:
          description: Name of group in Looker
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of group in LDAP
          readOnly: true
          type: string
          x-looker-nullable: true
        roles:
          description: Looker Roles
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
          x-looker-nullable: true
        url:
          description: Link to ldap config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LDAPGroupWrite:
      example:
        looker_group_id: 4
        looker_group_name: looker_group_name
        name: name
        id: 2
        role_ids:
        - 7
        - 7
        url: https://openapi-generator.tech
      properties:
        id:
          description: Unique Id
          format: int64
          type: integer
          x-looker-nullable: true
        looker_group_id:
          description: Unique Id of group in Looker
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        looker_group_name:
          description: Name of group in Looker
          type: string
          x-looker-nullable: true
        name:
          description: Name of group in LDAP
          type: string
          x-looker-nullable: true
        role_ids:
          description: Looker Role Ids
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        url:
          description: Link to ldap config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LDAPUserAttributeRead:
      example:
        name: name
        user_attributes:
        - can:
            key: true
          is_system: true
          user_can_view: true
          value_is_hidden: true
          hidden_value_domain_whitelist: hidden_value_domain_whitelist
          name: name
          default_value: default_value
          id: 1
          label: label
          is_permanent: true
          type: type
          user_can_edit: true
        - can:
            key: true
          is_system: true
          user_can_view: true
          value_is_hidden: true
          hidden_value_domain_whitelist: hidden_value_domain_whitelist
          name: name
          default_value: default_value
          id: 1
          label: label
          is_permanent: true
          type: type
          user_can_edit: true
        required: true
        url: https://openapi-generator.tech
      properties:
        name:
          description: Name of User Attribute in LDAP
          readOnly: true
          type: string
          x-looker-nullable: true
        required:
          description: Required to be in LDAP assertion for login to be allowed to
            succeed
          readOnly: true
          type: boolean
          x-looker-nullable: false
        user_attributes:
          description: Looker User Attributes
          items:
            $ref: '#/components/schemas/UserAttribute'
          readOnly: true
          type: array
          x-looker-nullable: true
        url:
          description: Link to ldap config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LDAPUserAttributeWrite:
      example:
        user_attribute_ids:
        - 1
        - 1
        name: name
        required: true
        url: https://openapi-generator.tech
      properties:
        name:
          description: Name of User Attribute in LDAP
          type: string
          x-looker-nullable: true
        required:
          description: Required to be in LDAP assertion for login to be allowed to
            succeed
          type: boolean
          x-looker-nullable: false
        user_attribute_ids:
          description: Looker User Attribute Ids
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        url:
          description: Link to ldap config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LDAPUser:
      example:
        can:
          key: true
        ldap_dn: ldap_dn
        ldap_id: ldap_id
        roles:
        - roles
        - roles
        groups:
        - groups
        - groups
        last_name: last_name
        attributes:
          key: attributes
        all_emails:
        - all_emails
        - all_emails
        first_name: first_name
        email: email
        url: https://openapi-generator.tech
      properties:
        all_emails:
          description: Array of user's email addresses and aliases for use in migration
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        attributes:
          additionalProperties:
            type: string
          description: Dictionary of user's attributes (name/value)
          readOnly: true
          type: object
          x-looker-nullable: true
        email:
          description: Primary email address
          readOnly: true
          type: string
          x-looker-nullable: true
        first_name:
          description: First name
          readOnly: true
          type: string
          x-looker-nullable: true
        groups:
          description: Array of user's groups (group names only)
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        last_name:
          description: Last Name
          readOnly: true
          type: string
          x-looker-nullable: true
        ldap_dn:
          description: LDAP's distinguished name for the user record
          readOnly: true
          type: string
          x-looker-nullable: true
        ldap_id:
          description: LDAP's Unique ID for the user
          readOnly: true
          type: string
          x-looker-nullable: true
        roles:
          description: Array of user's roles (role names only)
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        url:
          description: Link to ldap config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LegacyFeature:
      example:
        has_disabled_on_upgrade: true
        disallowed_as_of_version: disallowed_as_of_version
        approximate_end_of_life_date: 2000-01-23T04:56:07.000+00:00
        description: description
        enabled_locally: true
        disable_on_upgrade_to_version: disable_on_upgrade_to_version
        documentation_url: documentation_url
        enabled: true
        can:
          key: true
        end_of_life_version: end_of_life_version
        approximate_disable_date: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description
          readOnly: true
          type: string
          x-looker-nullable: true
        enabled_locally:
          description: Whether this feature has been enabled by a user
          type: boolean
          x-looker-nullable: false
        enabled:
          description: Whether this feature is currently enabled
          readOnly: true
          type: boolean
          x-looker-nullable: false
        disallowed_as_of_version:
          description: Looker version where this feature became a legacy feature
          readOnly: true
          type: string
          x-looker-nullable: true
        disable_on_upgrade_to_version:
          description: Looker version where this feature will be automatically disabled
          readOnly: true
          type: string
          x-looker-nullable: true
        end_of_life_version:
          description: Future Looker version where this feature will be removed
          readOnly: true
          type: string
          x-looker-nullable: true
        documentation_url:
          description: URL for documentation about this feature
          readOnly: true
          type: string
          x-looker-nullable: true
        approximate_disable_date:
          description: Approximate date that this feature will be automatically disabled.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        approximate_end_of_life_date:
          description: Approximate date that this feature will be removed.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        has_disabled_on_upgrade:
          description: Whether this legacy feature may have been automatically disabled
            when upgrading to the current version.
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    Locale:
      example:
        code: code
        native_name: native_name
        english_name: english_name
      properties:
        code:
          description: Code for Locale
          readOnly: true
          type: string
          x-looker-nullable: true
        native_name:
          description: Name of Locale in its own language
          readOnly: true
          type: string
          x-looker-nullable: true
        english_name:
          description: Name of Locale in English
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LocalizationSettings:
      example:
        can:
          key: true
        default_locale: default_locale
        localization_level: localization_level
      properties:
        default_locale:
          description: Default locale for localization
          readOnly: true
          type: string
          x-looker-nullable: true
        localization_level:
          description: Localization level - strict or permissive
          readOnly: true
          type: string
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    LookBasic:
      example:
        can:
          key: true
        content_metadata_id: 2
        id: 7
        title: title
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        title:
          description: Look Title
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    Look:
      example:
        embed_url: embed_url
        query_id: 7
        created_at: 2000-01-23T04:56:07.000+00:00
        deleter_id: 5
        description: description
        title: title
        space:
          is_embed: true
          child_count: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 1
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 6
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        short_url: short_url
        public_url: public_url
        can:
          key: true
        content_favorite_id: 1
        excel_file_url: excel_file_url
        public: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        last_viewed_at: 2000-01-23T04:56:07.000+00:00
        favorite_count: 5
        model:
          id: id
          label: label
        id: 6
        last_accessed_at: 2000-01-23T04:56:07.000+00:00
        public_slug: public_slug
        last_updater_id: 2
        is_run_on_load: true
        deleted_at: 2000-01-23T04:56:07.000+00:00
        content_metadata_id: 0
        deleted: true
        folder:
          is_embed: true
          child_count: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 4
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 7
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        user_id: 9
        image_embed_url: image_embed_url
        google_spreadsheet_formula: google_spreadsheet_formula
        folder_id: folder_id
        user:
          id: 1
        space_id: space_id
        view_count: 3
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        title:
          description: Look Title
          type: string
          x-looker-nullable: true
        content_favorite_id:
          description: Content Favorite Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time that the Look was created.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleted:
          description: Whether or not a look is 'soft' deleted.
          type: boolean
          x-looker-nullable: false
        deleted_at:
          description: Time that the Look was deleted.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleter_id:
          description: Id of User that deleted the look.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        description:
          description: Description
          type: string
          x-looker-nullable: true
        embed_url:
          description: Embed Url
          readOnly: true
          type: string
          x-looker-nullable: true
        excel_file_url:
          description: Excel File Url
          readOnly: true
          type: string
          x-looker-nullable: true
        favorite_count:
          description: Number of times favorited
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        google_spreadsheet_formula:
          description: Google Spreadsheet Formula
          readOnly: true
          type: string
          x-looker-nullable: true
        image_embed_url:
          description: Image Embed Url
          readOnly: true
          type: string
          x-looker-nullable: true
        is_run_on_load:
          description: auto-run query when Look viewed
          type: boolean
          x-looker-nullable: false
        last_accessed_at:
          description: Time that the Look was last accessed by any user
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        last_updater_id:
          description: Id of User that last updated the look.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        last_viewed_at:
          description: Time last viewed in the Looker web UI
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        model:
          $ref: '#/components/schemas/LookModel'
        public:
          description: Is Public
          type: boolean
          x-looker-nullable: true
        public_slug:
          description: Public Slug
          readOnly: true
          type: string
          x-looker-nullable: true
        public_url:
          description: Public Url
          readOnly: true
          type: string
          x-looker-nullable: true
        query_id:
          description: Query Id
          format: int64
          type: integer
          x-looker-nullable: true
        short_url:
          description: Short Url
          readOnly: true
          type: string
          x-looker-nullable: true
        folder:
          $ref: '#/components/schemas/FolderBase'
        folder_id:
          description: Folder Id
          type: string
          x-looker-nullable: true
        updated_at:
          description: Time that the Look was updated.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: User Id
          format: int64
          type: integer
          x-looker-nullable: true
        view_count:
          description: Number of times viewed in the Looker web UI
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user:
          $ref: '#/components/schemas/UserIdOnly'
        space_id:
          description: Space Id
          type: string
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/SpaceBase'
      type: object
      x-looker-status: stable
    LookWithQuery:
      example:
        embed_url: embed_url
        query_id: 4
        created_at: 2000-01-23T04:56:07.000+00:00
        deleter_id: 9
        description: description
        title: title
        space:
          is_embed: true
          child_count: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 1
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 6
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        short_url: short_url
        public_url: public_url
        can:
          key: true
        content_favorite_id: 7
        excel_file_url: excel_file_url
        public: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        last_viewed_at: 2000-01-23T04:56:07.000+00:00
        favorite_count: 3
        model:
          id: id
          label: label
        id: 2
        last_accessed_at: 2000-01-23T04:56:07.000+00:00
        public_slug: public_slug
        last_updater_id: 2
        query:
          query_timezone: query_timezone
          vis_config:
            key: vis_config
          filter_expression: filter_expression
          has_table_calculations: true
          row_total: row_total
          expanded_share_url: expanded_share_url
          client_id: client_id
          can:
            key: true
          view: view
          total: true
          visible_ui_sections: visible_ui_sections
          dynamic_fields: dynamic_fields
          limit: limit
          model: model
          id: 6
          sorts:
          - sorts
          - sorts
          slug: slug
          filter_config:
            key: filter_config
          subtotals:
          - subtotals
          - subtotals
          fill_fields:
          - fill_fields
          - fill_fields
          runtime: 1.4658129805029452
          filters:
            key: filters
          pivots:
          - pivots
          - pivots
          url: url
          share_url: share_url
          fields:
          - fields
          - fields
          column_limit: column_limit
        is_run_on_load: true
        deleted_at: 2000-01-23T04:56:07.000+00:00
        url: url
        content_metadata_id: 5
        deleted: true
        folder:
          is_embed: true
          child_count: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 4
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 7
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        user_id: 7
        image_embed_url: image_embed_url
        google_spreadsheet_formula: google_spreadsheet_formula
        folder_id: folder_id
        user:
          id: 1
        space_id: space_id
        view_count: 1
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        title:
          description: Look Title
          type: string
          x-looker-nullable: true
        content_favorite_id:
          description: Content Favorite Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time that the Look was created.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleted:
          description: Whether or not a look is 'soft' deleted.
          type: boolean
          x-looker-nullable: false
        deleted_at:
          description: Time that the Look was deleted.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleter_id:
          description: Id of User that deleted the look.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        description:
          description: Description
          type: string
          x-looker-nullable: true
        embed_url:
          description: Embed Url
          readOnly: true
          type: string
          x-looker-nullable: true
        excel_file_url:
          description: Excel File Url
          readOnly: true
          type: string
          x-looker-nullable: true
        favorite_count:
          description: Number of times favorited
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        google_spreadsheet_formula:
          description: Google Spreadsheet Formula
          readOnly: true
          type: string
          x-looker-nullable: true
        image_embed_url:
          description: Image Embed Url
          readOnly: true
          type: string
          x-looker-nullable: true
        is_run_on_load:
          description: auto-run query when Look viewed
          type: boolean
          x-looker-nullable: false
        last_accessed_at:
          description: Time that the Look was last accessed by any user
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        last_updater_id:
          description: Id of User that last updated the look.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        last_viewed_at:
          description: Time last viewed in the Looker web UI
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        model:
          $ref: '#/components/schemas/LookModel'
        public:
          description: Is Public
          type: boolean
          x-looker-nullable: true
        public_slug:
          description: Public Slug
          readOnly: true
          type: string
          x-looker-nullable: true
        public_url:
          description: Public Url
          readOnly: true
          type: string
          x-looker-nullable: true
        query_id:
          description: Query Id
          format: int64
          type: integer
          x-looker-nullable: true
        short_url:
          description: Short Url
          readOnly: true
          type: string
          x-looker-nullable: true
        folder:
          $ref: '#/components/schemas/FolderBase'
        folder_id:
          description: Folder Id
          type: string
          x-looker-nullable: true
        updated_at:
          description: Time that the Look was updated.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: User Id
          format: int64
          type: integer
          x-looker-nullable: true
        view_count:
          description: Number of times viewed in the Looker web UI
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user:
          $ref: '#/components/schemas/UserIdOnly'
        space_id:
          description: Space Id
          type: string
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/SpaceBase'
        query:
          $ref: '#/components/schemas/Query'
        url:
          description: Url
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookWithDashboards:
      example:
        embed_url: embed_url
        query_id: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        deleter_id: 7
        description: description
        title: title
        dashboards:
        - query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        - query_timezone: query_timezone
          refresh_interval: refresh_interval
          hidden: true
          description: description
          refresh_interval_to_i: 2
          title: title
          space:
            is_embed: true
            child_count: 7
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 1
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 6
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          can:
            key: true
          content_favorite_id: 9
          content_metadata_id: 3
          folder:
            is_embed: true
            child_count: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            external_id: external_id
            is_users_root: true
            is_personal: true
            can:
              key: true
            content_metadata_id: 4
            is_embed_users_root: true
            parent_id: parent_id
            is_shared_root: true
            name: name
            creator_id: 7
            is_embed_shared_root: true
            is_personal_descendant: true
            id: id
          readonly: true
          user_id: 1
          model:
            id: id
            label: label
          id: id
        space:
          is_embed: true
          child_count: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 1
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 6
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        short_url: short_url
        public_url: public_url
        can:
          key: true
        content_favorite_id: 2
        excel_file_url: excel_file_url
        public: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        last_viewed_at: 2000-01-23T04:56:07.000+00:00
        favorite_count: 9
        model:
          id: id
          label: label
        id: 5
        last_accessed_at: 2000-01-23T04:56:07.000+00:00
        public_slug: public_slug
        last_updater_id: 3
        is_run_on_load: true
        deleted_at: 2000-01-23T04:56:07.000+00:00
        content_metadata_id: 5
        deleted: true
        folder:
          is_embed: true
          child_count: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          external_id: external_id
          is_users_root: true
          is_personal: true
          can:
            key: true
          content_metadata_id: 4
          is_embed_users_root: true
          parent_id: parent_id
          is_shared_root: true
          name: name
          creator_id: 7
          is_embed_shared_root: true
          is_personal_descendant: true
          id: id
        user_id: 4
        image_embed_url: image_embed_url
        google_spreadsheet_formula: google_spreadsheet_formula
        folder_id: folder_id
        user:
          id: 1
        space_id: space_id
        view_count: 7
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        content_metadata_id:
          description: Id of content metadata
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        title:
          description: Look Title
          type: string
          x-looker-nullable: true
        content_favorite_id:
          description: Content Favorite Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time that the Look was created.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleted:
          description: Whether or not a look is 'soft' deleted.
          type: boolean
          x-looker-nullable: false
        deleted_at:
          description: Time that the Look was deleted.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        deleter_id:
          description: Id of User that deleted the look.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        description:
          description: Description
          type: string
          x-looker-nullable: true
        embed_url:
          description: Embed Url
          readOnly: true
          type: string
          x-looker-nullable: true
        excel_file_url:
          description: Excel File Url
          readOnly: true
          type: string
          x-looker-nullable: true
        favorite_count:
          description: Number of times favorited
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        google_spreadsheet_formula:
          description: Google Spreadsheet Formula
          readOnly: true
          type: string
          x-looker-nullable: true
        image_embed_url:
          description: Image Embed Url
          readOnly: true
          type: string
          x-looker-nullable: true
        is_run_on_load:
          description: auto-run query when Look viewed
          type: boolean
          x-looker-nullable: false
        last_accessed_at:
          description: Time that the Look was last accessed by any user
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        last_updater_id:
          description: Id of User that last updated the look.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        last_viewed_at:
          description: Time last viewed in the Looker web UI
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        model:
          $ref: '#/components/schemas/LookModel'
        public:
          description: Is Public
          type: boolean
          x-looker-nullable: true
        public_slug:
          description: Public Slug
          readOnly: true
          type: string
          x-looker-nullable: true
        public_url:
          description: Public Url
          readOnly: true
          type: string
          x-looker-nullable: true
        query_id:
          description: Query Id
          format: int64
          type: integer
          x-looker-nullable: true
        short_url:
          description: Short Url
          readOnly: true
          type: string
          x-looker-nullable: true
        folder:
          $ref: '#/components/schemas/FolderBase'
        folder_id:
          description: Folder Id
          type: string
          x-looker-nullable: true
        updated_at:
          description: Time that the Look was updated.
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: User Id
          format: int64
          type: integer
          x-looker-nullable: true
        view_count:
          description: Number of times viewed in the Looker web UI
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user:
          $ref: '#/components/schemas/UserIdOnly'
        space_id:
          description: Space Id
          type: string
          x-looker-nullable: true
        space:
          $ref: '#/components/schemas/SpaceBase'
        dashboards:
          description: Dashboards
          items:
            $ref: '#/components/schemas/DashboardBase'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookModel:
      example:
        id: id
        label: label
      properties:
        id:
          description: Model Id
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Model Label
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    LookmlModelNavExplore:
      example:
        can:
          key: true
        hidden: true
        group_label: group_label
        name: name
        description: description
        label: label
      properties:
        name:
          description: Name of the explore
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description for the explore
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Label for the explore
          readOnly: true
          type: string
          x-looker-nullable: true
        hidden:
          description: Is this explore marked as hidden
          readOnly: true
          type: boolean
          x-looker-nullable: false
        group_label:
          description: Label used to group explores in the navigation menus
          readOnly: true
          type: string
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LookmlModelExplore:
      example:
        joins:
        - required_joins:
          - required_joins
          - required_joins
          outer_only: true
          foreign_key: foreign_key
          type: type
          sql_table_name: sql_table_name
          dependent_fields:
          - dependent_fields
          - dependent_fields
          name: name
          sql_on: sql_on
          view_label: view_label
          from: from
          fields:
          - fields
          - fields
          relationship: relationship
          sql_foreign_key: sql_foreign_key
        - required_joins:
          - required_joins
          - required_joins
          outer_only: true
          foreign_key: foreign_key
          type: type
          sql_table_name: sql_table_name
          dependent_fields:
          - dependent_fields
          - dependent_fields
          name: name
          sql_on: sql_on
          view_label: view_label
          from: from
          fields:
          - fields
          - fields
          relationship: relationship
          sql_foreign_key: sql_foreign_key
        aliases:
        - name: name
          value: value
        - name: name
          value: value
        hidden: true
        description: description
        project_name: project_name
        can_pivot_in_db: true
        source_file: source_file
        connection_name: connection_name
        index_fields:
        - index_fields
        - index_fields
        can_subtotal: true
        model_name: model_name
        supported_measure_types:
        - dimension_type: dimension_type
          measure_types:
          - measure_types
          - measure_types
        - dimension_type: dimension_type
          measure_types:
          - measure_types
          - measure_types
        always_filter:
        - name: name
          value: value
        - name: name
          value: value
        id: id
        access_filter_fields:
        - access_filter_fields
        - access_filter_fields
        access_filters:
        - field: field
          user_attribute: user_attribute
        - field: field
          user_attribute: user_attribute
        view_name: view_name
        conditionally_filter:
        - name: name
          value: value
        - name: name
          value: value
        supports_cost_estimate: true
        sets:
        - name: name
          value:
          - value
          - value
        - name: name
          value:
          - value
          - value
        null_sort_treatment: null_sort_treatment
        label: label
        tags:
        - tags
        - tags
        has_timezone_support: true
        sql_table_name: sql_table_name
        group_label: group_label
        name: name
        files:
        - files
        - files
        can_save: true
        scopes:
        - scopes
        - scopes
        can_total: true
        can_explain: true
        fields:
          measures:
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          filters:
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          parameters:
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          dimensions:
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
          - is_timeframe: true
            enumerations:
            - label: label
              value: value
            - label: label
              value: value
            align: align
            project_name: project_name
            type: type
            time_interval:
              name: name
              count: 6
            requires_refresh_on_sort: true
            view: view
            user_attribute_filter_types:
            - user_attribute_filter_types
            - user_attribute_filter_types
            dynamic: true
            is_filter: true
            default_filter_value: default_filter_value
            tags:
            - tags
            - tags
            strict_value_format: true
            has_allowed_values: true
            measure: true
            field_group_variant: field_group_variant
            name: name
            suggest_explore: suggest_explore
            hidden: true
            map_layer:
              extents_json_url: extents_json_url
              min_zoom_level: 5
              name: name
              property_key: property_key
              format: format
              max_zoom_level: 1
              property_label_key: property_label_key
              feature_key: feature_key
              projection: projection
              url: url
            lookml_link: lookml_link
            is_fiscal: true
            can_filter: true
            description: description
            is_numeric: true
            error: error
            source_file: source_file
            sql: sql
            suggestable: true
            fiscal_month_offset: 0
            parameter: true
            scope: scope
            view_label: view_label
            week_start_day: week_start_day
            fill_style: fill_style
            label_short: label_short
            label: label
            sortable: true
            filters:
            - condition: condition
              field: field
            - condition: condition
              field: field
            field_group_label: field_group_label
            primary_key: true
            suggest_dimension: suggest_dimension
            source_file_path: source_file_path
            can_time_filter: true
            permanent: true
            value_format: value_format
            label_from_parameter: label_from_parameter
            sql_case:
            - condition: condition
              value: value
            - condition: condition
              value: value
            suggestions:
            - suggestions
            - suggestions
            category: category
        errors:
        - error_pos: error_pos
          details: details
          message: message
          field_error: true
        - error_pos: error_pos
          details: details
          message: message
          field_error: true
      properties:
        id:
          description: Fully qualified explore name (model name plus explore name)
          readOnly: true
          type: string
          x-looker-nullable: false
        name:
          description: Explore name
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Label
          readOnly: true
          type: string
          x-looker-nullable: true
        scopes:
          description: Scopes
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        can_total:
          description: Can Total
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can_save:
          description: Can Save
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can_explain:
          description: Can Explain
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can_pivot_in_db:
          description: Can pivot in the DB
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can_subtotal:
          description: Can use subtotals
          readOnly: true
          type: boolean
          x-looker-nullable: false
        has_timezone_support:
          description: Has timezone support
          readOnly: true
          type: boolean
          x-looker-nullable: false
        supports_cost_estimate:
          description: Cost estimates supported
          readOnly: true
          type: boolean
          x-looker-nullable: false
        connection_name:
          description: Connection name
          readOnly: true
          type: string
          x-looker-nullable: true
        null_sort_treatment:
          description: How nulls are sorted, possible values are "low", "high", "first"
            and "last"
          readOnly: true
          type: string
          x-looker-nullable: true
        files:
          description: List of model source files
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        source_file:
          description: Primary source_file file
          readOnly: true
          type: string
          x-looker-nullable: true
        project_name:
          description: Name of project
          readOnly: true
          type: string
          x-looker-nullable: true
        model_name:
          description: Name of model
          readOnly: true
          type: string
          x-looker-nullable: true
        view_name:
          description: Name of view
          readOnly: true
          type: string
          x-looker-nullable: true
        hidden:
          description: Is hidden
          readOnly: true
          type: boolean
          x-looker-nullable: false
        sql_table_name:
          description: 'A sql_table_name expression that defines what sql table the
            view/explore maps onto. Example: "prod_orders2 AS orders" in a view named
            orders.'
          readOnly: true
          type: string
          x-looker-nullable: true
        access_filter_fields:
          description: (DEPRECATED) Array of access filter field names
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
          x-looker-deprecated: true
        access_filters:
          description: Access filters
          items:
            $ref: '#/components/schemas/LookmlModelExploreAccessFilter'
          readOnly: true
          type: array
          x-looker-nullable: true
        aliases:
          description: Aliases
          items:
            $ref: '#/components/schemas/LookmlModelExploreAlias'
          readOnly: true
          type: array
          x-looker-nullable: true
        always_filter:
          description: Always filter
          items:
            $ref: '#/components/schemas/LookmlModelExploreAlwaysFilter'
          readOnly: true
          type: array
          x-looker-nullable: true
        conditionally_filter:
          description: Conditionally filter
          items:
            $ref: '#/components/schemas/LookmlModelExploreConditionallyFilter'
          readOnly: true
          type: array
          x-looker-nullable: true
        index_fields:
          description: Array of index fields
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        sets:
          description: Sets
          items:
            $ref: '#/components/schemas/LookmlModelExploreSet'
          readOnly: true
          type: array
          x-looker-nullable: true
        tags:
          description: An array of arbitrary string tags provided in the model for
            this explore.
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        errors:
          description: Errors
          items:
            $ref: '#/components/schemas/LookmlModelExploreError'
          readOnly: true
          type: array
          x-looker-nullable: true
        fields:
          $ref: '#/components/schemas/LookmlModelExploreFieldset'
        joins:
          description: Views joined into this explore
          items:
            $ref: '#/components/schemas/LookmlModelExploreJoins'
          readOnly: true
          type: array
          x-looker-nullable: true
        group_label:
          description: Label used to group explores in the navigation menus
          readOnly: true
          type: string
          x-looker-nullable: true
        supported_measure_types:
          description: An array of items describing which custom measure types are
            supported for creating a custom measure 'based_on' each possible dimension
            type.
          items:
            $ref: '#/components/schemas/LookmlModelExploreSupportedMeasureType'
          readOnly: true
          type: array
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LookmlModelExploreSupportedMeasureType:
      example:
        dimension_type: dimension_type
        measure_types:
        - measure_types
        - measure_types
      properties:
        dimension_type:
          readOnly: true
          type: string
          x-looker-nullable: true
        measure_types:
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreAccessFilter:
      example:
        field: field
        user_attribute: user_attribute
      properties:
        field:
          description: Field to be filtered
          readOnly: true
          type: string
          x-looker-nullable: true
        user_attribute:
          description: User attribute name
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreConditionallyFilter:
      example:
        name: name
        value: value
      properties:
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        value:
          description: Value
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreAlwaysFilter:
      example:
        name: name
        value: value
      properties:
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        value:
          description: Value
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreAlias:
      example:
        name: name
        value: value
      properties:
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        value:
          description: Value
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreSet:
      example:
        name: name
        value:
        - value
        - value
      properties:
        name:
          description: Name
          readOnly: true
          type: string
          x-looker-nullable: true
        value:
          description: Value set
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreError:
      example:
        error_pos: error_pos
        details: details
        message: message
        field_error: true
      properties:
        message:
          description: Error Message
          readOnly: true
          type: string
          x-looker-nullable: true
        details:
          description: Details
          format: any
          readOnly: true
          type: string
          x-looker-nullable: true
        error_pos:
          description: Error source location
          readOnly: true
          type: string
          x-looker-nullable: true
        field_error:
          description: Is this a field error
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LookmlModelExploreFieldset:
      example:
        measures:
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        filters:
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        parameters:
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        dimensions:
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
        - is_timeframe: true
          enumerations:
          - label: label
            value: value
          - label: label
            value: value
          align: align
          project_name: project_name
          type: type
          time_interval:
            name: name
            count: 6
          requires_refresh_on_sort: true
          view: view
          user_attribute_filter_types:
          - user_attribute_filter_types
          - user_attribute_filter_types
          dynamic: true
          is_filter: true
          default_filter_value: default_filter_value
          tags:
          - tags
          - tags
          strict_value_format: true
          has_allowed_values: true
          measure: true
          field_group_variant: field_group_variant
          name: name
          suggest_explore: suggest_explore
          hidden: true
          map_layer:
            extents_json_url: extents_json_url
            min_zoom_level: 5
            name: name
            property_key: property_key
            format: format
            max_zoom_level: 1
            property_label_key: property_label_key
            feature_key: feature_key
            projection: projection
            url: url
          lookml_link: lookml_link
          is_fiscal: true
          can_filter: true
          description: description
          is_numeric: true
          error: error
          source_file: source_file
          sql: sql
          suggestable: true
          fiscal_month_offset: 0
          parameter: true
          scope: scope
          view_label: view_label
          week_start_day: week_start_day
          fill_style: fill_style
          label_short: label_short
          label: label
          sortable: true
          filters:
          - condition: condition
            field: field
          - condition: condition
            field: field
          field_group_label: field_group_label
          primary_key: true
          suggest_dimension: suggest_dimension
          source_file_path: source_file_path
          can_time_filter: true
          permanent: true
          value_format: value_format
          label_from_parameter: label_from_parameter
          sql_case:
          - condition: condition
            value: value
          - condition: condition
            value: value
          suggestions:
          - suggestions
          - suggestions
          category: category
      properties:
        dimensions:
          description: Array of dimensions
          items:
            $ref: '#/components/schemas/LookmlModelExploreField'
          readOnly: true
          type: array
          x-looker-nullable: true
        measures:
          description: Array of measures
          items:
            $ref: '#/components/schemas/LookmlModelExploreField'
          readOnly: true
          type: array
          x-looker-nullable: true
        filters:
          description: Array of filters
          items:
            $ref: '#/components/schemas/LookmlModelExploreField'
          readOnly: true
          type: array
          x-looker-nullable: true
        parameters:
          description: Array of parameters
          items:
            $ref: '#/components/schemas/LookmlModelExploreField'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreField:
      example:
        is_timeframe: true
        enumerations:
        - label: label
          value: value
        - label: label
          value: value
        align: align
        project_name: project_name
        type: type
        time_interval:
          name: name
          count: 6
        requires_refresh_on_sort: true
        view: view
        user_attribute_filter_types:
        - user_attribute_filter_types
        - user_attribute_filter_types
        dynamic: true
        is_filter: true
        default_filter_value: default_filter_value
        tags:
        - tags
        - tags
        strict_value_format: true
        has_allowed_values: true
        measure: true
        field_group_variant: field_group_variant
        name: name
        suggest_explore: suggest_explore
        hidden: true
        map_layer:
          extents_json_url: extents_json_url
          min_zoom_level: 5
          name: name
          property_key: property_key
          format: format
          max_zoom_level: 1
          property_label_key: property_label_key
          feature_key: feature_key
          projection: projection
          url: url
        lookml_link: lookml_link
        is_fiscal: true
        can_filter: true
        description: description
        is_numeric: true
        error: error
        source_file: source_file
        sql: sql
        suggestable: true
        fiscal_month_offset: 0
        parameter: true
        scope: scope
        view_label: view_label
        week_start_day: week_start_day
        fill_style: fill_style
        label_short: label_short
        label: label
        sortable: true
        filters:
        - condition: condition
          field: field
        - condition: condition
          field: field
        field_group_label: field_group_label
        primary_key: true
        suggest_dimension: suggest_dimension
        source_file_path: source_file_path
        can_time_filter: true
        permanent: true
        value_format: value_format
        label_from_parameter: label_from_parameter
        sql_case:
        - condition: condition
          value: value
        - condition: condition
          value: value
        suggestions:
        - suggestions
        - suggestions
        category: category
      properties:
        align:
          description: 'The appropriate horizontal text alignment the values of this
            field should be displayed in. Valid values are: "left", "right".'
          readOnly: true
          type: string
          x-looker-nullable: false
          x-looker-values:
          - left
          - right
        can_filter:
          description: Whether it's possible to filter on this field.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        category:
          description: 'Field category Valid values are: "parameter", "filter", "measure",
            "dimension".'
          readOnly: true
          type: string
          x-looker-nullable: true
          x-looker-values:
          - parameter
          - filter
          - measure
          - dimension
        default_filter_value:
          description: The default value that this field uses when filtering. Null
            if there is no default value.
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description
          readOnly: true
          type: string
          x-looker-nullable: true
        enumerations:
          description: An array enumerating all the possible values that this field
            can contain. When null, there is no limit to the set of possible values
            this field can contain.
          items:
            $ref: '#/components/schemas/LookmlModelExploreFieldEnumeration'
          readOnly: true
          type: array
          x-looker-nullable: true
        error:
          description: An error message indicating a problem with the definition of
            this field. If there are no errors, this will be null.
          readOnly: true
          type: string
          x-looker-nullable: true
        field_group_label:
          description: A label creating a grouping of fields. All fields with this
            label should be presented together when displayed in a UI.
          readOnly: true
          type: string
          x-looker-nullable: true
        field_group_variant:
          description: When presented in a field group via field_group_label, a shorter
            name of the field to be displayed in that context.
          readOnly: true
          type: string
          x-looker-nullable: true
        fill_style:
          description: 'The style of dimension fill that is possible for this field.
            Null if no dimension fill is possible. Valid values are: "enumeration",
            "range".'
          readOnly: true
          type: string
          x-looker-nullable: true
          x-looker-values:
          - enumeration
          - range
        fiscal_month_offset:
          description: An offset (in months) from the calendar start month to the
            fiscal start month defined in the LookML model this field belongs to.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        has_allowed_values:
          description: Whether this field has a set of allowed_values specified in
            LookML.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        hidden:
          description: Whether this field should be hidden from the user interface.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_filter:
          description: Whether this field is a filter.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_fiscal:
          description: Whether this field represents a fiscal time value.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_numeric:
          description: Whether this field is of a type that represents a numeric value.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_timeframe:
          description: Whether this field is of a type that represents a time value.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        can_time_filter:
          description: Whether this field can be time filtered.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        time_interval:
          $ref: '#/components/schemas/LookmlModelExploreFieldTimeInterval'
        label:
          description: Fully-qualified human-readable label of the field.
          readOnly: true
          type: string
          x-looker-nullable: false
        label_from_parameter:
          description: The name of the parameter that will provide a parameterized
            label for this field, if available in the current context.
          readOnly: true
          type: string
          x-looker-nullable: true
        label_short:
          description: The human-readable label of the field, without the view label.
          readOnly: true
          type: string
          x-looker-nullable: false
        lookml_link:
          description: A URL linking to the definition of this field in the LookML
            IDE.
          readOnly: true
          type: string
          x-looker-nullable: true
        map_layer:
          $ref: '#/components/schemas/LookmlModelExploreFieldMapLayer'
        measure:
          description: Whether this field is a measure.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        name:
          description: Fully-qualified name of the field.
          readOnly: true
          type: string
          x-looker-nullable: false
        strict_value_format:
          description: If yes, the field will not be localized with the user attribute
            number_format. Defaults to no
          readOnly: true
          type: boolean
          x-looker-nullable: false
        parameter:
          description: Whether this field is a parameter.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        permanent:
          description: Whether this field can be removed from a query.
          readOnly: true
          type: boolean
          x-looker-nullable: true
        primary_key:
          description: Whether or not the field represents a primary key.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        project_name:
          description: The name of the project this field is defined in.
          readOnly: true
          type: string
          x-looker-nullable: true
        requires_refresh_on_sort:
          description: When true, it's not possible to re-sort this field's values
            without re-running the SQL query, due to database logic that affects the
            sort.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        scope:
          description: The LookML scope this field belongs to. The scope is typically
            the field's view.
          readOnly: true
          type: string
          x-looker-nullable: false
        sortable:
          description: Whether this field can be sorted.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        source_file:
          description: The path portion of source_file_path.
          readOnly: true
          type: string
          x-looker-nullable: false
        source_file_path:
          description: The fully-qualified path of the project file this field is
            defined in.
          readOnly: true
          type: string
          x-looker-nullable: false
        sql:
          description: SQL expression as defined in the LookML model. The SQL syntax
            shown here is a representation intended for auditability, and is not neccessarily
            an exact match for what will ultimately be run in the database. It may
            contain special LookML syntax or annotations that are not valid SQL. This
            will be null if the current user does not have the see_lookml permission
            for the field's model.
          readOnly: true
          type: string
          x-looker-nullable: true
        sql_case:
          description: An array of conditions and values that make up a SQL Case expression,
            as defined in the LookML model. The SQL syntax shown here is a representation
            intended for auditability, and is not neccessarily an exact match for
            what will ultimately be run in the database. It may contain special LookML
            syntax or annotations that are not valid SQL. This will be null if the
            current user does not have the see_lookml permission for the field's model.
          items:
            $ref: '#/components/schemas/LookmlModelExploreFieldSqlCase'
          readOnly: true
          type: array
          x-looker-nullable: true
        filters:
          description: Array of filter conditions defined for the measure in LookML.
          items:
            $ref: '#/components/schemas/LookmlModelExploreFieldMeasureFilters'
          readOnly: true
          type: array
          x-looker-nullable: true
        suggest_dimension:
          description: The name of the dimension to base suggest queries from.
          readOnly: true
          type: string
          x-looker-nullable: false
        suggest_explore:
          description: The name of the explore to base suggest queries from.
          readOnly: true
          type: string
          x-looker-nullable: false
        suggestable:
          description: Whether or not suggestions are possible for this field.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        suggestions:
          description: If available, a list of suggestions for this field. For most
            fields, a suggest query is a more appropriate way to get an up-to-date
            list of suggestions. Or use enumerations to list all the possible values.
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        tags:
          description: An array of arbitrary string tags provided in the model for
            this field.
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
        type:
          description: The LookML type of the field.
          readOnly: true
          type: string
          x-looker-nullable: false
        user_attribute_filter_types:
          description: 'An array of user attribute types that are allowed to be used
            in filters on this field. Valid values are: "advanced_filter_string",
            "advanced_filter_number", "advanced_filter_datetime", "string", "number",
            "datetime", "relative_url", "yesno", "zipcode".'
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
          x-looker-values:
          - advanced_filter_string
          - advanced_filter_number
          - advanced_filter_datetime
          - string
          - number
          - datetime
          - relative_url
          - yesno
          - zipcode
        value_format:
          description: If specified, the LookML value format string for formatting
            values of this field.
          readOnly: true
          type: string
          x-looker-nullable: true
        view:
          description: The name of the view this field belongs to.
          readOnly: true
          type: string
          x-looker-nullable: false
        view_label:
          description: The human-readable label of the view the field belongs to.
          readOnly: true
          type: string
          x-looker-nullable: false
        dynamic:
          description: Whether this field was specified in "dynamic_fields" and is
            not part of the model.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        week_start_day:
          description: 'The name of the starting day of the week. Valid values are:
            "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday".'
          readOnly: true
          type: string
          x-looker-nullable: false
          x-looker-values:
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
      type: object
      x-looker-status: stable
    LookmlModelExploreFieldEnumeration:
      example:
        label: label
        value: value
      properties:
        label:
          description: Label
          readOnly: true
          type: string
          x-looker-nullable: true
        value:
          description: Value
          format: any
          readOnly: true
          type: string
          x-looker-polymorphic-types:
          - type: string
          - type: number
            format: float
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreFieldTimeInterval:
      example:
        name: name
        count: 6
      properties:
        name:
          description: 'The type of time interval this field represents a grouping
            of. Valid values are: "day", "hour", "minute", "second", "millisecond",
            "microsecond", "week", "month", "quarter", "year".'
          readOnly: true
          type: string
          x-looker-nullable: false
          x-looker-values:
          - day
          - hour
          - minute
          - second
          - millisecond
          - microsecond
          - week
          - month
          - quarter
          - year
        count:
          description: The number of intervals this field represents a grouping of.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LookmlModelExploreFieldSqlCase:
      example:
        condition: condition
        value: value
      properties:
        value:
          description: SQL Case label value
          readOnly: true
          type: string
          x-looker-nullable: true
        condition:
          description: SQL Case condition expression
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreFieldMeasureFilters:
      example:
        condition: condition
        field: field
      properties:
        field:
          description: Filter field name
          readOnly: true
          type: string
          x-looker-nullable: true
        condition:
          description: Filter condition value
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreFieldMapLayer:
      example:
        extents_json_url: extents_json_url
        min_zoom_level: 5
        name: name
        property_key: property_key
        format: format
        max_zoom_level: 1
        property_label_key: property_label_key
        feature_key: feature_key
        projection: projection
        url: url
      properties:
        url:
          description: URL to the map layer resource.
          readOnly: true
          type: string
          x-looker-nullable: false
        name:
          description: Name of the map layer, as defined in LookML.
          readOnly: true
          type: string
          x-looker-nullable: false
        feature_key:
          description: Specifies the name of the TopoJSON object that the map layer
            references. If not specified, use the first object..
          readOnly: true
          type: string
          x-looker-nullable: true
        property_key:
          description: Selects which property from the TopoJSON data to plot against.
            TopoJSON supports arbitrary metadata for each region. When null, the first
            matching property should be used.
          readOnly: true
          type: string
          x-looker-nullable: true
        property_label_key:
          description: Which property from the TopoJSON data to use to label the region.
            When null, property_key should be used.
          readOnly: true
          type: string
          x-looker-nullable: true
        projection:
          description: The preferred geographic projection of the map layer when displayed
            in a visualization that supports multiple geographic projections.
          readOnly: true
          type: string
          x-looker-nullable: true
        format:
          description: 'Specifies the data format of the region information. Valid
            values are: "topojson", "vector_tile_region".'
          readOnly: true
          type: string
          x-looker-nullable: false
          x-looker-values:
          - topojson
          - vector_tile_region
        extents_json_url:
          description: Specifies the URL to a JSON file that defines the geographic
            extents of each region available in the map layer. This data is used to
            automatically center the map on the available data for visualization purposes.
            The JSON file must be a JSON object where the keys are the mapping value
            of the feature (as specified by property_key) and the values are arrays
            of four numbers representing the west longitude, south latitude, east
            longitude, and north latitude extents of the region. The object must include
            a key for every possible value of property_key.
          readOnly: true
          type: string
          x-looker-nullable: true
        max_zoom_level:
          description: The minimum zoom level that the map layer may be displayed
            at, for visualizations that support zooming.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        min_zoom_level:
          description: The maximum zoom level that the map layer may be displayed
            at, for visualizations that support zooming.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    LookmlModelExploreJoins:
      example:
        required_joins:
        - required_joins
        - required_joins
        outer_only: true
        foreign_key: foreign_key
        type: type
        sql_table_name: sql_table_name
        dependent_fields:
        - dependent_fields
        - dependent_fields
        name: name
        sql_on: sql_on
        view_label: view_label
        from: from
        fields:
        - fields
        - fields
        relationship: relationship
        sql_foreign_key: sql_foreign_key
      properties:
        name:
          description: Name of this join (and name of the view to join)
          readOnly: true
          type: string
          x-looker-nullable: true
        dependent_fields:
          description: Fields referenced by the join
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        fields:
          description: Fields of the joined view to pull into this explore
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
        foreign_key:
          description: Name of the dimension in this explore whose value is in the
            primary key of the joined view
          readOnly: true
          type: string
          x-looker-nullable: false
        from:
          description: Name of view to join
          readOnly: true
          type: string
          x-looker-nullable: false
        outer_only:
          description: Specifies whether all queries must use an outer join
          readOnly: true
          type: boolean
          x-looker-nullable: true
        relationship:
          description: many_to_one, one_to_one, one_to_many, many_to_many
          readOnly: true
          type: string
          x-looker-nullable: true
        required_joins:
          description: Names of joins that must always be included in SQL queries
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: false
        sql_foreign_key:
          description: SQL expression that produces a foreign key
          readOnly: true
          type: string
          x-looker-nullable: false
        sql_on:
          description: SQL ON expression describing the join condition
          readOnly: true
          type: string
          x-looker-nullable: false
        sql_table_name:
          description: SQL table name to join
          readOnly: true
          type: string
          x-looker-nullable: false
        type:
          description: 'The join type: left_outer, full_outer, inner, or cross'
          readOnly: true
          type: string
          x-looker-nullable: false
        view_label:
          description: Label to display in UI selectors
          readOnly: true
          type: string
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LookmlModel:
      example:
        can:
          key: true
        allowed_db_connection_names:
        - allowed_db_connection_names
        - allowed_db_connection_names
        unlimited_db_connections: true
        has_content: true
        explores:
        - can:
            key: true
          hidden: true
          group_label: group_label
          name: name
          description: description
          label: label
        - can:
            key: true
          hidden: true
          group_label: group_label
          name: name
          description: description
          label: label
        name: name
        label: label
        project_name: project_name
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        allowed_db_connection_names:
          description: Array of names of connections this model is allowed to use
          items:
            type: string
          type: array
          x-looker-nullable: true
        explores:
          description: Array of explores (if has_content)
          items:
            $ref: '#/components/schemas/LookmlModelNavExplore'
          readOnly: true
          type: array
          x-looker-nullable: true
        has_content:
          description: Does this model declaration have have lookml content?
          readOnly: true
          type: boolean
          x-looker-nullable: false
        label:
          description: UI-friendly name for this model
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of the model. Also used as the unique identifier
          type: string
          x-looker-nullable: true
        project_name:
          description: Name of project containing the model
          type: string
          x-looker-nullable: true
        unlimited_db_connections:
          description: Is this model allowed to use all current and future connections
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    LookmlTest:
      example:
        query_url_params: query_url_params
        can:
          key: true
        file: file
        model_name: model_name
        line: 0
        name: name
        explore_name: explore_name
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        model_name:
          description: Name of model containing this test.
          readOnly: true
          type: string
          x-looker-nullable: false
        name:
          description: Name of this test.
          readOnly: true
          type: string
          x-looker-nullable: false
        explore_name:
          description: Name of the explore this test runs a query against
          readOnly: true
          type: string
          x-looker-nullable: false
        query_url_params:
          description: The url parameters that can be used to reproduce this test's
            query on an explore.
          readOnly: true
          type: string
          x-looker-nullable: false
        file:
          description: Name of the LookML file containing this test.
          readOnly: true
          type: string
          x-looker-nullable: false
        line:
          description: Line number of this test in LookML.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    LookmlTestResult:
      example:
        can:
          key: true
        assertions_count: 0
        model_name: model_name
        success: true
        warnings:
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        assertions_failed: 6
        test_name: test_name
        errors:
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        model_name:
          description: Name of model containing this test.
          readOnly: true
          type: string
          x-looker-nullable: false
        test_name:
          description: Name of this test.
          readOnly: true
          type: string
          x-looker-nullable: false
        assertions_count:
          description: Number of assertions in this test
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        assertions_failed:
          description: Number of assertions passed in this test
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        errors:
          description: A list of any errors encountered by the test.
          items:
            $ref: '#/components/schemas/ProjectError'
          readOnly: true
          type: array
          x-looker-nullable: true
        warnings:
          description: A list of any warnings encountered by the test.
          items:
            $ref: '#/components/schemas/ProjectError'
          readOnly: true
          type: array
          x-looker-nullable: true
        success:
          description: True if this test passsed without errors.
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Manifest:
      example:
        can:
          key: true
        imports:
        - can:
            key: true
          ref: ref
          name: name
          is_remote: true
          url: url
        - can:
            key: true
          ref: ref
          name: name
          is_remote: true
          url: url
        name: name
        localization_settings:
          can:
            key: true
          default_locale: default_locale
          localization_level: localization_level
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        name:
          description: Manifest project name
          readOnly: true
          type: string
          x-looker-nullable: true
        imports:
          description: Imports for a project
          items:
            $ref: '#/components/schemas/ImportedProject'
          readOnly: true
          type: array
          x-looker-nullable: true
        localization_settings:
          $ref: '#/components/schemas/LocalizationSettings'
      type: object
      x-looker-status: beta
    MergeQuery:
      example:
        can:
          key: true
        total: true
        vis_config:
          key: vis_config
        dynamic_fields: dynamic_fields
        result_maker_id: 0
        source_queries:
        - query_id: 6
          merge_fields:
          - source_field_name: source_field_name
            field_name: field_name
          - source_field_name: source_field_name
            field_name: field_name
          name: name
        - query_id: 6
          merge_fields:
          - source_field_name: source_field_name
            field_name: field_name
          - source_field_name: source_field_name
            field_name: field_name
          name: name
        id: id
        pivots:
        - pivots
        - pivots
        sorts:
        - sorts
        - sorts
        column_limit: column_limit
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        column_limit:
          description: Column Limit
          type: string
          x-looker-nullable: true
        dynamic_fields:
          description: Dynamic Fields
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        pivots:
          description: Pivots
          items:
            type: string
          type: array
          x-looker-nullable: true
        result_maker_id:
          description: Unique to get results
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        sorts:
          description: Sorts
          items:
            type: string
          type: array
          x-looker-nullable: true
        source_queries:
          description: Source Queries defining the results to be merged.
          items:
            $ref: '#/components/schemas/MergeQuerySourceQuery'
          type: array
          x-looker-nullable: true
        total:
          description: Total
          type: boolean
          x-looker-nullable: false
        vis_config:
          additionalProperties:
            type: string
          description: Visualization Config
          type: object
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    MergeQuerySourceQuery:
      example:
        query_id: 6
        merge_fields:
        - source_field_name: source_field_name
          field_name: field_name
        - source_field_name: source_field_name
          field_name: field_name
        name: name
      properties:
        merge_fields:
          description: An array defining which fields of the source query are mapped
            onto fields of the merge query
          items:
            $ref: '#/components/schemas/MergeFields'
          type: array
          x-looker-nullable: true
        name:
          description: Display name
          type: string
          x-looker-nullable: true
        query_id:
          description: Id of the query to merge
          format: int64
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    MergeFields:
      example:
        source_field_name: source_field_name
        field_name: field_name
      properties:
        field_name:
          description: Field name to map onto in the merged results
          type: string
          x-looker-nullable: true
        source_field_name:
          description: Field name from the source query
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ModelSet:
      example:
        can:
          key: true
        models:
        - models
        - models
        built_in: true
        name: name
        all_access: true
        id: 2
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        all_access:
          readOnly: true
          type: boolean
          x-looker-nullable: false
        built_in:
          readOnly: true
          type: boolean
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        models:
          items:
            type: string
          type: array
          x-looker-nullable: true
        name:
          description: Name of ModelSet
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    OIDCConfig:
      example:
        alternate_email_login_allowed: true
        default_new_user_group_ids:
        - 0
        - 0
        user_attributes:
        - name: name
          user_attributes:
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          required: true
        - name: name
          user_attributes:
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          required: true
        secret: secret
        enabled: true
        issuer: issuer
        authorization_endpoint: https://openapi-generator.tech
        groups_with_role_ids:
        - can:
            key: true
          looker_group_id: 2
          looker_group_name: looker_group_name
          name: name
          id: 5
          role_ids:
          - 7
          - 7
        - can:
            key: true
          looker_group_id: 2
          looker_group_name: looker_group_name
          name: name
          id: 5
          role_ids:
          - 7
          - 7
        test_slug: test_slug
        can:
          key: true
        default_new_user_groups:
        - can:
            key: true
          can_add_to_content_metadata: true
          user_count: 6
          include_by_default: true
          externally_managed: true
          name: name
          external_group_id: external_group_id
          contains_current_user: true
          id: 0
        - can:
            key: true
          can_add_to_content_metadata: true
          user_count: 6
          include_by_default: true
          externally_managed: true
          name: name
          external_group_id: external_group_id
          contains_current_user: true
          id: 0
        set_roles_from_groups: true
        allow_roles_from_normal_groups: true
        modified_at: 2000-01-23T04:56:07.000+00:00
        user_attribute_map_last_name: user_attribute_map_last_name
        groups_attribute: groups_attribute
        user_attribute_map_first_name: user_attribute_map_first_name
        token_endpoint: token_endpoint
        identifier: identifier
        audience: audience
        allow_direct_roles: true
        default_new_user_roles:
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        groups:
        - looker_group_id: 5
          looker_group_name: looker_group_name
          roles:
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          name: name
          id: 1
        - looker_group_id: 5
          looker_group_name: looker_group_name
          roles:
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          name: name
          id: 1
        user_attributes_with_ids:
        - user_attribute_ids:
          - 3
          - 3
          can:
            key: true
          name: name
          required: true
        - user_attribute_ids:
          - 3
          - 3
          can:
            key: true
          name: name
          required: true
        default_new_user_role_ids:
        - 6
        - 6
        new_user_migration_types: new_user_migration_types
        url: https://openapi-generator.tech
        auth_requires_role: true
        userinfo_endpoint: https://openapi-generator.tech
        user_attribute_map_email: user_attribute_map_email
        modified_by: 9
        scopes:
        - scopes
        - scopes
        allow_normal_group_membership: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        alternate_email_login_allowed:
          description: Allow alternate email-based login via '/login/email' for admins
            and for specified users with the 'login_special_email' permission. This
            option is useful as a fallback during ldap setup, if ldap config problems
            occur later, or if you need to support some users who are not in your
            ldap directory. Looker email/password logins are always disabled for regular
            users when ldap is enabled.
          type: boolean
          x-looker-nullable: false
        audience:
          description: OpenID Provider Audience
          type: string
          x-looker-nullable: true
        auth_requires_role:
          description: Users will not be allowed to login at all unless a role for
            them is found in OIDC if set to true
          type: boolean
          x-looker-nullable: false
        authorization_endpoint:
          description: OpenID Provider Authorization Url
          format: uri
          type: string
          x-looker-nullable: true
        default_new_user_group_ids:
          description: (Write-Only) Array of ids of groups that will be applied to
            new users the first time they login via OIDC
          items:
            format: int64
            type: integer
          type: array
          x-looker-write-only: true
          x-looker-nullable: true
        default_new_user_groups:
          description: (Read-only) Groups that will be applied to new users the first
            time they login via OIDC
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
          type: array
          x-looker-nullable: true
        default_new_user_role_ids:
          description: (Write-Only) Array of ids of roles that will be applied to
            new users the first time they login via OIDC
          items:
            format: int64
            type: integer
          type: array
          x-looker-write-only: true
          x-looker-nullable: true
        default_new_user_roles:
          description: (Read-only) Roles that will be applied to new users the first
            time they login via OIDC
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
          x-looker-nullable: true
        enabled:
          description: Enable/Disable OIDC authentication for the server
          type: boolean
          x-looker-nullable: false
        groups:
          description: (Read-only) Array of mappings between OIDC Groups and Looker
            Roles
          items:
            $ref: '#/components/schemas/OIDCGroupRead'
          readOnly: true
          type: array
          x-looker-nullable: true
        groups_attribute:
          description: Name of user record attributes used to indicate groups. Used
            when 'groups_finder_type' is set to 'grouped_attribute_values'
          type: string
          x-looker-nullable: true
        groups_with_role_ids:
          description: (Read/Write) Array of mappings between OIDC Groups and arrays
            of Looker Role ids
          items:
            $ref: '#/components/schemas/OIDCGroupWrite'
          type: array
          x-looker-nullable: true
        identifier:
          description: Relying Party Identifier (provided by OpenID Provider)
          type: string
          x-looker-nullable: true
        issuer:
          description: OpenID Provider Issuer
          type: string
          x-looker-nullable: true
        modified_at:
          description: When this config was last modified
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        modified_by:
          description: User id of user who last modified this config
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        new_user_migration_types:
          description: Merge first-time oidc login to existing user account by email
            addresses. When a user logs in for the first time via oidc this option
            will connect this user into their existing account by finding the account
            with a matching email address by testing the given types of credentials
            for existing users. Otherwise a new user account will be created for the
            user. This list (if provided) must be a comma separated list of string
            like 'email,ldap,google'
          type: string
          x-looker-nullable: true
        scopes:
          description: Array of scopes to request.
          items:
            type: string
          type: array
          x-looker-nullable: true
        secret:
          description: (Write-Only) Relying Party Secret (provided by OpenID Provider)
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        set_roles_from_groups:
          description: Set user roles in Looker based on groups from OIDC
          type: boolean
          x-looker-nullable: false
        test_slug:
          description: Slug to identify configurations that are created in order to
            run a OIDC config test
          readOnly: true
          type: string
          x-looker-nullable: true
        token_endpoint:
          description: OpenID Provider Token Url
          type: string
          x-looker-nullable: true
        user_attribute_map_email:
          description: Name of user record attributes used to indicate email address
            field
          type: string
          x-looker-nullable: true
        user_attribute_map_first_name:
          description: Name of user record attributes used to indicate first name
          type: string
          x-looker-nullable: true
        user_attribute_map_last_name:
          description: Name of user record attributes used to indicate last name
          type: string
          x-looker-nullable: true
        user_attributes:
          description: (Read-only) Array of mappings between OIDC User Attributes
            and Looker User Attributes
          items:
            $ref: '#/components/schemas/OIDCUserAttributeRead'
          readOnly: true
          type: array
          x-looker-nullable: true
        user_attributes_with_ids:
          description: (Read/Write) Array of mappings between OIDC User Attributes
            and arrays of Looker User Attribute ids
          items:
            $ref: '#/components/schemas/OIDCUserAttributeWrite'
          type: array
          x-looker-nullable: true
        userinfo_endpoint:
          description: OpenID Provider User Information Url
          format: uri
          type: string
          x-looker-nullable: true
        allow_normal_group_membership:
          description: Allow OIDC auth'd users to be members of non-reflected Looker
            groups. If 'false', user will be removed from non-reflected groups on
            login.
          type: boolean
          x-looker-nullable: false
        allow_roles_from_normal_groups:
          description: OIDC auth'd users will inherit roles from non-reflected Looker
            groups.
          type: boolean
          x-looker-nullable: false
        allow_direct_roles:
          description: Allows roles to be directly assigned to OIDC auth'd users.
          type: boolean
          x-looker-nullable: false
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    OIDCGroupRead:
      example:
        looker_group_id: 5
        looker_group_name: looker_group_name
        roles:
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        name: name
        id: 1
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        looker_group_id:
          description: Unique Id of group in Looker
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        looker_group_name:
          description: Name of group in Looker
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of group in OIDC
          readOnly: true
          type: string
          x-looker-nullable: true
        roles:
          description: Looker Roles
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    OIDCGroupWrite:
      example:
        can:
          key: true
        looker_group_id: 2
        looker_group_name: looker_group_name
        name: name
        id: 5
        role_ids:
        - 7
        - 7
      properties:
        id:
          description: Unique Id
          format: int64
          type: integer
          x-looker-nullable: true
        looker_group_id:
          description: Unique Id of group in Looker
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        looker_group_name:
          description: Name of group in Looker
          type: string
          x-looker-nullable: true
        name:
          description: Name of group in OIDC
          type: string
          x-looker-nullable: true
        role_ids:
          description: Looker Role Ids
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    OIDCUserAttributeRead:
      example:
        name: name
        user_attributes:
        - can:
            key: true
          is_system: true
          user_can_view: true
          value_is_hidden: true
          hidden_value_domain_whitelist: hidden_value_domain_whitelist
          name: name
          default_value: default_value
          id: 1
          label: label
          is_permanent: true
          type: type
          user_can_edit: true
        - can:
            key: true
          is_system: true
          user_can_view: true
          value_is_hidden: true
          hidden_value_domain_whitelist: hidden_value_domain_whitelist
          name: name
          default_value: default_value
          id: 1
          label: label
          is_permanent: true
          type: type
          user_can_edit: true
        required: true
      properties:
        name:
          description: Name of User Attribute in OIDC
          readOnly: true
          type: string
          x-looker-nullable: true
        required:
          description: Required to be in OIDC assertion for login to be allowed to
            succeed
          readOnly: true
          type: boolean
          x-looker-nullable: false
        user_attributes:
          description: Looker User Attributes
          items:
            $ref: '#/components/schemas/UserAttribute'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    OIDCUserAttributeWrite:
      example:
        user_attribute_ids:
        - 3
        - 3
        can:
          key: true
        name: name
        required: true
      properties:
        name:
          description: Name of User Attribute in OIDC
          type: string
          x-looker-nullable: true
        required:
          description: Required to be in OIDC assertion for login to be allowed to
            succeed
          type: boolean
          x-looker-nullable: false
        user_attribute_ids:
          description: Looker User Attribute Ids
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    PasswordConfig:
      example:
        can:
          key: true
        require_numeric: true
        min_length: 0
        require_special: true
        require_upperlower: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        min_length:
          description: Minimum number of characters required for a new password.  Must
            be between 7 and 100
          format: int64
          type: integer
          x-looker-nullable: true
        require_numeric:
          description: Require at least one numeric character
          type: boolean
          x-looker-nullable: false
        require_upperlower:
          description: Require at least one uppercase and one lowercase letter
          type: boolean
          x-looker-nullable: false
        require_special:
          description: Require at least one special character
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Permission:
      example:
        can:
          key: true
        parent: parent
        description: description
        permission: permission
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        permission:
          description: Permission symbol
          readOnly: true
          type: string
          x-looker-nullable: true
        parent:
          description: Dependency parent symbol
          readOnly: true
          type: string
          x-looker-nullable: true
        description:
          description: Description
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    PermissionSet:
      example:
        can:
          key: true
        permissions:
        - permissions
        - permissions
        built_in: true
        name: name
        all_access: true
        id: 5
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        all_access:
          readOnly: true
          type: boolean
          x-looker-nullable: false
        built_in:
          readOnly: true
          type: boolean
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        name:
          description: Name of PermissionSet
          type: string
          x-looker-nullable: true
        permissions:
          items:
            type: string
          type: array
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ProjectFile:
      example:
        can:
          key: true
        path: path
        extension: extension
        mime_type: mime_type
        editable: true
        id: id
        git_status:
          can:
            key: true
          revertable: true
          action: action
          text: text
          conflict: true
        title: title
        type: type
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: An opaque token uniquely identifying a file within a project.
            Avoid parsing or decomposing the text of this token. This token is stable
            within a Looker release but may change between Looker releases
          readOnly: true
          type: string
          x-looker-nullable: false
        path:
          description: Path, file name, and extension of the file relative to the
            project root directory
          readOnly: true
          type: string
          x-looker-nullable: true
        title:
          description: Display name
          readOnly: true
          type: string
          x-looker-nullable: true
        type:
          description: 'File type: model, view, etc'
          readOnly: true
          type: string
          x-looker-nullable: true
        extension:
          description: 'The extension of the file: .view.lkml, .model.lkml, etc'
          readOnly: true
          type: string
          x-looker-nullable: true
        mime_type:
          description: File mime type
          readOnly: true
          type: string
          x-looker-nullable: true
        editable:
          description: State of editability for the file.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        git_status:
          $ref: '#/components/schemas/GitStatus'
      type: object
      x-looker-status: beta
    Project:
      example:
        git_service_name: git_service_name
        is_example: true
        unset_deploy_secret: true
        pull_request_mode: pull_request_mode
        allow_warnings: true
        git_application_server_http_port: 0
        git_remote_url: git_remote_url
        uses_git: true
        git_password_user_attribute: git_password_user_attribute
        can:
          key: true
        git_application_server_http_scheme: git_application_server_http_scheme
        validation_required: true
        git_password: git_password
        name: name
        git_release_mgmt_enabled: true
        id: id
        git_username_user_attribute: git_username_user_attribute
        deploy_secret: deploy_secret
        git_username: git_username
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Project Id
          readOnly: true
          type: string
          x-looker-nullable: false
        name:
          description: Project display name
          type: string
          x-looker-nullable: false
        uses_git:
          description: If true the project is configured with a git repository
          readOnly: true
          type: boolean
          x-looker-nullable: false
        git_remote_url:
          description: Git remote repository url
          type: string
          x-looker-nullable: true
        git_username:
          description: Git username for HTTPS authentication. (For production only,
            if using user attributes.)
          type: string
          x-looker-nullable: true
        git_password:
          description: (Write-Only) Git password for HTTPS authentication. (For production
            only, if using user attributes.)
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        git_username_user_attribute:
          description: User attribute name for username in per-user HTTPS authentication.
          type: string
          x-looker-nullable: true
        git_password_user_attribute:
          description: User attribute name for password in per-user HTTPS authentication.
          type: string
          x-looker-nullable: true
        git_service_name:
          description: Name of the git service provider
          type: string
          x-looker-nullable: true
        git_application_server_http_port:
          description: Port that HTTP(S) application server is running on (for PRs,
            file browsing, etc.)
          format: int64
          type: integer
          x-looker-nullable: true
        git_application_server_http_scheme:
          description: 'Scheme that is running on application server (for PRs, file
            browsing, etc.) Valid values are: "http", "https".'
          type: string
          x-looker-nullable: true
          x-looker-values:
          - http
          - https
        deploy_secret:
          description: (Write-Only) Optional secret token with which to authenticate
            requests to the webhook deploy endpoint. If not set, endpoint is unauthenticated.
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        unset_deploy_secret:
          description: (Write-Only) When true, unsets the deploy secret to allow unauthenticated
            access to the webhook deploy endpoint.
          type: boolean
          x-looker-write-only: true
          x-looker-nullable: false
        pull_request_mode:
          description: 'The git pull request policy for this project. Valid values
            are: "off", "links", "recommended", "required".'
          type: string
          x-looker-nullable: false
          x-looker-values:
          - off
          - links
          - recommended
          - required
        validation_required:
          description: 'Validation policy: If true, the project must pass validation
            checks before project changes can be committed to the git repository'
          type: boolean
          x-looker-nullable: false
        git_release_mgmt_enabled:
          description: If true, advanced git release management is enabled for this
            project
          type: boolean
          x-looker-nullable: false
        allow_warnings:
          description: 'Validation policy: If true, the project can be committed with
            warnings when `validation_required` is true. (`allow_warnings` does nothing
            if `validation_required` is false).'
          type: boolean
          x-looker-nullable: false
        is_example:
          description: If true the project is an example project and cannot be modified
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ProjectError:
      example:
        severity: severity
        file_path: file_path
        code: code
        help_url: help_url
        explore: explore
        kind: kind
        line_number: 0
        sanitized_message: sanitized_message
        model_id: model_id
        message: message
        params:
          key: params
        field_name: field_name
      properties:
        code:
          description: A stable token that uniquely identifies this class of error,
            ignoring parameter values. Error message text may vary due to parameters
            or localization, but error codes do not. For example, a "File not found"
            error will have the same error code regardless of the filename in question
            or the user's display language
          readOnly: true
          type: string
          x-looker-nullable: true
        severity:
          description: 'Severity: fatal, error, warning, info, success'
          readOnly: true
          type: string
          x-looker-nullable: true
        kind:
          description: 'Error classification: syntax, deprecation, model_configuration,
            etc'
          readOnly: true
          type: string
          x-looker-nullable: true
        message:
          description: Error message which may contain information such as dashboard
            or model names that may be considered sensitive in some use cases. Avoid
            storing or sending this message outside of Looker
          readOnly: true
          type: string
          x-looker-nullable: true
        field_name:
          description: The field associated with this error
          readOnly: true
          type: string
          x-looker-nullable: true
        file_path:
          description: Name of the file containing this error
          readOnly: true
          type: string
          x-looker-nullable: true
        line_number:
          description: Line number in the file of this error
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        model_id:
          description: The model associated with this error
          readOnly: true
          type: string
          x-looker-nullable: true
        explore:
          description: The explore associated with this error
          readOnly: true
          type: string
          x-looker-nullable: true
        help_url:
          description: A link to Looker documentation about this error
          readOnly: true
          type: string
          x-looker-nullable: true
        params:
          additionalProperties:
            type: string
          description: Error parameters
          readOnly: true
          type: object
          x-looker-nullable: true
        sanitized_message:
          description: A version of the error message that does not contain potentially
            sensitive information. Suitable for situations in which messages are stored
            or sent to consumers outside of Looker, such as external logs. Sanitized
            messages will display "(?)" where sensitive information would appear in
            the corresponding non-sanitized message
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ModelsNotValidated:
      example:
        project_file_id: project_file_id
        name: name
      properties:
        name:
          description: Model name
          readOnly: true
          type: string
          x-looker-nullable: true
        project_file_id:
          description: Project file
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ProjectValidation:
      example:
        project_digest: project_digest
        models_not_validated:
        - project_file_id: project_file_id
          name: name
        - project_file_id: project_file_id
          name: name
        errors:
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        computation_time: 0.8008282
      properties:
        errors:
          description: A list of project errors
          items:
            $ref: '#/components/schemas/ProjectError'
          readOnly: true
          type: array
          x-looker-nullable: true
        project_digest:
          description: A hash value computed from the project's current state
          readOnly: true
          type: string
          x-looker-nullable: true
        models_not_validated:
          description: A list of models which were not fully validated
          items:
            $ref: '#/components/schemas/ModelsNotValidated'
          readOnly: true
          type: array
          x-looker-nullable: true
        computation_time:
          description: Duration of project validation in seconds
          format: float
          readOnly: true
          type: number
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ProjectValidationCache:
      example:
        stale: true
        project_digest: project_digest
        models_not_validated:
        - project_file_id: project_file_id
          name: name
        - project_file_id: project_file_id
          name: name
        errors:
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        - severity: severity
          file_path: file_path
          code: code
          help_url: help_url
          explore: explore
          kind: kind
          line_number: 0
          sanitized_message: sanitized_message
          model_id: model_id
          message: message
          params:
            key: params
          field_name: field_name
        computation_time: 6.0274563
      properties:
        errors:
          description: A list of project errors
          items:
            $ref: '#/components/schemas/ProjectError'
          readOnly: true
          type: array
          x-looker-nullable: true
        project_digest:
          description: A hash value computed from the project's current state
          readOnly: true
          type: string
          x-looker-nullable: true
        models_not_validated:
          description: A list of models which were not fully validated
          items:
            $ref: '#/components/schemas/ModelsNotValidated'
          readOnly: true
          type: array
          x-looker-nullable: true
        computation_time:
          description: Duration of project validation in seconds
          format: float
          readOnly: true
          type: number
          x-looker-nullable: true
        stale:
          description: If true, the cached project validation results are no longer
            accurate because the project has changed since the cached results were
            calculated
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ProjectWorkspace:
      example:
        workspace_id: workspace_id
        can:
          key: true
        project_id: project_id
        dependency_status: dependency_status
        git_head: git_head
        git_branch:
          owner_name: owner_name
          commit_at: 1
          is_remote: true
          is_production: true
          personal: true
          remote: remote
          error: error
          message: message
          remote_ref: remote_ref
          can:
            key: true
          ref: ref
          ahead_count: 0
          readonly: true
          remote_name: remote_name
          name: name
          is_local: true
          behind_count: 6
        lookml_type: lookml_type
        git_status: git_status
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        project_id:
          description: The id of the project
          readOnly: true
          type: string
          x-looker-nullable: true
        workspace_id:
          description: The id of the local workspace containing the project files
          readOnly: true
          type: string
          x-looker-nullable: true
        git_status:
          description: The status of the local git directory
          readOnly: true
          type: string
          x-looker-nullable: true
        git_head:
          description: Git head revision name
          readOnly: true
          type: string
          x-looker-nullable: true
        dependency_status:
          description: 'Status of the dependencies in your project. Valid values are:
            "lock_optional", "lock_required", "lock_error", "install_none".'
          readOnly: true
          type: string
          x-looker-nullable: true
          x-looker-values:
          - lock_optional
          - lock_required
          - lock_error
          - install_none
        git_branch:
          $ref: '#/components/schemas/GitBranch'
        lookml_type:
          description: The lookml syntax used by all files in this project
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    Query:
      example:
        query_timezone: query_timezone
        vis_config:
          key: vis_config
        filter_expression: filter_expression
        has_table_calculations: true
        row_total: row_total
        expanded_share_url: expanded_share_url
        client_id: client_id
        can:
          key: true
        view: view
        total: true
        visible_ui_sections: visible_ui_sections
        dynamic_fields: dynamic_fields
        limit: limit
        model: model
        id: 6
        sorts:
        - sorts
        - sorts
        slug: slug
        filter_config:
          key: filter_config
        subtotals:
        - subtotals
        - subtotals
        fill_fields:
        - fill_fields
        - fill_fields
        runtime: 1.4658129805029452
        filters:
          key: filters
        pivots:
        - pivots
        - pivots
        url: url
        share_url: share_url
        fields:
        - fields
        - fields
        column_limit: column_limit
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        model:
          description: Model
          type: string
          x-looker-nullable: false
        view:
          description: Explore Name
          type: string
          x-looker-nullable: false
        fields:
          description: Fields
          items:
            type: string
          type: array
          x-looker-nullable: true
        pivots:
          description: Pivots
          items:
            type: string
          type: array
          x-looker-nullable: true
        fill_fields:
          description: Fill Fields
          items:
            type: string
          type: array
          x-looker-nullable: true
        filters:
          additionalProperties:
            type: string
          description: Filters
          type: object
          x-looker-nullable: true
        filter_expression:
          description: Filter Expression
          type: string
          x-looker-nullable: true
        sorts:
          description: Sorting for the query results. Use the format `["view.field",
            ...]` to sort on fields in ascending order. Use the format `["view.field
            desc", ...]` to sort on fields in descending order. Use `["__UNSORTED__"]`
            (2 underscores before and after) to disable sorting entirely. Empty sorts
            `[]` will trigger a default sort.
          items:
            type: string
          type: array
          x-looker-nullable: true
        limit:
          description: Limit
          type: string
          x-looker-nullable: true
        column_limit:
          description: Column Limit
          type: string
          x-looker-nullable: true
        total:
          description: Total
          type: boolean
          x-looker-nullable: true
        row_total:
          description: Raw Total
          type: string
          x-looker-nullable: true
        subtotals:
          description: Fields on which to run subtotals
          items:
            type: string
          type: array
          x-looker-nullable: true
        vis_config:
          additionalProperties:
            format: any
            type: string
          description: Visualization configuration properties. These properties are
            typically opaque and differ based on the type of visualization used. There
            is no specified set of allowed keys. The values can be any type supported
            by JSON. A "type" key with a string value is often present, and is used
            by Looker to determine which visualization to present. Visualizations
            ignore unknown vis_config properties.
          type: object
          x-looker-nullable: true
        filter_config:
          additionalProperties:
            format: any
            type: string
          description: The filter_config represents the state of the filter UI on
            the explore page for a given query. When running a query via the Looker
            UI, this parameter takes precedence over "filters". When creating a query
            or modifying an existing query, "filter_config" should be set to null.
            Setting it to any other value could cause unexpected filtering behavior.
            The format should be considered opaque.
          type: object
          x-looker-nullable: true
        visible_ui_sections:
          description: Visible UI Sections
          type: string
          x-looker-nullable: true
        slug:
          description: Slug
          readOnly: true
          type: string
          x-looker-nullable: true
        dynamic_fields:
          description: Dynamic Fields
          type: string
          x-looker-nullable: true
        client_id:
          description: 'Client Id: used to generate shortened explore URLs. If set
            by client, must be a unique 22 character alphanumeric string. Otherwise
            one will be generated.'
          type: string
          x-looker-nullable: true
        share_url:
          description: Share Url
          readOnly: true
          type: string
          x-looker-nullable: true
        expanded_share_url:
          description: Expanded Share Url
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Expanded Url
          readOnly: true
          type: string
          x-looker-nullable: true
        query_timezone:
          description: Query Timezone
          type: string
          x-looker-nullable: true
        has_table_calculations:
          description: Has Table Calculations
          readOnly: true
          type: boolean
          x-looker-nullable: false
        runtime:
          description: (DEPRECATED) Runtime (Deprecated)
          format: double
          type: number
          x-looker-nullable: true
          x-looker-deprecated: true
      required:
      - model
      - view
      type: object
      x-looker-status: stable
    CreateQueryTask:
      example:
        can:
          key: true
        deferred: true
        look_id: 6
        query_id: 0
        result_format: result_format
        source: source
        dashboard_id: dashboard_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        query_id:
          description: Id of query to run
          format: int64
          type: integer
          x-looker-nullable: true
        result_format:
          description: 'Desired async query result format. Valid values are: "inline_json",
            "json", "json_detail", "json_fe", "csv", "html", "md", "txt", "xlsx",
            "gsxml".'
          type: string
          x-looker-nullable: true
          x-looker-values:
          - inline_json
          - json
          - json_detail
          - json_fe
          - csv
          - html
          - md
          - txt
          - xlsx
          - gsxml
        source:
          description: Source of query task
          type: string
          x-looker-nullable: true
        deferred:
          description: Create the task but defer execution
          type: boolean
          x-looker-nullable: false
        look_id:
          description: Id of look associated with query.
          format: int64
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of dashboard associated with query.
          type: string
          x-looker-nullable: true
      required:
      - query_id
      - result_format
      type: object
      x-looker-status: beta
    QueryTask:
      example:
        cache: true
        look_id: 5
        query_id: 0
        query:
          query_timezone: query_timezone
          vis_config:
            key: vis_config
          filter_expression: filter_expression
          has_table_calculations: true
          row_total: row_total
          expanded_share_url: expanded_share_url
          client_id: client_id
          can:
            key: true
          view: view
          total: true
          visible_ui_sections: visible_ui_sections
          dynamic_fields: dynamic_fields
          limit: limit
          model: model
          id: 6
          sorts:
          - sorts
          - sorts
          slug: slug
          filter_config:
            key: filter_config
          subtotals:
          - subtotals
          - subtotals
          fill_fields:
          - fill_fields
          - fill_fields
          runtime: 1.4658129805029452
          filters:
            key: filters
          pivots:
          - pivots
          - pivots
          url: url
          share_url: share_url
          fields:
          - fields
          - fields
          column_limit: column_limit
        cache_key: cache_key
        runtime: 5.962134
        result_format: result_format
        source: source
        force_production: true
        path_prefix: path_prefix
        cache_only: true
        can:
          key: true
        generate_links: true
        server_table_calcs: true
        id: id
        rebuild_pdts: true
        result_source: result_source
        status: status
        dashboard_id: dashboard_id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        query_id:
          description: Id of query
          format: int64
          type: integer
          x-looker-nullable: true
        query:
          $ref: '#/components/schemas/Query'
        generate_links:
          description: whether or not to generate links in the query response.
          type: boolean
          x-looker-nullable: false
        force_production:
          description: Use production models to run query (even is user is in dev
            mode).
          type: boolean
          x-looker-nullable: false
        path_prefix:
          description: Prefix to use for drill links.
          type: string
          x-looker-nullable: true
        cache:
          description: Whether or not to use the cache
          type: boolean
          x-looker-nullable: false
        server_table_calcs:
          description: Whether or not to run table calculations on the server
          type: boolean
          x-looker-nullable: false
        cache_only:
          description: Retrieve any results from cache even if the results have expired.
          type: boolean
          x-looker-nullable: false
        cache_key:
          description: cache key used to cache query.
          readOnly: true
          type: string
          x-looker-nullable: true
        status:
          description: Status of query task.
          type: string
          x-looker-nullable: true
        source:
          description: Source of query task.
          type: string
          x-looker-nullable: true
        runtime:
          description: Runtime of prior queries.
          format: float
          readOnly: true
          type: number
          x-looker-nullable: true
        rebuild_pdts:
          description: Rebuild PDTS used in query.
          type: boolean
          x-looker-nullable: false
        result_source:
          description: Source of the results of the query.
          readOnly: true
          type: string
          x-looker-nullable: true
        look_id:
          description: Id of look associated with query.
          format: int64
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of dashboard associated with query.
          type: string
          x-looker-nullable: true
        result_format:
          description: The data format of the query results.
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    RenderTask:
      example:
        finalized_at: finalized_at
        dashboard_filters: dashboard_filters
        look_id: 1
        query_id: 5
        created_at: created_at
        runtime: 7.061401241503109
        result_format: result_format
        query_runtime: 5.637376656633329
        status_detail: status_detail
        lookml_dashboard_id: lookml_dashboard_id
        can:
          key: true
        dashboard_style: dashboard_style
        user_id: 9
        width: 3
        id: id
        render_runtime: 2.3021358869347655
        dashboard_id: 0
        height: 6
        status: status
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        created_at:
          description: Date/Time render task was created
          readOnly: true
          type: string
          x-looker-nullable: true
        dashboard_filters:
          description: Filter values to apply to the dashboard queries, in URL query
            format
          readOnly: true
          type: string
          x-looker-nullable: true
        dashboard_id:
          description: Id of dashboard to render
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        dashboard_style:
          description: 'Dashboard layout style: single_column or tiled'
          readOnly: true
          type: string
          x-looker-nullable: true
        finalized_at:
          description: Date/Time render task was completed
          readOnly: true
          type: string
          x-looker-nullable: true
        height:
          description: Output height in pixels. Flowed layouts may ignore this value.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        id:
          description: Id of this render task
          readOnly: true
          type: string
          x-looker-nullable: false
        look_id:
          description: Id of look to render
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        lookml_dashboard_id:
          description: Id of lookml dashboard to render
          readOnly: true
          type: string
          x-looker-nullable: true
        query_id:
          description: Id of query to render
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        query_runtime:
          description: Number of seconds elapsed running queries
          format: double
          readOnly: true
          type: number
          x-looker-nullable: true
        render_runtime:
          description: Number of seconds elapsed rendering data
          format: double
          readOnly: true
          type: number
          x-looker-nullable: true
        result_format:
          description: 'Output format: pdf, png, or jpg'
          readOnly: true
          type: string
          x-looker-nullable: true
        runtime:
          description: Total seconds elapsed for render task
          format: double
          readOnly: true
          type: number
          x-looker-nullable: true
        status:
          description: 'Render task status: enqueued_for_query, querying, enqueued_for_render,
            rendering, success, failure'
          readOnly: true
          type: string
          x-looker-nullable: true
        status_detail:
          description: Additional information about the current status
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: The user account permissions in which the render task will
            execute
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        width:
          description: Output width in pixels
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    CreateDashboardRenderTask:
      example:
        dashboard_filters: dashboard_filters
        dashboard_style: dashboard_style
      properties:
        dashboard_filters:
          description: Filter values to apply to the dashboard queries, in URL query
            format
          type: string
          x-looker-nullable: true
        dashboard_style:
          description: 'Dashboard layout style: single_column or tiled'
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    RepositoryCredential:
      example:
        remote_url: remote_url
        ssh_public_key: ssh_public_key
        can:
          key: true
        git_password: git_password
        id: id
        is_configured: true
        root_project_id: root_project_id
        git_username: git_username
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          readOnly: true
          type: string
          x-looker-nullable: false
        root_project_id:
          description: Root project Id
          readOnly: true
          type: string
          x-looker-nullable: false
        remote_url:
          description: Git remote repository url
          readOnly: true
          type: string
          x-looker-nullable: false
        git_username:
          description: Git username for HTTPS authentication.
          type: string
          x-looker-nullable: true
        git_password:
          description: (Write-Only) Git password for HTTPS authentication.
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        ssh_public_key:
          description: Public deploy key for SSH authentication.
          type: string
          x-looker-nullable: true
        is_configured:
          description: Whether the credentials have been configured for the Git Repository.
          readOnly: true
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    ResultMakerFilterablesListen:
      example:
        field: field
        dashboard_filter_name: dashboard_filter_name
      properties:
        dashboard_filter_name:
          description: The name of a dashboard filter to listen to.
          type: string
          x-looker-nullable: true
        field:
          description: The name of the field in the filterable to filter with the
            value of the dashboard filter.
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ResultMakerFilterables:
      example:
        view: view
        name: name
        model: model
        listen:
        - field: field
          dashboard_filter_name: dashboard_filter_name
        - field: field
          dashboard_filter_name: dashboard_filter_name
      properties:
        model:
          description: The model this filterable comes from (used for field suggestions).
          readOnly: true
          type: string
          x-looker-nullable: true
        view:
          description: The view this filterable comes from (used for field suggestions).
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: The name of the filterable thing (Query or Merged Results).
          readOnly: true
          type: string
          x-looker-nullable: true
        listen:
          description: 'array of dashboard_filter_name: and field: objects.'
          items:
            $ref: '#/components/schemas/ResultMakerFilterablesListen'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ResultMakerWithIdVisConfigAndDynamicFields:
      example:
        merge_result_id: merge_result_id
        total: true
        vis_config:
          key: vis_config
        query_id: 1
        sql_query_id: sql_query_id
        dynamic_fields: dynamic_fields
        query:
          query_timezone: query_timezone
          vis_config:
            key: vis_config
          filter_expression: filter_expression
          has_table_calculations: true
          row_total: row_total
          expanded_share_url: expanded_share_url
          client_id: client_id
          can:
            key: true
          view: view
          total: true
          visible_ui_sections: visible_ui_sections
          dynamic_fields: dynamic_fields
          limit: limit
          model: model
          id: 6
          sorts:
          - sorts
          - sorts
          slug: slug
          filter_config:
            key: filter_config
          subtotals:
          - subtotals
          - subtotals
          fill_fields:
          - fill_fields
          - fill_fields
          runtime: 1.4658129805029452
          filters:
            key: filters
          pivots:
          - pivots
          - pivots
          url: url
          share_url: share_url
          fields:
          - fields
          - fields
          column_limit: column_limit
        filterables:
        - view: view
          name: name
          model: model
          listen:
          - field: field
            dashboard_filter_name: dashboard_filter_name
          - field: field
            dashboard_filter_name: dashboard_filter_name
        - view: view
          name: name
          model: model
          listen:
          - field: field
            dashboard_filter_name: dashboard_filter_name
          - field: field
            dashboard_filter_name: dashboard_filter_name
        id: 7
        sorts:
        - sorts
        - sorts
      properties:
        id:
          description: Unique Id.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        dynamic_fields:
          description: JSON string of dynamic field information.
          readOnly: true
          type: string
          x-looker-nullable: true
        filterables:
          description: array of items that can be filtered and information about them.
          items:
            $ref: '#/components/schemas/ResultMakerFilterables'
          readOnly: true
          type: array
          x-looker-nullable: true
        sorts:
          description: Sorts of the constituent Look, Query, or Merge Query
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        merge_result_id:
          description: ID of merge result if this is a merge_result.
          readOnly: true
          type: string
          x-looker-nullable: true
        total:
          description: Total of the constituent Look, Query, or Merge Query
          readOnly: true
          type: boolean
          x-looker-nullable: false
        query_id:
          description: ID of query if this is a query.
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        sql_query_id:
          description: ID of SQL Query if this is a SQL Runner Query
          readOnly: true
          type: string
          x-looker-nullable: true
        query:
          $ref: '#/components/schemas/Query'
        vis_config:
          additionalProperties:
            type: string
          description: Vis config of the constituent Query, or Merge Query.
          readOnly: true
          type: object
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    Role:
      example:
        permission_set_id: 5
        model_set_id: 7
        can:
          key: true
        model_set:
          can:
            key: true
          models:
          - models
          - models
          built_in: true
          name: name
          all_access: true
          id: 2
          url: https://openapi-generator.tech
        users_url: https://openapi-generator.tech
        name: name
        id: 1
        url: https://openapi-generator.tech
        permission_set:
          can:
            key: true
          permissions:
          - permissions
          - permissions
          built_in: true
          name: name
          all_access: true
          id: 5
          url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        name:
          description: Name of Role
          type: string
          x-looker-nullable: true
        permission_set:
          $ref: '#/components/schemas/PermissionSet'
        permission_set_id:
          description: (Write-Only) Id of permission set
          format: int64
          type: integer
          x-looker-write-only: true
          x-looker-nullable: true
        model_set:
          $ref: '#/components/schemas/ModelSet'
        model_set_id:
          description: (Write-Only) Id of model set
          format: int64
          type: integer
          x-looker-write-only: true
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        users_url:
          description: Link to get list of users with this role
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    RunningQueries:
      example:
        query_task_id: query_task_id
        dialect: dialect
        query_id: query_id
        query:
          query_timezone: query_timezone
          vis_config:
            key: vis_config
          filter_expression: filter_expression
          has_table_calculations: true
          row_total: row_total
          expanded_share_url: expanded_share_url
          client_id: client_id
          can:
            key: true
          view: view
          total: true
          visible_ui_sections: visible_ui_sections
          dynamic_fields: dynamic_fields
          limit: limit
          model: model
          id: 6
          sorts:
          - sorts
          - sorts
          slug: slug
          filter_config:
            key: filter_config
          subtotals:
          - subtotals
          - subtotals
          fill_fields:
          - fill_fields
          - fill_fields
          runtime: 1.4658129805029452
          filters:
            key: filters
          pivots:
          - pivots
          - pivots
          url: url
          share_url: share_url
          fields:
          - fields
          - fields
          column_limit: column_limit
        cache_key: cache_key
        created_at: created_at
        runtime: 7.061401241503109
        source: source
        message: message
        look:
          can:
            key: true
          content_metadata_id: 2
          id: 7
          title: title
        sql: sql
        connection_name: connection_name
        can:
          key: true
        completed_at: completed_at
        connection_id: connection_id
        sql_query:
          last_run_at: last_run_at
          creator:
            can:
              key: true
            avatar_url: https://openapi-generator.tech
            last_name: last_name
            id: 6
            display_name: display_name
            first_name: first_name
            url: https://openapi-generator.tech
          vis_config:
            key: vis_config
          plaintext: true
          explore_url: explore_url
          run_count: 5
          browser_limit: 5
          sql: sql
          can:
            key: true
          last_runtime: 1.4658129
          model_name: model_name
          result_maker_id: 2
          connection:
            can:
              key: true
            dialect:
              persistent_table_distkey: persistent_table_distkey
              supports_cost_estimate: true
              connection_tests:
              - connection_tests
              - connection_tests
              persistent_table_indexes: persistent_table_indexes
              supports_inducer: true
              supports_persistent_derived_tables: true
              label: label
              supports_streaming: true
              automatically_run_sql_runner_snippets: true
              name: name
              has_ssl_support: true
              supports_multiple_databases: true
              persistent_table_sortkeys: persistent_table_sortkeys
            snippets:
            - can:
                key: true
              name: name
              label: label
              sql: sql
            - can:
                key: true
              name: name
              label: label
              sql: sql
            pdts_enabled: true
            name: name
          slug: slug
        id: 0
        user:
          can:
            key: true
          avatar_url: https://openapi-generator.tech
          last_name: last_name
          id: 6
          display_name: display_name
          first_name: first_name
          url: https://openapi-generator.tech
        slug: slug
        node_id: node_id
        status: status
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        user:
          $ref: '#/components/schemas/UserPublic'
        query:
          $ref: '#/components/schemas/Query'
        sql_query:
          $ref: '#/components/schemas/SqlQuery'
        look:
          $ref: '#/components/schemas/LookBasic'
        created_at:
          description: Date/Time Query was initiated
          readOnly: true
          type: string
          x-looker-nullable: true
        completed_at:
          description: Date/Time Query was completed
          readOnly: true
          type: string
          x-looker-nullable: true
        query_id:
          description: Query Id
          readOnly: true
          type: string
          x-looker-nullable: true
        source:
          description: Source (look, dashboard, queryrunner, explore, etc.)
          readOnly: true
          type: string
          x-looker-nullable: true
        node_id:
          description: Node Id
          readOnly: true
          type: string
          x-looker-nullable: true
        slug:
          description: Slug
          readOnly: true
          type: string
          x-looker-nullable: true
        query_task_id:
          description: ID of a Query Task
          readOnly: true
          type: string
          x-looker-nullable: true
        cache_key:
          description: Cache Key
          readOnly: true
          type: string
          x-looker-nullable: true
        connection_name:
          description: Connection
          readOnly: true
          type: string
          x-looker-nullable: true
        dialect:
          description: Dialect
          readOnly: true
          type: string
          x-looker-nullable: true
        connection_id:
          description: Connection ID
          readOnly: true
          type: string
          x-looker-nullable: true
        message:
          description: Additional Information(Error message or verbose status)
          readOnly: true
          type: string
          x-looker-nullable: true
        status:
          description: Status description
          readOnly: true
          type: string
          x-looker-nullable: true
        runtime:
          description: Number of seconds elapsed running the Query
          format: double
          readOnly: true
          type: number
          x-looker-nullable: true
        sql:
          description: SQL text of the query as run
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    SamlConfig:
      example:
        idp_issuer: idp_issuer
        groups_member_value: groups_member_value
        bypass_login_page: true
        alternate_email_login_allowed: true
        default_new_user_group_ids:
        - 1
        - 1
        user_attributes:
        - name: name
          user_attributes:
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          required: true
          url: https://openapi-generator.tech
        - name: name
          user_attributes:
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          - can:
              key: true
            is_system: true
            user_can_view: true
            value_is_hidden: true
            hidden_value_domain_whitelist: hidden_value_domain_whitelist
            name: name
            default_value: default_value
            id: 1
            label: label
            is_permanent: true
            type: type
            user_can_edit: true
          required: true
          url: https://openapi-generator.tech
        enabled: true
        idp_url: idp_url
        groups_with_role_ids:
        - looker_group_id: 7
          looker_group_name: looker_group_name
          name: name
          id: 2
          role_ids:
          - 9
          - 9
          url: https://openapi-generator.tech
        - looker_group_id: 7
          looker_group_name: looker_group_name
          name: name
          id: 2
          role_ids:
          - 9
          - 9
          url: https://openapi-generator.tech
        test_slug: test_slug
        can:
          key: true
        groups_finder_type: groups_finder_type
        default_new_user_groups:
        - can:
            key: true
          can_add_to_content_metadata: true
          user_count: 6
          include_by_default: true
          externally_managed: true
          name: name
          external_group_id: external_group_id
          contains_current_user: true
          id: 0
        - can:
            key: true
          can_add_to_content_metadata: true
          user_count: 6
          include_by_default: true
          externally_managed: true
          name: name
          external_group_id: external_group_id
          contains_current_user: true
          id: 0
        set_roles_from_groups: true
        allow_roles_from_normal_groups: true
        user_attribute_map_last_name: user_attribute_map_last_name
        modified_at: modified_at
        user_attribute_map_first_name: user_attribute_map_first_name
        groups_attribute: groups_attribute
        allow_direct_roles: true
        default_new_user_roles:
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        groups:
        - looker_group_id: 5
          looker_group_name: looker_group_name
          roles:
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          name: name
          id: 5
          url: https://openapi-generator.tech
        - looker_group_id: 5
          looker_group_name: looker_group_name
          roles:
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          - permission_set_id: 5
            model_set_id: 7
            can:
              key: true
            model_set:
              can:
                key: true
              models:
              - models
              - models
              built_in: true
              name: name
              all_access: true
              id: 2
              url: https://openapi-generator.tech
            users_url: https://openapi-generator.tech
            name: name
            id: 1
            url: https://openapi-generator.tech
            permission_set:
              can:
                key: true
              permissions:
              - permissions
              - permissions
              built_in: true
              name: name
              all_access: true
              id: 5
              url: https://openapi-generator.tech
          name: name
          id: 5
          url: https://openapi-generator.tech
        user_attributes_with_ids:
        - user_attribute_ids:
          - 3
          - 3
          name: name
          required: true
          url: https://openapi-generator.tech
        - user_attribute_ids:
          - 3
          - 3
          name: name
          required: true
          url: https://openapi-generator.tech
        default_new_user_role_ids:
        - 6
        - 6
        new_user_migration_types: new_user_migration_types
        idp_audience: idp_audience
        url: https://openapi-generator.tech
        auth_requires_role: true
        user_attribute_map_email: user_attribute_map_email
        modified_by: modified_by
        allowed_clock_drift: 0
        idp_cert: idp_cert
        allow_normal_group_membership: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        enabled:
          description: Enable/Disable Saml authentication for the server
          type: boolean
          x-looker-nullable: false
        idp_cert:
          description: Identity Provider Certificate (provided by IdP)
          type: string
          x-looker-nullable: true
        idp_url:
          description: Identity Provider Url (provided by IdP)
          type: string
          x-looker-nullable: true
        idp_issuer:
          description: Identity Provider Issuer (provided by IdP)
          type: string
          x-looker-nullable: true
        idp_audience:
          description: Identity Provider Audience (set in IdP config). Optional in
            Looker. Set this only if you want Looker to validate the audience value
            returned by the IdP.
          type: string
          x-looker-nullable: true
        allowed_clock_drift:
          description: Count of seconds of clock drift to allow when validating timestamps
            of assertions.
          format: int64
          type: integer
          x-looker-nullable: true
        user_attribute_map_email:
          description: Name of user record attributes used to indicate email address
            field
          type: string
          x-looker-nullable: true
        user_attribute_map_first_name:
          description: Name of user record attributes used to indicate first name
          type: string
          x-looker-nullable: true
        user_attribute_map_last_name:
          description: Name of user record attributes used to indicate last name
          type: string
          x-looker-nullable: true
        new_user_migration_types:
          description: Merge first-time saml login to existing user account by email
            addresses. When a user logs in for the first time via saml this option
            will connect this user into their existing account by finding the account
            with a matching email address by testing the given types of credentials
            for existing users. Otherwise a new user account will be created for the
            user. This list (if provided) must be a comma separated list of string
            like 'email,ldap,google'
          type: string
          x-looker-nullable: true
        alternate_email_login_allowed:
          description: Allow alternate email-based login via '/login/email' for admins
            and for specified users with the 'login_special_email' permission. This
            option is useful as a fallback during ldap setup, if ldap config problems
            occur later, or if you need to support some users who are not in your
            ldap directory. Looker email/password logins are always disabled for regular
            users when ldap is enabled.
          type: boolean
          x-looker-nullable: false
        test_slug:
          description: Slug to identify configurations that are created in order to
            run a Saml config test
          readOnly: true
          type: string
          x-looker-nullable: true
        modified_at:
          description: When this config was last modified
          readOnly: true
          type: string
          x-looker-nullable: true
        modified_by:
          description: User id of user who last modified this config
          readOnly: true
          type: string
          x-looker-nullable: true
        default_new_user_roles:
          description: (Read-only) Roles that will be applied to new users the first
            time they login via Saml
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
          x-looker-nullable: true
        default_new_user_groups:
          description: (Read-only) Groups that will be applied to new users the first
            time they login via Saml
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
          type: array
          x-looker-nullable: true
        default_new_user_role_ids:
          description: (Write-Only) Array of ids of roles that will be applied to
            new users the first time they login via Saml
          items:
            format: int64
            type: integer
          type: array
          x-looker-write-only: true
          x-looker-nullable: true
        default_new_user_group_ids:
          description: (Write-Only) Array of ids of groups that will be applied to
            new users the first time they login via Saml
          items:
            format: int64
            type: integer
          type: array
          x-looker-write-only: true
          x-looker-nullable: true
        set_roles_from_groups:
          description: Set user roles in Looker based on groups from Saml
          type: boolean
          x-looker-nullable: false
        groups_attribute:
          description: Name of user record attributes used to indicate groups. Used
            when 'groups_finder_type' is set to 'grouped_attribute_values'
          type: string
          x-looker-nullable: true
        groups:
          description: (Read-only) Array of mappings between Saml Groups and Looker
            Roles
          items:
            $ref: '#/components/schemas/SamlGroupRead'
          readOnly: true
          type: array
          x-looker-nullable: true
        groups_with_role_ids:
          description: (Read/Write) Array of mappings between Saml Groups and arrays
            of Looker Role ids
          items:
            $ref: '#/components/schemas/SamlGroupWrite'
          type: array
          x-looker-nullable: true
        auth_requires_role:
          description: Users will not be allowed to login at all unless a role for
            them is found in Saml if set to true
          type: boolean
          x-looker-nullable: false
        user_attributes:
          description: (Read-only) Array of mappings between Saml User Attributes
            and Looker User Attributes
          items:
            $ref: '#/components/schemas/SamlUserAttributeRead'
          readOnly: true
          type: array
          x-looker-nullable: true
        user_attributes_with_ids:
          description: (Read/Write) Array of mappings between Saml User Attributes
            and arrays of Looker User Attribute ids
          items:
            $ref: '#/components/schemas/SamlUserAttributeWrite'
          type: array
          x-looker-nullable: true
        groups_finder_type:
          description: Identifier for a strategy for how Looker will find groups in
            the SAML response. One of ['grouped_attribute_values', 'individual_attributes']
          type: string
          x-looker-nullable: true
        groups_member_value:
          description: Value for group attribute used to indicate membership. Used
            when 'groups_finder_type' is set to 'individual_attributes'
          type: string
          x-looker-nullable: true
        bypass_login_page:
          description: Bypass the login page when user authentication is required.
            Redirect to IdP immediately instead.
          type: boolean
          x-looker-nullable: false
        allow_normal_group_membership:
          description: Allow SAML auth'd users to be members of non-reflected Looker
            groups. If 'false', user will be removed from non-reflected groups on
            login.
          type: boolean
          x-looker-nullable: false
        allow_roles_from_normal_groups:
          description: SAML auth'd users will inherit roles from non-reflected Looker
            groups.
          type: boolean
          x-looker-nullable: false
        allow_direct_roles:
          description: Allows roles to be directly assigned to SAML auth'd users.
          type: boolean
          x-looker-nullable: false
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    SamlGroupRead:
      example:
        looker_group_id: 5
        looker_group_name: looker_group_name
        roles:
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        - permission_set_id: 5
          model_set_id: 7
          can:
            key: true
          model_set:
            can:
              key: true
            models:
            - models
            - models
            built_in: true
            name: name
            all_access: true
            id: 2
            url: https://openapi-generator.tech
          users_url: https://openapi-generator.tech
          name: name
          id: 1
          url: https://openapi-generator.tech
          permission_set:
            can:
              key: true
            permissions:
            - permissions
            - permissions
            built_in: true
            name: name
            all_access: true
            id: 5
            url: https://openapi-generator.tech
        name: name
        id: 5
        url: https://openapi-generator.tech
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        looker_group_id:
          description: Unique Id of group in Looker
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        looker_group_name:
          description: Name of group in Looker
          readOnly: true
          type: string
          x-looker-nullable: true
        name:
          description: Name of group in Saml
          readOnly: true
          type: string
          x-looker-nullable: true
        roles:
          description: Looker Roles
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          type: array
          x-looker-nullable: true
        url:
          description: Link to saml config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    SamlGroupWrite:
      example:
        looker_group_id: 7
        looker_group_name: looker_group_name
        name: name
        id: 2
        role_ids:
        - 9
        - 9
        url: https://openapi-generator.tech
      properties:
        id:
          description: Unique Id
          format: int64
          type: integer
          x-looker-nullable: true
        looker_group_id:
          description: Unique Id of group in Looker
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        looker_group_name:
          description: Name of group in Looker
          type: string
          x-looker-nullable: true
        name:
          description: Name of group in Saml
          type: string
          x-looker-nullable: true
        role_ids:
          description: Looker Role Ids
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        url:
          description: Link to saml config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    SamlMetadataParseResult:
      example:
        can:
          key: true
        idp_issuer: idp_issuer
        idp_cert: idp_cert
        idp_url: idp_url
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        idp_issuer:
          description: Identify Provider Issuer
          readOnly: true
          type: string
          x-looker-nullable: true
        idp_url:
          description: Identify Provider Url
          readOnly: true
          type: string
          x-looker-nullable: true
        idp_cert:
          description: Identify Provider Certificate
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    SamlUserAttributeRead:
      example:
        name: name
        user_attributes:
        - can:
            key: true
          is_system: true
          user_can_view: true
          value_is_hidden: true
          hidden_value_domain_whitelist: hidden_value_domain_whitelist
          name: name
          default_value: default_value
          id: 1
          label: label
          is_permanent: true
          type: type
          user_can_edit: true
        - can:
            key: true
          is_system: true
          user_can_view: true
          value_is_hidden: true
          hidden_value_domain_whitelist: hidden_value_domain_whitelist
          name: name
          default_value: default_value
          id: 1
          label: label
          is_permanent: true
          type: type
          user_can_edit: true
        required: true
        url: https://openapi-generator.tech
      properties:
        name:
          description: Name of User Attribute in Saml
          readOnly: true
          type: string
          x-looker-nullable: true
        required:
          description: Required to be in Saml assertion for login to be allowed to
            succeed
          readOnly: true
          type: boolean
          x-looker-nullable: false
        user_attributes:
          description: Looker User Attributes
          items:
            $ref: '#/components/schemas/UserAttribute'
          readOnly: true
          type: array
          x-looker-nullable: true
        url:
          description: Link to saml config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    SamlUserAttributeWrite:
      example:
        user_attribute_ids:
        - 3
        - 3
        name: name
        required: true
        url: https://openapi-generator.tech
      properties:
        name:
          description: Name of User Attribute in Saml
          type: string
          x-looker-nullable: true
        required:
          description: Required to be in Saml assertion for login to be allowed to
            succeed
          type: boolean
          x-looker-nullable: false
        user_attribute_ids:
          description: Looker User Attribute Ids
          items:
            format: int64
            type: integer
          type: array
          x-looker-nullable: true
        url:
          description: Link to saml config
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ScheduledPlanDestination:
      example:
        apply_vis: true
        address: address
        scheduled_plan_id: 5
        apply_formatting: true
        secret_parameters: secret_parameters
        format: format
        id: 5
        type: type
        message: message
        looker_recipient: true
        parameters: parameters
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        scheduled_plan_id:
          description: Id of a scheduled plan you own
          format: int64
          type: integer
          x-looker-nullable: true
        format:
          description: 'The data format to send to the given destination. Supported
            formats vary by destination, but include: "txt", "csv", "inline_json",
            "json", "json_detail", "xlsx", "html", "wysiwyg_pdf", "assembled_pdf",
            "wysiwyg_png"'
          type: string
          x-looker-nullable: true
        apply_formatting:
          description: Are values formatted? (containing currency symbols, digit separators,
            etc.
          type: boolean
          x-looker-nullable: false
        apply_vis:
          description: Whether visualization options are applied to the results.
          type: boolean
          x-looker-nullable: false
        address:
          description: 'Address for recipient. For email e.g. ''user@example.com''.
            For webhooks e.g. ''https://domain/path''. For Amazon S3 e.g. ''s3://bucket-name/path/''.
            For SFTP e.g. ''sftp://host-name/path/''. '
          type: string
          x-looker-nullable: true
        looker_recipient:
          description: Whether the recipient is a Looker user on the current instance
            (only applicable for email recipients)
          readOnly: true
          type: boolean
          x-looker-nullable: false
        type:
          description: Type of the address ('email', 'webhook', 's3', or 'sftp')
          type: string
          x-looker-nullable: true
        parameters:
          description: JSON object containing parameters for external scheduling.
            For Amazon S3, this requires keys and values for access_key_id and region.
            For SFTP, this requires a key and value for username.
          type: string
          x-looker-nullable: true
        secret_parameters:
          description: (Write-Only) JSON object containing secret parameters for external
            scheduling. For Amazon S3, this requires a key and value for secret_access_key.
            For SFTP, this requires a key and value for password.
          type: string
          x-looker-write-only: true
          x-looker-nullable: true
        message:
          description: Optional message to be included in scheduled emails
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    WriteScheduledPlan:
      example:
        query_id: query_id
        timezone: timezone
        enabled: true
        require_change: true
        datagroup: datagroup
        run_as_recipient: true
        run_once: true
        filters_string: filters_string
        embed: true
        scheduled_plan_destination:
        - apply_vis: true
          address: address
          scheduled_plan_id: 5
          apply_formatting: true
          secret_parameters: secret_parameters
          format: format
          id: 5
          type: type
          message: message
          looker_recipient: true
          parameters: parameters
        - apply_vis: true
          address: address
          scheduled_plan_id: 5
          apply_formatting: true
          secret_parameters: secret_parameters
          format: format
          id: 5
          type: type
          message: message
          looker_recipient: true
          parameters: parameters
        send_all_results: true
        dashboard_filters: dashboard_filters
        look_id: 6
        require_results: true
        crontab: crontab
        color_theme: color_theme
        lookml_dashboard_id: lookml_dashboard_id
        require_no_results: true
        include_links: true
        pdf_landscape: true
        long_tables: true
        inline_table_width: 5
        user_id: 0
        name: name
        dashboard_id: 1
        pdf_paper_size: pdf_paper_size
      properties:
        name:
          description: Name of this scheduled plan
          type: string
          x-looker-nullable: true
        user_id:
          description: User Id which owns this scheduled plan
          format: int64
          type: integer
          x-looker-nullable: true
        run_as_recipient:
          description: Whether schedule is run as recipient (only applicable for email
            recipients)
          type: boolean
          x-looker-nullable: false
        enabled:
          description: Whether the ScheduledPlan is enabled
          type: boolean
          x-looker-nullable: false
        look_id:
          description: Id of a look
          format: int64
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of a dashboard
          format: int64
          type: integer
          x-looker-nullable: true
        lookml_dashboard_id:
          description: Id of a LookML dashboard
          type: string
          x-looker-nullable: true
        filters_string:
          description: Query string to run look or dashboard with
          type: string
          x-looker-nullable: true
        dashboard_filters:
          description: (DEPRECATED) Alias for filters_string field
          type: string
          x-looker-nullable: true
          x-looker-deprecated: true
        require_results:
          description: Delivery should occur if running the dashboard or look returns
            results
          type: boolean
          x-looker-nullable: false
        require_no_results:
          description: Delivery should occur if the dashboard look does not return
            results
          type: boolean
          x-looker-nullable: false
        require_change:
          description: Delivery should occur if data have changed since the last run
          type: boolean
          x-looker-nullable: false
        send_all_results:
          description: Will run an unlimited query and send all results.
          type: boolean
          x-looker-nullable: false
        crontab:
          description: Vixie-Style crontab specification when to run
          type: string
          x-looker-nullable: true
        datagroup:
          description: Name of a datagroup; if specified will run when datagroup triggered
            (can't be used with cron string)
          type: string
          x-looker-nullable: true
        timezone:
          description: Timezone for interpreting the specified crontab (default is
            Looker instance timezone)
          type: string
          x-looker-nullable: true
        query_id:
          description: Query id
          type: string
          x-looker-nullable: true
        scheduled_plan_destination:
          description: Scheduled plan destinations
          items:
            $ref: '#/components/schemas/ScheduledPlanDestination'
          type: array
          x-looker-nullable: true
        run_once:
          description: Whether the plan in question should only be run once (usually
            for testing)
          type: boolean
          x-looker-nullable: false
        include_links:
          description: Whether links back to Looker should be included in this ScheduledPlan
          type: boolean
          x-looker-nullable: false
        pdf_paper_size:
          description: 'The size of paper the PDF should be formatted to fit. Valid
            values are: "letter", "legal", "tabloid", "a0", "a1", "a2", "a3", "a4",
            "a5".'
          type: string
          x-looker-nullable: true
        pdf_landscape:
          description: Whether the PDF should be formatted for landscape orientation
          type: boolean
          x-looker-nullable: false
        embed:
          description: Whether this schedule is in an embed context or not
          type: boolean
          x-looker-nullable: false
        color_theme:
          description: Color scheme of the dashboard if applicable
          type: string
          x-looker-nullable: true
        long_tables:
          description: Whether or not to expand table vis to full length
          type: boolean
          x-looker-nullable: false
        inline_table_width:
          description: The pixel width at which we render the inline table visualizations
          format: int64
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    ScheduledPlan:
      example:
        last_run_at: 2000-01-23T04:56:07.000+00:00
        query_id: query_id
        next_run_at: 2000-01-23T04:56:07.000+00:00
        timezone: timezone
        created_at: 2000-01-23T04:56:07.000+00:00
        title: title
        enabled: true
        require_change: true
        can:
          key: true
        datagroup: datagroup
        updated_at: 2000-01-23T04:56:07.000+00:00
        run_as_recipient: true
        run_once: true
        filters_string: filters_string
        embed: true
        id: 7
        scheduled_plan_destination:
        - apply_vis: true
          address: address
          scheduled_plan_id: 5
          apply_formatting: true
          secret_parameters: secret_parameters
          format: format
          id: 5
          type: type
          message: message
          looker_recipient: true
          parameters: parameters
        - apply_vis: true
          address: address
          scheduled_plan_id: 5
          apply_formatting: true
          secret_parameters: secret_parameters
          format: format
          id: 5
          type: type
          message: message
          looker_recipient: true
          parameters: parameters
        send_all_results: true
        dashboard_filters: dashboard_filters
        look_id: 6
        require_results: true
        crontab: crontab
        color_theme: color_theme
        lookml_dashboard_id: lookml_dashboard_id
        require_no_results: true
        include_links: true
        pdf_landscape: true
        long_tables: true
        inline_table_width: 2
        user_id: 0
        name: name
        user:
          can:
            key: true
          avatar_url: https://openapi-generator.tech
          last_name: last_name
          id: 6
          display_name: display_name
          first_name: first_name
          url: https://openapi-generator.tech
        dashboard_id: 1
        pdf_paper_size: pdf_paper_size
      properties:
        name:
          description: Name of this scheduled plan
          type: string
          x-looker-nullable: true
        user_id:
          description: User Id which owns this scheduled plan
          format: int64
          type: integer
          x-looker-nullable: true
        run_as_recipient:
          description: Whether schedule is run as recipient (only applicable for email
            recipients)
          type: boolean
          x-looker-nullable: false
        enabled:
          description: Whether the ScheduledPlan is enabled
          type: boolean
          x-looker-nullable: false
        look_id:
          description: Id of a look
          format: int64
          type: integer
          x-looker-nullable: true
        dashboard_id:
          description: Id of a dashboard
          format: int64
          type: integer
          x-looker-nullable: true
        lookml_dashboard_id:
          description: Id of a LookML dashboard
          type: string
          x-looker-nullable: true
        filters_string:
          description: Query string to run look or dashboard with
          type: string
          x-looker-nullable: true
        dashboard_filters:
          description: (DEPRECATED) Alias for filters_string field
          type: string
          x-looker-nullable: true
          x-looker-deprecated: true
        require_results:
          description: Delivery should occur if running the dashboard or look returns
            results
          type: boolean
          x-looker-nullable: false
        require_no_results:
          description: Delivery should occur if the dashboard look does not return
            results
          type: boolean
          x-looker-nullable: false
        require_change:
          description: Delivery should occur if data have changed since the last run
          type: boolean
          x-looker-nullable: false
        send_all_results:
          description: Will run an unlimited query and send all results.
          type: boolean
          x-looker-nullable: false
        crontab:
          description: Vixie-Style crontab specification when to run
          type: string
          x-looker-nullable: true
        datagroup:
          description: Name of a datagroup; if specified will run when datagroup triggered
            (can't be used with cron string)
          type: string
          x-looker-nullable: true
        timezone:
          description: Timezone for interpreting the specified crontab (default is
            Looker instance timezone)
          type: string
          x-looker-nullable: true
        query_id:
          description: Query id
          type: string
          x-looker-nullable: true
        scheduled_plan_destination:
          description: Scheduled plan destinations
          items:
            $ref: '#/components/schemas/ScheduledPlanDestination'
          type: array
          x-looker-nullable: true
        run_once:
          description: Whether the plan in question should only be run once (usually
            for testing)
          type: boolean
          x-looker-nullable: false
        include_links:
          description: Whether links back to Looker should be included in this ScheduledPlan
          type: boolean
          x-looker-nullable: false
        pdf_paper_size:
          description: 'The size of paper the PDF should be formatted to fit. Valid
            values are: "letter", "legal", "tabloid", "a0", "a1", "a2", "a3", "a4",
            "a5".'
          type: string
          x-looker-nullable: true
        pdf_landscape:
          description: Whether the PDF should be formatted for landscape orientation
          type: boolean
          x-looker-nullable: false
        embed:
          description: Whether this schedule is in an embed context or not
          type: boolean
          x-looker-nullable: false
        color_theme:
          description: Color scheme of the dashboard if applicable
          type: string
          x-looker-nullable: true
        long_tables:
          description: Whether or not to expand table vis to full length
          type: boolean
          x-looker-nullable: false
        inline_table_width:
          description: The pixel width at which we render the inline table visualizations
          format: int64
          type: integer
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        created_at:
          description: Date and time when ScheduledPlan was created
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        updated_at:
          description: Date and time when ScheduledPlan was last updated
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        title:
          description: Title
          readOnly: true
          type: string
          x-looker-nullable: true
        user:
          $ref: '#/components/schemas/UserPublic'
        next_run_at:
          description: When the ScheduledPlan will next run (null if running once)
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        last_run_at:
          description: When the ScheduledPlan was last run
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    SessionConfig:
      example:
        unlimited_sessions_per_user: true
        can:
          key: true
        session_minutes: 0
        allow_persistent_sessions: true
        use_inactivity_based_logout: true
        track_session_location: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        allow_persistent_sessions:
          description: Allow users to have persistent sessions when they login
          type: boolean
          x-looker-nullable: false
        session_minutes:
          description: Number of minutes for user sessions.  Must be between 5 and
            43200
          format: int64
          type: integer
          x-looker-nullable: true
        unlimited_sessions_per_user:
          description: Allow users to have an unbounded number of concurrent sessions
            (otherwise, users will be limited to only one session at a time).
          type: boolean
          x-looker-nullable: false
        use_inactivity_based_logout:
          description: Enforce session logout for sessions that are inactive for 15
            minutes.
          type: boolean
          x-looker-nullable: false
        track_session_location:
          description: Track location of session when user logs in.
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Session:
      example:
        country: country
        sudo_user_id: 4
        city: city
        extended_at: extended_at
        created_at: created_at
        ip_address: ip_address
        url: https://openapi-generator.tech
        can:
          key: true
        extended_count: 2
        expires_at: expires_at
        browser: browser
        operating_system: operating_system
        id: 3
        state: state
        credentials_type: credentials_type
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        ip_address:
          description: IP address of user when this session was initiated
          readOnly: true
          type: string
          x-looker-nullable: true
        browser:
          description: User's browser type
          readOnly: true
          type: string
          x-looker-nullable: true
        operating_system:
          description: User's Operating System
          readOnly: true
          type: string
          x-looker-nullable: true
        city:
          description: City component of user location (derived from IP address)
          readOnly: true
          type: string
          x-looker-nullable: true
        state:
          description: State component of user location (derived from IP address)
          readOnly: true
          type: string
          x-looker-nullable: true
        country:
          description: Country component of user location (derived from IP address)
          readOnly: true
          type: string
          x-looker-nullable: true
        credentials_type:
          description: Type of credentials used for logging in this session
          readOnly: true
          type: string
          x-looker-nullable: true
        extended_at:
          description: Time when this session was last extended by the user
          readOnly: true
          type: string
          x-looker-nullable: true
        extended_count:
          description: Number of times this session was extended
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        sudo_user_id:
          description: Actual user in the case when this session represents one user
            sudo'ing as another
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        created_at:
          description: Time when this session was initiated
          readOnly: true
          type: string
          x-looker-nullable: true
        expires_at:
          description: Time when this session will expire
          readOnly: true
          type: string
          x-looker-nullable: true
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    Snippet:
      example:
        can:
          key: true
        name: name
        label: label
        sql: sql
      properties:
        name:
          description: Name of the snippet
          readOnly: true
          type: string
          x-looker-nullable: false
        label:
          description: Label of the snippet
          readOnly: true
          type: string
          x-looker-nullable: false
        sql:
          description: SQL text of the snippet
          readOnly: true
          type: string
          x-looker-nullable: false
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
      type: object
      x-looker-status: stable
    SqlQueryCreate:
      example:
        connection_name: connection_name
        vis_config:
          key: vis_config
        model_name: model_name
        connection_id: connection_id
        sql: sql
      properties:
        connection_name:
          description: Name of the db connection on which to run this query
          type: string
          x-looker-nullable: true
        connection_id:
          description: (DEPRECATED) Use `connection_name` instead
          type: string
          x-looker-nullable: true
          x-looker-deprecated: true
        model_name:
          description: Name of LookML Model (this or `connection_id` required)
          type: string
          x-looker-nullable: true
        sql:
          description: SQL query
          type: string
          x-looker-nullable: true
        vis_config:
          additionalProperties:
            format: any
            type: string
          description: Visualization configuration properties. These properties are
            typically opaque and differ based on the type of visualization used. There
            is no specified set of allowed keys. The values can be any type supported
            by JSON. A "type" key with a string value is often present, and is used
            by Looker to determine which visualization to present. Visualizations
            ignore unknown vis_config properties.
          type: object
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    SqlQuery:
      example:
        last_run_at: last_run_at
        creator:
          can:
            key: true
          avatar_url: https://openapi-generator.tech
          last_name: last_name
          id: 6
          display_name: display_name
          first_name: first_name
          url: https://openapi-generator.tech
        vis_config:
          key: vis_config
        plaintext: true
        explore_url: explore_url
        run_count: 5
        browser_limit: 5
        sql: sql
        can:
          key: true
        last_runtime: 1.4658129
        model_name: model_name
        result_maker_id: 2
        connection:
          can:
            key: true
          dialect:
            persistent_table_distkey: persistent_table_distkey
            supports_cost_estimate: true
            connection_tests:
            - connection_tests
            - connection_tests
            persistent_table_indexes: persistent_table_indexes
            supports_inducer: true
            supports_persistent_derived_tables: true
            label: label
            supports_streaming: true
            automatically_run_sql_runner_snippets: true
            name: name
            has_ssl_support: true
            supports_multiple_databases: true
            persistent_table_sortkeys: persistent_table_sortkeys
          snippets:
          - can:
              key: true
            name: name
            label: label
            sql: sql
          - can:
              key: true
            name: name
            label: label
            sql: sql
          pdts_enabled: true
          name: name
        slug: slug
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        slug:
          description: The identifier of the SQL query
          readOnly: true
          type: string
          x-looker-nullable: false
        last_runtime:
          description: Number of seconds this query took to run the most recent time
            it was run
          format: float
          readOnly: true
          type: number
          x-looker-nullable: true
        run_count:
          description: Number of times this query has been run
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        browser_limit:
          description: Maximum number of rows this query will display on the SQL Runner
            page
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        sql:
          description: SQL query text
          readOnly: true
          type: string
          x-looker-nullable: false
        last_run_at:
          description: The most recent time this query was run
          readOnly: true
          type: string
          x-looker-nullable: true
        connection:
          $ref: '#/components/schemas/DBConnectionBase'
        model_name:
          description: Model name this query uses
          readOnly: true
          type: string
          x-looker-nullable: true
        creator:
          $ref: '#/components/schemas/UserPublic'
        explore_url:
          description: Explore page URL for this SQL query
          readOnly: true
          type: string
          x-looker-nullable: true
        plaintext:
          description: Should this query be rendered as plain text
          readOnly: true
          type: boolean
          x-looker-nullable: false
        vis_config:
          additionalProperties:
            format: any
            type: string
          description: Visualization configuration properties. These properties are
            typically opaque and differ based on the type of visualization used. There
            is no specified set of allowed keys. The values can be any type supported
            by JSON. A "type" key with a string value is often present, and is used
            by Looker to determine which visualization to present. Visualizations
            ignore unknown vis_config properties.
          type: object
          x-looker-nullable: true
        result_maker_id:
          description: ID of the ResultMakerLookup entry.
          format: int64
          type: integer
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ThemeSettings:
      example:
        show_filters_bar: true
        text_tile_text_color: text_tile_text_color
        title_color: title_color
        tile_text_color: tile_text_color
        font_source: font_source
        tile_background_color: tile_background_color
        base_font_size: base_font_size
        warn_button_color: warn_button_color
        tile_title_alignment: tile_title_alignment
        background_color: background_color
        info_button_color: info_button_color
        font_color: font_color
        show_title: true
        font_family: font_family
        primary_button_color: primary_button_color
        tile_shadow: true
        color_collection_id: color_collection_id
      properties:
        background_color:
          description: Default background color
          type: string
          x-looker-nullable: false
        base_font_size:
          description: Base font size for scaling fonts
          type: string
          x-looker-nullable: true
        color_collection_id:
          description: Optional. ID of color collection to use with the theme. Use
            an empty string for none.
          type: string
          x-looker-nullable: false
        font_color:
          description: Default font color
          type: string
          x-looker-nullable: true
        font_family:
          description: Primary font family
          type: string
          x-looker-nullable: false
        font_source:
          description: Source specification for font
          type: string
          x-looker-nullable: true
        info_button_color:
          description: Info button color
          type: string
          x-looker-nullable: false
        primary_button_color:
          description: Primary button color
          type: string
          x-looker-nullable: false
        show_filters_bar:
          description: Toggle to show filters. Defaults to true.
          type: boolean
          x-looker-nullable: false
        show_title:
          description: Toggle to show the title. Defaults to true.
          type: boolean
          x-looker-nullable: false
        text_tile_text_color:
          description: Text color for text tiles
          type: string
          x-looker-nullable: false
        tile_background_color:
          description: Background color for tiles
          type: string
          x-looker-nullable: false
        tile_text_color:
          description: Text color for tiles
          type: string
          x-looker-nullable: false
        title_color:
          description: Color for titles
          type: string
          x-looker-nullable: false
        warn_button_color:
          description: Warning button color
          type: string
          x-looker-nullable: false
        tile_title_alignment:
          description: The text alignment of tile titles (New Dashboards)
          type: string
          x-looker-nullable: false
        tile_shadow:
          description: Toggles the tile shadow (New Dashboards)
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Theme:
      example:
        can:
          key: true
        end_at: 2000-01-23T04:56:07.000+00:00
        settings:
          show_filters_bar: true
          text_tile_text_color: text_tile_text_color
          title_color: title_color
          tile_text_color: tile_text_color
          font_source: font_source
          tile_background_color: tile_background_color
          base_font_size: base_font_size
          warn_button_color: warn_button_color
          tile_title_alignment: tile_title_alignment
          background_color: background_color
          info_button_color: info_button_color
          font_color: font_color
          show_title: true
          font_family: font_family
          primary_button_color: primary_button_color
          tile_shadow: true
          color_collection_id: color_collection_id
        name: name
        id: 0
        begin_at: 2000-01-23T04:56:07.000+00:00
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        begin_at:
          description: Timestamp for when this theme becomes active. Null=always
          format: date-time
          type: string
          x-looker-nullable: true
        end_at:
          description: Timestamp for when this theme expires. Null=never
          format: date-time
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        name:
          description: Name of theme. Can only be alphanumeric and underscores.
          type: string
          x-looker-nullable: false
        settings:
          $ref: '#/components/schemas/ThemeSettings'
      type: object
      x-looker-status: beta
    Timezone:
      example:
        label: label
        value: value
        group: group
      properties:
        value:
          description: Timezone
          readOnly: true
          type: string
          x-looker-nullable: true
        label:
          description: Description of timezone
          readOnly: true
          type: string
          x-looker-nullable: true
        group:
          description: Timezone group (e.g Common, Other, etc.)
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    UserAttribute:
      example:
        can:
          key: true
        is_system: true
        user_can_view: true
        value_is_hidden: true
        hidden_value_domain_whitelist: hidden_value_domain_whitelist
        name: name
        default_value: default_value
        id: 1
        label: label
        is_permanent: true
        type: type
        user_can_edit: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        name:
          description: Name of user attribute
          type: string
          x-looker-nullable: true
        label:
          description: Human-friendly label for user attribute
          type: string
          x-looker-nullable: true
        type:
          description: Type of user attribute ("string", "number", "datetime", "yesno",
            "zipcode")
          type: string
          x-looker-nullable: true
        default_value:
          description: Default value for when no value is set on the user
          type: string
          x-looker-nullable: true
        is_system:
          description: Attribute is a system default
          readOnly: true
          type: boolean
          x-looker-nullable: false
        is_permanent:
          description: Attribute is permanent and cannot be deleted
          readOnly: true
          type: boolean
          x-looker-nullable: false
        value_is_hidden:
          description: If true, users will not be able to view values of this attribute
          type: boolean
          x-looker-nullable: false
        user_can_view:
          description: Non-admin users can see the values of their attributes and
            use them in filters
          type: boolean
          x-looker-nullable: false
        user_can_edit:
          description: Users can change the value of this attribute for themselves
          type: boolean
          x-looker-nullable: false
        hidden_value_domain_whitelist:
          description: Destinations to which a hidden attribute may be sent. Once
            set, cannot be edited.
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    UserAttributeGroupValue:
      example:
        can:
          key: true
        group_id: 6
        user_attribute_id: 1
        value_is_hidden: true
        rank: 5
        id: 0
        value: value
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id of this group-attribute relation
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        group_id:
          description: Id of group
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user_attribute_id:
          description: Id of user attribute
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        value_is_hidden:
          description: If true, the "value" field will be null, because the attribute
            settings block access to this value
          readOnly: true
          type: boolean
          x-looker-nullable: false
        rank:
          description: Precedence for resolving value for user
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        value:
          description: Value of user attribute for group
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    UserAttributeWithValue:
      example:
        can:
          key: true
        user_id: 6
        value_is_hidden: true
        user_attribute_id: 1
        hidden_value_domain_whitelist: hidden_value_domain_whitelist
        name: name
        rank: 0
        label: label
        source: source
        value: value
        user_can_edit: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        name:
          description: Name of user attribute
          readOnly: true
          type: string
          x-looker-nullable: true
        label:
          description: Human-friendly label for user attribute
          readOnly: true
          type: string
          x-looker-nullable: true
        rank:
          description: Precedence for setting value on user (lowest wins)
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        value:
          description: Value of attribute for user
          type: string
          x-looker-nullable: true
        user_id:
          description: Id of User
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        user_can_edit:
          description: Can the user set this value
          readOnly: true
          type: boolean
          x-looker-nullable: false
        value_is_hidden:
          description: If true, the "value" field will be null, because the attribute
            settings block access to this value
          readOnly: true
          type: boolean
          x-looker-nullable: false
        user_attribute_id:
          description: Id of User Attribute
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        source:
          description: How user got this value for this attribute
          readOnly: true
          type: string
          x-looker-nullable: true
        hidden_value_domain_whitelist:
          description: If this user attribute is hidden, whitelist of destinations
            to which it may be sent.
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    UserIdOnly:
      example:
        id: 1
      properties:
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    UserLoginLockout:
      example:
        can:
          key: true
        auth_type: auth_type
        full_name: full_name
        user_id: 0
        ip: ip
        remote_id: remote_id
        lockout_at: 2000-01-23T04:56:07.000+00:00
        key: key
        email: email
        fail_count: 6
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        key:
          description: Hash of user's client id
          readOnly: true
          type: string
          x-looker-nullable: true
        auth_type:
          description: Authentication method for login failures
          readOnly: true
          type: string
          x-looker-nullable: true
        ip:
          description: IP address of most recent failed attempt
          readOnly: true
          type: string
          x-looker-nullable: true
        user_id:
          description: User ID
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        remote_id:
          description: Remote ID of user if using LDAP
          readOnly: true
          type: string
          x-looker-nullable: true
        full_name:
          description: User's name
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: Email address associated with the user's account
          readOnly: true
          type: string
          x-looker-nullable: true
        fail_count:
          description: Number of failures that triggered the lockout
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        lockout_at:
          description: Time when lockout was triggered
          format: date-time
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    User:
      example:
        credentials_email:
          can:
            key: true
          password_reset_url: password_reset_url
          is_disabled: true
          user_url: https://openapi-generator.tech
          created_at: created_at
          type: type
          forced_password_reset_at_next_login: true
          logged_in_at: logged_in_at
          email: email
          url: https://openapi-generator.tech
        embed_group_space_id: 1
        avatar_url_without_sizing: https://openapi-generator.tech
        locale: locale
        credentials_embed:
        - can:
            key: true
          is_disabled: true
          created_at: created_at
          external_group_id: external_group_id
          id: 6
          type: type
          logged_in_at: logged_in_at
          url: https://openapi-generator.tech
          external_user_id: external_user_id
        - can:
            key: true
          is_disabled: true
          created_at: created_at
          external_group_id: external_group_id
          id: 6
          type: type
          logged_in_at: logged_in_at
          url: https://openapi-generator.tech
          external_user_id: external_user_id
        role_ids:
        - 9
        - 9
        can:
          key: true
        credentials_google:
          can:
            key: true
          google_user_id: google_user_id
          domain: domain
          is_disabled: true
          created_at: created_at
          type: type
          logged_in_at: logged_in_at
          email: email
          url: https://openapi-generator.tech
        credentials_ldap:
          can:
            key: true
          ldap_dn: ldap_dn
          ldap_id: ldap_id
          is_disabled: true
          created_at: created_at
          type: type
          logged_in_at: logged_in_at
          email: email
          url: https://openapi-generator.tech
        home_folder_id: home_folder_id
        group_ids:
        - 5
        - 5
        ui_state:
          key: ui_state
        allow_roles_from_normal_groups: true
        id: 5
        credentials_oidc:
          can:
            key: true
          is_disabled: true
          created_at: created_at
          oidc_user_id: oidc_user_id
          type: type
          logged_in_at: logged_in_at
          email: email
          url: https://openapi-generator.tech
        personal_folder_id: 7
        first_name: first_name
        home_space_id: home_space_id
        email: email
        sessions:
        - country: country
          sudo_user_id: 4
          city: city
          extended_at: extended_at
          created_at: created_at
          ip_address: ip_address
          url: https://openapi-generator.tech
          can:
            key: true
          extended_count: 2
          expires_at: expires_at
          browser: browser
          operating_system: operating_system
          id: 3
          state: state
          credentials_type: credentials_type
        - country: country
          sudo_user_id: 4
          city: city
          extended_at: extended_at
          created_at: created_at
          ip_address: ip_address
          url: https://openapi-generator.tech
          can:
            key: true
          extended_count: 2
          expires_at: expires_at
          browser: browser
          operating_system: operating_system
          id: 3
          state: state
          credentials_type: credentials_type
        looker_versions:
        - looker_versions
        - looker_versions
        allow_direct_roles: true
        credentials_api3:
        - can:
            key: true
          is_disabled: true
          created_at: created_at
          id: 0
          type: type
          client_id: client_id
          url: https://openapi-generator.tech
        - can:
            key: true
          is_disabled: true
          created_at: created_at
          id: 0
          type: type
          client_id: client_id
          url: https://openapi-generator.tech
        presumed_looker_employee: true
        is_disabled: true
        models_dir_validated: true
        last_name: last_name
        display_name: display_name
        url: https://openapi-generator.tech
        credentials_saml:
          can:
            key: true
          is_disabled: true
          created_at: created_at
          type: type
          logged_in_at: logged_in_at
          email: email
          saml_user_id: saml_user_id
          url: https://openapi-generator.tech
        avatar_url: https://openapi-generator.tech
        credentials_looker_openid:
          can:
            key: true
          is_disabled: true
          user_url: https://openapi-generator.tech
          created_at: created_at
          logged_in_ip: logged_in_ip
          type: type
          logged_in_at: logged_in_at
          email: email
          url: https://openapi-generator.tech
        verified_looker_employee: true
        credentials_totp:
          can:
            key: true
          is_disabled: true
          verified: true
          created_at: created_at
          type: type
          url: https://openapi-generator.tech
        personal_space_id: 2
        allow_normal_group_membership: true
        roles_externally_managed: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        avatar_url:
          description: URL for the avatar image (may be generic)
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        avatar_url_without_sizing:
          description: URL for the avatar image (may be generic), does not specify
            size
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
        credentials_api3:
          description: API 3 credentials
          items:
            $ref: '#/components/schemas/CredentialsApi3'
          readOnly: true
          type: array
          x-looker-nullable: true
        credentials_email:
          $ref: '#/components/schemas/CredentialsEmail'
        credentials_embed:
          description: Embed credentials
          items:
            $ref: '#/components/schemas/CredentialsEmbed'
          readOnly: true
          type: array
          x-looker-nullable: true
        credentials_google:
          $ref: '#/components/schemas/CredentialsGoogle'
        credentials_ldap:
          $ref: '#/components/schemas/CredentialsLDAP'
        credentials_looker_openid:
          $ref: '#/components/schemas/CredentialsLookerOpenid'
        credentials_oidc:
          $ref: '#/components/schemas/CredentialsOIDC'
        credentials_saml:
          $ref: '#/components/schemas/CredentialsSaml'
        credentials_totp:
          $ref: '#/components/schemas/CredentialsTotp'
        display_name:
          description: Full name for display (available only if both first_name and
            last_name are set)
          readOnly: true
          type: string
          x-looker-nullable: true
        email:
          description: EMail address
          readOnly: true
          type: string
          x-looker-nullable: true
        embed_group_space_id:
          description: (Embed only) ID of user's group space based on the external_group_id
            optionally specified during embed user login
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        first_name:
          description: First name
          type: string
          x-looker-nullable: true
        group_ids:
          description: Array of ids of the groups for this user
          items:
            format: int64
            type: integer
          readOnly: true
          type: array
          x-looker-nullable: true
        home_space_id:
          description: ID string for user's home space
          type: string
          x-looker-nullable: true
        home_folder_id:
          description: ID string for user's home folder
          type: string
          x-looker-nullable: true
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        is_disabled:
          description: Account has been disabled
          type: boolean
          x-looker-nullable: false
        last_name:
          description: Last name
          type: string
          x-looker-nullable: true
        locale:
          description: 'User''s preferred locale. User locale takes precedence over
            Looker''s system-wide default locale. Locale determines language of display
            strings and date and numeric formatting in API responses. Locale string
            must be a 2 letter language code or a combination of language code and
            region code: ''en'' or ''en-US'', for example.'
          type: string
          x-looker-nullable: true
        looker_versions:
          description: Array of strings representing the Looker versions that this
            user has used (this only goes back as far as '3.54.0')
          items:
            type: string
          readOnly: true
          type: array
          x-looker-nullable: true
        models_dir_validated:
          description: User's dev workspace has been checked for presence of applicable
            production projects
          type: boolean
          x-looker-nullable: true
        personal_space_id:
          description: ID of user's personal space
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        personal_folder_id:
          description: ID of user's personal folder
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: true
        presumed_looker_employee:
          description: User is identified as an employee of Looker
          readOnly: true
          type: boolean
          x-looker-nullable: false
        role_ids:
          description: Array of ids of the roles for this user
          items:
            format: int64
            type: integer
          readOnly: true
          type: array
          x-looker-nullable: true
        sessions:
          description: Active sessions
          items:
            $ref: '#/components/schemas/Session'
          readOnly: true
          type: array
          x-looker-nullable: true
        ui_state:
          additionalProperties:
            type: string
          description: Per user dictionary of undocumented state information owned
            by the Looker UI.
          type: object
          x-looker-nullable: true
        verified_looker_employee:
          description: User is identified as an employee of Looker who has been verified
            via Looker corporate authentication
          readOnly: true
          type: boolean
          x-looker-nullable: false
        roles_externally_managed:
          description: User's roles are managed by an external directory like SAML
            or LDAP and can not be changed directly.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        allow_direct_roles:
          description: User can be directly assigned a role.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        allow_normal_group_membership:
          description: User can be a direct member of a normal Looker group.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        allow_roles_from_normal_groups:
          description: User can inherit roles from a normal Looker group.
          readOnly: true
          type: boolean
          x-looker-nullable: false
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    UserPublic:
      example:
        can:
          key: true
        avatar_url: https://openapi-generator.tech
        last_name: last_name
        id: 6
        display_name: display_name
        first_name: first_name
        url: https://openapi-generator.tech
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        first_name:
          description: First Name
          readOnly: true
          type: string
          x-looker-nullable: false
        last_name:
          description: Last Name
          readOnly: true
          type: string
          x-looker-nullable: false
        display_name:
          description: Full name for display (available only if both first_name and
            last_name are set)
          readOnly: true
          type: string
          x-looker-nullable: true
        avatar_url:
          description: URL for the avatar image (may be generic)
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: false
        url:
          description: Link to get this item
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ApiVersionElement:
      example:
        full_version: full_version
        version: version
        status: status
        swagger_url: https://openapi-generator.tech
      properties:
        version:
          description: Version number as it appears in '/api/xxx/' urls
          readOnly: true
          type: string
          x-looker-nullable: true
        full_version:
          description: Full version number including minor version
          readOnly: true
          type: string
          x-looker-nullable: true
        status:
          description: Status of this version
          readOnly: true
          type: string
          x-looker-nullable: true
        swagger_url:
          description: Url for swagger.json for this version
          format: uri
          readOnly: true
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    ApiVersion:
      example:
        supported_versions:
        - full_version: full_version
          version: version
          status: status
          swagger_url: https://openapi-generator.tech
        - full_version: full_version
          version: version
          status: status
          swagger_url: https://openapi-generator.tech
        current_version:
          full_version: full_version
          version: version
          status: status
          swagger_url: https://openapi-generator.tech
        looker_release_version: looker_release_version
      properties:
        looker_release_version:
          description: Current Looker release version number
          readOnly: true
          type: string
          x-looker-nullable: true
        current_version:
          $ref: '#/components/schemas/ApiVersionElement'
        supported_versions:
          description: Array of versions supported by this Looker instance
          items:
            $ref: '#/components/schemas/ApiVersionElement'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: stable
    WelcomeEmailTest:
      example:
        subject: subject
        header: header
        content: content
      properties:
        content:
          description: The content that would be sent in the body of a custom welcome
            email
          type: string
          x-looker-nullable: true
        subject:
          description: The subject that would be sent for the custom welcome email
          type: string
          x-looker-nullable: true
        header:
          description: The header that would be sent in the body of a custom welcome
            email
          type: string
          x-looker-nullable: true
      type: object
      x-looker-status: beta
    WhitelabelConfiguration:
      example:
        favicon_url: favicon_url
        allow_looker_links: true
        alerts_links: true
        favicon_file: favicon_file
        logo_url: logo_url
        show_email_sub_options: true
        logo_file: logo_file
        custom_welcome_email_advanced: true
        can:
          key: true
        folders_mentions: true
        allow_looker_mentions: true
        alerts_logo: true
        setup_mentions: true
        default_title: default_title
        id: 0
        show_docs: true
        show_help_menu: true
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: Unique Id
          format: int64
          readOnly: true
          type: integer
          x-looker-nullable: false
        logo_file:
          description: Customer logo image. Expected base64 encoded data (write-only)
          type: string
          x-looker-nullable: true
        logo_url:
          description: Logo image url (read-only)
          readOnly: true
          type: string
          x-looker-nullable: true
        favicon_file:
          description: Custom favicon image. Expected base64 encoded data (write-only)
          type: string
          x-looker-nullable: true
        favicon_url:
          description: Favicon image url (read-only)
          readOnly: true
          type: string
          x-looker-nullable: true
        default_title:
          description: Default page title
          type: string
          x-looker-nullable: true
        show_help_menu:
          description: Boolean to toggle showing help menus
          type: boolean
          x-looker-nullable: false
        show_docs:
          description: Boolean to toggle showing docs
          type: boolean
          x-looker-nullable: false
        show_email_sub_options:
          description: Boolean to toggle showing email subscription options.
          type: boolean
          x-looker-nullable: false
        allow_looker_mentions:
          description: Boolean to toggle mentions of Looker in emails
          type: boolean
          x-looker-nullable: false
        allow_looker_links:
          description: Boolean to toggle links to Looker in emails
          type: boolean
          x-looker-nullable: false
        custom_welcome_email_advanced:
          description: Allow subject line and email heading customization in customized
            emails”
          type: boolean
          x-looker-nullable: false
        setup_mentions:
          description: Remove the word Looker from appearing in the account setup
            page
          type: boolean
          x-looker-nullable: false
        alerts_logo:
          description: Remove Looker logo from Alerts
          type: boolean
          x-looker-nullable: false
        alerts_links:
          description: Remove Looker links from Alerts
          type: boolean
          x-looker-nullable: false
        folders_mentions:
          description: Remove Looker mentions in home folder page when you don’t have
            any items saved
          type: boolean
          x-looker-nullable: false
      type: object
      x-looker-status: beta
    Workspace:
      example:
        can:
          key: true
        projects:
        - git_service_name: git_service_name
          is_example: true
          unset_deploy_secret: true
          pull_request_mode: pull_request_mode
          allow_warnings: true
          git_application_server_http_port: 0
          git_remote_url: git_remote_url
          uses_git: true
          git_password_user_attribute: git_password_user_attribute
          can:
            key: true
          git_application_server_http_scheme: git_application_server_http_scheme
          validation_required: true
          git_password: git_password
          name: name
          git_release_mgmt_enabled: true
          id: id
          git_username_user_attribute: git_username_user_attribute
          deploy_secret: deploy_secret
          git_username: git_username
        - git_service_name: git_service_name
          is_example: true
          unset_deploy_secret: true
          pull_request_mode: pull_request_mode
          allow_warnings: true
          git_application_server_http_port: 0
          git_remote_url: git_remote_url
          uses_git: true
          git_password_user_attribute: git_password_user_attribute
          can:
            key: true
          git_application_server_http_scheme: git_application_server_http_scheme
          validation_required: true
          git_password: git_password
          name: name
          git_release_mgmt_enabled: true
          id: id
          git_username_user_attribute: git_username_user_attribute
          deploy_secret: deploy_secret
          git_username: git_username
        id: id
      properties:
        can:
          additionalProperties:
            type: boolean
          description: Operations the current user is able to perform on this object
          readOnly: true
          type: object
          x-looker-nullable: false
        id:
          description: The unique id of this user workspace. Predefined workspace
            ids include "production" and "dev"
          readOnly: true
          type: string
          x-looker-nullable: false
        projects:
          description: The local state of each project in the workspace
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
          type: array
          x-looker-nullable: true
      type: object
      x-looker-status: beta
