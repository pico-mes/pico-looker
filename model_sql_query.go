/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// SqlQuery struct for SqlQuery
type SqlQuery struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// The identifier of the SQL query
	Slug string `json:"slug,omitempty"`
	// Number of seconds this query took to run the most recent time it was run
	LastRuntime float32 `json:"last_runtime,omitempty"`
	// Number of times this query has been run
	RunCount int64 `json:"run_count,omitempty"`
	// Maximum number of rows this query will display on the SQL Runner page
	BrowserLimit int64 `json:"browser_limit,omitempty"`
	// SQL query text
	Sql string `json:"sql,omitempty"`
	// The most recent time this query was run
	LastRunAt string `json:"last_run_at,omitempty"`
	Connection DbConnectionBase `json:"connection,omitempty"`
	// Model name this query uses
	ModelName string `json:"model_name,omitempty"`
	Creator UserPublic `json:"creator,omitempty"`
	// Explore page URL for this SQL query
	ExploreUrl string `json:"explore_url,omitempty"`
	// Should this query be rendered as plain text
	Plaintext bool `json:"plaintext,omitempty"`
	// Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
	VisConfig map[string]string `json:"vis_config,omitempty"`
	// ID of the ResultMakerLookup entry.
	ResultMakerId int64 `json:"result_maker_id,omitempty"`
}
