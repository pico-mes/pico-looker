/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// Dialect struct for Dialect
type Dialect struct {
	// The name of the dialect
	Name string `json:"name,omitempty"`
	// The human-readable label of the connection
	Label string `json:"label,omitempty"`
	// Whether the dialect supports query cost estimates
	SupportsCostEstimate bool `json:"supports_cost_estimate,omitempty"`
	// PDT index columns
	PersistentTableIndexes string `json:"persistent_table_indexes,omitempty"`
	// PDT sortkey columns
	PersistentTableSortkeys string `json:"persistent_table_sortkeys,omitempty"`
	// PDT distkey column
	PersistentTableDistkey string `json:"persistent_table_distkey,omitempty"`
	// Suports streaming results
	SupportsStreaming bool `json:"supports_streaming,omitempty"`
	// Should SQL Runner snippets automatically be run
	AutomaticallyRunSqlRunnerSnippets bool `json:"automatically_run_sql_runner_snippets,omitempty"`
	// Array of names of the tests that can be run on a connection using this dialect
	ConnectionTests []string `json:"connection_tests,omitempty"`
	// Is supported with the inducer (i.e. generate from sql)
	SupportsInducer bool `json:"supports_inducer,omitempty"`
	// Can multiple databases be accessed from a connection using this dialect
	SupportsMultipleDatabases bool `json:"supports_multiple_databases,omitempty"`
	// Whether the dialect supports allowing Looker to build persistent derived tables
	SupportsPersistentDerivedTables bool `json:"supports_persistent_derived_tables,omitempty"`
	// Does the database have client SSL support settable through the JDBC string explicitly?
	HasSslSupport bool `json:"has_ssl_support,omitempty"`
}
