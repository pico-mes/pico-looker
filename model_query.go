/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// Query struct for Query
type Query struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// Unique Id
	Id int64 `json:"id,omitempty"`
	// Model
	Model string `json:"model"`
	// Explore Name
	View string `json:"view"`
	// Fields
	Fields []string `json:"fields,omitempty"`
	// Pivots
	Pivots []string `json:"pivots,omitempty"`
	// Fill Fields
	FillFields []string `json:"fill_fields,omitempty"`
	// Filters
	Filters map[string]string `json:"filters,omitempty"`
	// Filter Expression
	FilterExpression string `json:"filter_expression,omitempty"`
	// Sorting for the query results. Use the format `[\"view.field\", ...]` to sort on fields in ascending order. Use the format `[\"view.field desc\", ...]` to sort on fields in descending order. Use `[\"__UNSORTED__\"]` (2 underscores before and after) to disable sorting entirely. Empty sorts `[]` will trigger a default sort.
	Sorts []string `json:"sorts,omitempty"`
	// Limit
	Limit string `json:"limit,omitempty"`
	// Column Limit
	ColumnLimit string `json:"column_limit,omitempty"`
	// Total
	Total bool `json:"total,omitempty"`
	// Raw Total
	RowTotal string `json:"row_total,omitempty"`
	// Fields on which to run subtotals
	Subtotals []string `json:"subtotals,omitempty"`
	// Visualization configuration properties. These properties are typically opaque and differ based on the type of visualization used. There is no specified set of allowed keys. The values can be any type supported by JSON. A \"type\" key with a string value is often present, and is used by Looker to determine which visualization to present. Visualizations ignore unknown vis_config properties.
	VisConfig map[string]string `json:"vis_config,omitempty"`
	// The filter_config represents the state of the filter UI on the explore page for a given query. When running a query via the Looker UI, this parameter takes precedence over \"filters\". When creating a query or modifying an existing query, \"filter_config\" should be set to null. Setting it to any other value could cause unexpected filtering behavior. The format should be considered opaque.
	FilterConfig map[string]string `json:"filter_config,omitempty"`
	// Visible UI Sections
	VisibleUiSections string `json:"visible_ui_sections,omitempty"`
	// Slug
	Slug string `json:"slug,omitempty"`
	// Dynamic Fields
	DynamicFields string `json:"dynamic_fields,omitempty"`
	// Client Id: used to generate shortened explore URLs. If set by client, must be a unique 22 character alphanumeric string. Otherwise one will be generated.
	ClientId string `json:"client_id,omitempty"`
	// Share Url
	ShareUrl string `json:"share_url,omitempty"`
	// Expanded Share Url
	ExpandedShareUrl string `json:"expanded_share_url,omitempty"`
	// Expanded Url
	Url string `json:"url,omitempty"`
	// Query Timezone
	QueryTimezone string `json:"query_timezone,omitempty"`
	// Has Table Calculations
	HasTableCalculations bool `json:"has_table_calculations,omitempty"`
}
