/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// CreateDashboardFilter struct for CreateDashboardFilter
type CreateDashboardFilter struct {
	// Unique Id
	Id string `json:"id,omitempty"`
	// Id of Dashboard
	DashboardId string `json:"dashboard_id"`
	// Name of filter
	Name string `json:"name"`
	// Title of filter
	Title string `json:"title"`
	// Type of filter: one of date, number, string, or field
	Type string `json:"type"`
	// Default value of filter
	DefaultValue string `json:"default_value,omitempty"`
	// Model of filter (required if type = field)
	Model string `json:"model,omitempty"`
	// Explore of filter (required if type = field)
	Explore string `json:"explore,omitempty"`
	// Dimension of filter (required if type = field)
	Dimension string `json:"dimension,omitempty"`
	// Field information
	Field map[string]string `json:"field,omitempty"`
	// Display order of this filter relative to other filters
	Row int64 `json:"row,omitempty"`
	// Array of listeners for faceted filters
	ListensToFilters []string `json:"listens_to_filters,omitempty"`
	// Whether the filter allows multiple filter values
	AllowMultipleValues bool `json:"allow_multiple_values,omitempty"`
	// Whether the filter requires a value to run the dashboard
	Required bool `json:"required,omitempty"`
	// The visual configuration for this filter. Used to set up how the UI for this filter should appear.
	UiConfig map[string]string `json:"ui_config,omitempty"`
}
