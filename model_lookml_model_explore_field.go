/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// LookmlModelExploreField struct for LookmlModelExploreField
type LookmlModelExploreField struct {
	// The appropriate horizontal text alignment the values of this field should be displayed in. Valid values are: \"left\", \"right\".
	Align string `json:"align,omitempty"`
	// Whether it's possible to filter on this field.
	CanFilter bool `json:"can_filter,omitempty"`
	// Field category Valid values are: \"parameter\", \"filter\", \"measure\", \"dimension\".
	Category string `json:"category,omitempty"`
	// The default value that this field uses when filtering. Null if there is no default value.
	DefaultFilterValue string `json:"default_filter_value,omitempty"`
	// Description
	Description string `json:"description,omitempty"`
	// An array enumerating all the possible values that this field can contain. When null, there is no limit to the set of possible values this field can contain.
	Enumerations []LookmlModelExploreFieldEnumeration `json:"enumerations,omitempty"`
	// An error message indicating a problem with the definition of this field. If there are no errors, this will be null.
	Error string `json:"error,omitempty"`
	// A label creating a grouping of fields. All fields with this label should be presented together when displayed in a UI.
	FieldGroupLabel string `json:"field_group_label,omitempty"`
	// When presented in a field group via field_group_label, a shorter name of the field to be displayed in that context.
	FieldGroupVariant string `json:"field_group_variant,omitempty"`
	// The style of dimension fill that is possible for this field. Null if no dimension fill is possible. Valid values are: \"enumeration\", \"range\".
	FillStyle string `json:"fill_style,omitempty"`
	// An offset (in months) from the calendar start month to the fiscal start month defined in the LookML model this field belongs to.
	FiscalMonthOffset int64 `json:"fiscal_month_offset,omitempty"`
	// Whether this field has a set of allowed_values specified in LookML.
	HasAllowedValues bool `json:"has_allowed_values,omitempty"`
	// Whether this field should be hidden from the user interface.
	Hidden bool `json:"hidden,omitempty"`
	// Whether this field is a filter.
	IsFilter bool `json:"is_filter,omitempty"`
	// Whether this field represents a fiscal time value.
	IsFiscal bool `json:"is_fiscal,omitempty"`
	// Whether this field is of a type that represents a numeric value.
	IsNumeric bool `json:"is_numeric,omitempty"`
	// Whether this field is of a type that represents a time value.
	IsTimeframe bool `json:"is_timeframe,omitempty"`
	// Whether this field can be time filtered.
	CanTimeFilter bool `json:"can_time_filter,omitempty"`
	TimeInterval LookmlModelExploreFieldTimeInterval `json:"time_interval,omitempty"`
	// Fully-qualified human-readable label of the field.
	Label string `json:"label,omitempty"`
	// The name of the parameter that will provide a parameterized label for this field, if available in the current context.
	LabelFromParameter string `json:"label_from_parameter,omitempty"`
	// The human-readable label of the field, without the view label.
	LabelShort string `json:"label_short,omitempty"`
	// A URL linking to the definition of this field in the LookML IDE.
	LookmlLink string `json:"lookml_link,omitempty"`
	MapLayer LookmlModelExploreFieldMapLayer `json:"map_layer,omitempty"`
	// Whether this field is a measure.
	Measure bool `json:"measure,omitempty"`
	// Fully-qualified name of the field.
	Name string `json:"name,omitempty"`
	// If yes, the field will not be localized with the user attribute number_format. Defaults to no
	StrictValueFormat bool `json:"strict_value_format,omitempty"`
	// Whether this field is a parameter.
	Parameter bool `json:"parameter,omitempty"`
	// Whether this field can be removed from a query.
	Permanent bool `json:"permanent,omitempty"`
	// Whether or not the field represents a primary key.
	PrimaryKey bool `json:"primary_key,omitempty"`
	// The name of the project this field is defined in.
	ProjectName string `json:"project_name,omitempty"`
	// When true, it's not possible to re-sort this field's values without re-running the SQL query, due to database logic that affects the sort.
	RequiresRefreshOnSort bool `json:"requires_refresh_on_sort,omitempty"`
	// The LookML scope this field belongs to. The scope is typically the field's view.
	Scope string `json:"scope,omitempty"`
	// Whether this field can be sorted.
	Sortable bool `json:"sortable,omitempty"`
	// The path portion of source_file_path.
	SourceFile string `json:"source_file,omitempty"`
	// The fully-qualified path of the project file this field is defined in.
	SourceFilePath string `json:"source_file_path,omitempty"`
	// SQL expression as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.
	Sql string `json:"sql,omitempty"`
	// An array of conditions and values that make up a SQL Case expression, as defined in the LookML model. The SQL syntax shown here is a representation intended for auditability, and is not neccessarily an exact match for what will ultimately be run in the database. It may contain special LookML syntax or annotations that are not valid SQL. This will be null if the current user does not have the see_lookml permission for the field's model.
	SqlCase []LookmlModelExploreFieldSqlCase `json:"sql_case,omitempty"`
	// Array of filter conditions defined for the measure in LookML.
	Filters []LookmlModelExploreFieldMeasureFilters `json:"filters,omitempty"`
	// The name of the dimension to base suggest queries from.
	SuggestDimension string `json:"suggest_dimension,omitempty"`
	// The name of the explore to base suggest queries from.
	SuggestExplore string `json:"suggest_explore,omitempty"`
	// Whether or not suggestions are possible for this field.
	Suggestable bool `json:"suggestable,omitempty"`
	// If available, a list of suggestions for this field. For most fields, a suggest query is a more appropriate way to get an up-to-date list of suggestions. Or use enumerations to list all the possible values.
	Suggestions []string `json:"suggestions,omitempty"`
	// An array of arbitrary string tags provided in the model for this field.
	Tags []string `json:"tags,omitempty"`
	// The LookML type of the field.
	Type string `json:"type,omitempty"`
	// An array of user attribute types that are allowed to be used in filters on this field. Valid values are: \"advanced_filter_string\", \"advanced_filter_number\", \"advanced_filter_datetime\", \"string\", \"number\", \"datetime\", \"relative_url\", \"yesno\", \"zipcode\".
	UserAttributeFilterTypes []string `json:"user_attribute_filter_types,omitempty"`
	// If specified, the LookML value format string for formatting values of this field.
	ValueFormat string `json:"value_format,omitempty"`
	// The name of the view this field belongs to.
	View string `json:"view,omitempty"`
	// The human-readable label of the view the field belongs to.
	ViewLabel string `json:"view_label,omitempty"`
	// Whether this field was specified in \"dynamic_fields\" and is not part of the model.
	Dynamic bool `json:"dynamic,omitempty"`
	// The name of the starting day of the week. Valid values are: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".
	WeekStartDay string `json:"week_start_day,omitempty"`
	// The number of times this field has been used in queries
	TimesUsed int64 `json:"times_used,omitempty"`
}
