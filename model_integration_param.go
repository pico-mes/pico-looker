/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// IntegrationParam struct for IntegrationParam
type IntegrationParam struct {
	// Name of the parameter.
	Name string `json:"name,omitempty"`
	// Label of the parameter.
	Label string `json:"label,omitempty"`
	// Short description of the parameter.
	Description string `json:"description,omitempty"`
	// Whether the parameter is required to be set to use the destination. If unspecified, this defaults to false.
	Required bool `json:"required,omitempty"`
	// Whether the parameter has a value set.
	HasValue bool `json:"has_value,omitempty"`
	// The current value of the parameter. Always null if the value is sensitive. When writing, null values will be ignored. Set the value to an empty string to clear it.
	Value string `json:"value,omitempty"`
	// When present, the param's value comes from this user attribute instead of the 'value' parameter. Set to null to use the 'value'.
	UserAttributeName string `json:"user_attribute_name,omitempty"`
	// Whether the parameter contains sensitive data like API credentials. If unspecified, this defaults to true.
	Sensitive bool `json:"sensitive,omitempty"`
	// When true, this parameter must be assigned to a user attribute in the admin panel (instead of a constant value), and that value may be updated by the user as part of the integration flow.
	PerUser bool `json:"per_user,omitempty"`
	// When present, the param represents the oauth url the user will be taken to.
	DelegateOauthUrl string `json:"delegate_oauth_url,omitempty"`
}
