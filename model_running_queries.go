/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// RunningQueries struct for RunningQueries
type RunningQueries struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// Unique Id
	Id int64 `json:"id,omitempty"`
	User UserPublic `json:"user,omitempty"`
	Query Query `json:"query,omitempty"`
	SqlQuery SqlQuery `json:"sql_query,omitempty"`
	Look LookBasic `json:"look,omitempty"`
	// Date/Time Query was initiated
	CreatedAt string `json:"created_at,omitempty"`
	// Date/Time Query was completed
	CompletedAt string `json:"completed_at,omitempty"`
	// Query Id
	QueryId string `json:"query_id,omitempty"`
	// Source (look, dashboard, queryrunner, explore, etc.)
	Source string `json:"source,omitempty"`
	// Node Id
	NodeId string `json:"node_id,omitempty"`
	// Slug
	Slug string `json:"slug,omitempty"`
	// ID of a Query Task
	QueryTaskId string `json:"query_task_id,omitempty"`
	// Cache Key
	CacheKey string `json:"cache_key,omitempty"`
	// Connection
	ConnectionName string `json:"connection_name,omitempty"`
	// Dialect
	Dialect string `json:"dialect,omitempty"`
	// Connection ID
	ConnectionId string `json:"connection_id,omitempty"`
	// Additional Information(Error message or verbose status)
	Message string `json:"message,omitempty"`
	// Status description
	Status string `json:"status,omitempty"`
	// Number of seconds elapsed running the Query
	Runtime float64 `json:"runtime,omitempty"`
	// SQL text of the query as run
	Sql string `json:"sql,omitempty"`
}
