/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
import (
	"time"
)
// Look struct for Look
type Look struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// Id of content metadata
	ContentMetadataId int64 `json:"content_metadata_id,omitempty"`
	// Unique Id
	Id int64 `json:"id,omitempty"`
	// Look Title
	Title string `json:"title,omitempty"`
	// User Id
	UserId int64 `json:"user_id,omitempty"`
	// Content Favorite Id
	ContentFavoriteId int64 `json:"content_favorite_id,omitempty"`
	// Time that the Look was created.
	CreatedAt time.Time `json:"created_at,omitempty"`
	// Whether or not a look is 'soft' deleted.
	Deleted bool `json:"deleted,omitempty"`
	// Time that the Look was deleted.
	DeletedAt time.Time `json:"deleted_at,omitempty"`
	// Id of User that deleted the look.
	DeleterId int64 `json:"deleter_id,omitempty"`
	// Description
	Description string `json:"description,omitempty"`
	// Embed Url
	EmbedUrl string `json:"embed_url,omitempty"`
	// Excel File Url
	ExcelFileUrl string `json:"excel_file_url,omitempty"`
	// Number of times favorited
	FavoriteCount int64 `json:"favorite_count,omitempty"`
	// Google Spreadsheet Formula
	GoogleSpreadsheetFormula string `json:"google_spreadsheet_formula,omitempty"`
	// Image Embed Url
	ImageEmbedUrl string `json:"image_embed_url,omitempty"`
	// auto-run query when Look viewed
	IsRunOnLoad bool `json:"is_run_on_load,omitempty"`
	// Time that the Look was last accessed by any user
	LastAccessedAt time.Time `json:"last_accessed_at,omitempty"`
	// Id of User that last updated the look.
	LastUpdaterId int64 `json:"last_updater_id,omitempty"`
	// Time last viewed in the Looker web UI
	LastViewedAt time.Time `json:"last_viewed_at,omitempty"`
	Model LookModel `json:"model,omitempty"`
	// Is Public
	Public bool `json:"public,omitempty"`
	// Public Slug
	PublicSlug string `json:"public_slug,omitempty"`
	// Public Url
	PublicUrl string `json:"public_url,omitempty"`
	// Query Id
	QueryId int64 `json:"query_id,omitempty"`
	// Short Url
	ShortUrl string `json:"short_url,omitempty"`
	Folder FolderBase `json:"folder,omitempty"`
	// Folder Id
	FolderId string `json:"folder_id,omitempty"`
	// Time that the Look was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`
	// Number of times viewed in the Looker web UI
	ViewCount int64 `json:"view_count,omitempty"`
}
