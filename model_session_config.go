/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// SessionConfig struct for SessionConfig
type SessionConfig struct {
	// Operations the current user is able to perform on this object
	Can map[string]bool `json:"can,omitempty"`
	// Allow users to have persistent sessions when they login
	AllowPersistentSessions bool `json:"allow_persistent_sessions,omitempty"`
	// Number of minutes for user sessions.  Must be between 5 and 43200
	SessionMinutes int64 `json:"session_minutes,omitempty"`
	// Allow users to have an unbounded number of concurrent sessions (otherwise, users will be limited to only one session at a time).
	UnlimitedSessionsPerUser bool `json:"unlimited_sessions_per_user,omitempty"`
	// Enforce session logout for sessions that are inactive for 15 minutes.
	UseInactivityBasedLogout bool `json:"use_inactivity_based_logout,omitempty"`
	// Track location of session when user logs in.
	TrackSessionLocation bool `json:"track_session_location,omitempty"`
}
