/*
 * Looker API 4.0 (Experimental) Reference
 *
 *  Welcome to the future! This is an early preview of our next-generation Looker API 4.0. API 4.0 runs alongside APIs 3.1 and 3.0. We've tagged 4.0 as \"experimental\" to reflect that we have more work planned for API 4.0 which may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### In This Release  We're spinning up this new API 4.0 version so that we can make adjustments to our API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Java, and more. Looker is also creating client SDKs to call the Looker API from these and other languages. These client SDKs will be available as pre-built packages for download from public repositories such as npmjs.org, RubyGems.org, PyPi.org. If you use an IDE for software development, you will soon be able to install a Looker SDK for your programming language with the click of a button!  While API 3.1 is still the defacto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity will gradually shift to API 4.0.  
 *
 * API version: 4.0.7.18
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package looker
// ScheduledPlanDestination struct for ScheduledPlanDestination
type ScheduledPlanDestination struct {
	// Unique Id
	Id int64 `json:"id,omitempty"`
	// Id of a scheduled plan you own
	ScheduledPlanId int64 `json:"scheduled_plan_id,omitempty"`
	// The data format to send to the given destination. Supported formats vary by destination, but include: \"txt\", \"csv\", \"inline_json\", \"json\", \"json_detail\", \"xlsx\", \"html\", \"wysiwyg_pdf\", \"assembled_pdf\", \"wysiwyg_png\"
	Format string `json:"format,omitempty"`
	// Are values formatted? (containing currency symbols, digit separators, etc.
	ApplyFormatting bool `json:"apply_formatting,omitempty"`
	// Whether visualization options are applied to the results.
	ApplyVis bool `json:"apply_vis,omitempty"`
	// Address for recipient. For email e.g. 'user@example.com'. For webhooks e.g. 'https://domain/path'. For Amazon S3 e.g. 's3://bucket-name/path/'. For SFTP e.g. 'sftp://host-name/path/'. 
	Address string `json:"address,omitempty"`
	// Whether the recipient is a Looker user on the current instance (only applicable for email recipients)
	LookerRecipient bool `json:"looker_recipient,omitempty"`
	// Type of the address ('email', 'webhook', 's3', or 'sftp')
	Type string `json:"type,omitempty"`
	// JSON object containing parameters for external scheduling. For Amazon S3, this requires keys and values for access_key_id and region. For SFTP, this requires a key and value for username.
	Parameters string `json:"parameters,omitempty"`
	// (Write-Only) JSON object containing secret parameters for external scheduling. For Amazon S3, this requires a key and value for secret_access_key. For SFTP, this requires a key and value for password.
	SecretParameters string `json:"secret_parameters,omitempty"`
	// Optional message to be included in scheduled emails
	Message string `json:"message,omitempty"`
}
